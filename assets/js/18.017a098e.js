(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{587:function(s,v,e){s.exports=e.p+"assets/img/image-20210324003018848.dff701c6.png"},588:function(s,v,e){s.exports=e.p+"assets/img/image-20210324003439382.7388bd9e.png"},589:function(s,v,e){s.exports=e.p+"assets/img/image-20210324003657003.7e9a9f6a.png"},590:function(s,v,e){s.exports=e.p+"assets/img/image-20210324005153814.300a68c8.png"},591:function(s,v,e){s.exports=e.p+"assets/img/image-20210324010220814.9d443e9a.png"},757:function(s,v,e){"use strict";e.r(v);var _=e(11),t=Object(_.a)({},(function(){var s=this,v=s.$createElement,_=s._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[_("h1",{attrs:{id:"过期键删除、逐出策略"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#过期键删除、逐出策略"}},[s._v("#")]),s._v(" 过期键删除、逐出策略")]),s._v(" "),_("h2",{attrs:{id:"🔥expire-pexpire-设置、更新生存时间"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#🔥expire-pexpire-设置、更新生存时间"}},[s._v("#")]),s._v(" 🔥EXPIRE / PEXPIRE 设置、更新生存时间")]),s._v(" "),_("div",{staticClass:"language-bash line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-bash"}},[_("code",[s._v("expire key seconds\npexpire key milliseconds\n")])]),s._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[s._v("1")]),_("br"),_("span",{staticClass:"line-number"},[s._v("2")]),_("br")])]),_("p",[s._v("EXPIRE命令和PEXPIRE命令在生存时间设置成功时返回1；如果用户给定的键并不存在，那么命令返回0表示设置失败。")]),s._v(" "),_("p",[s._v("对一个已经带有生存时间的键执行EXPIRE命令或PEXPIRE命令时，键原有的生存时间将会被"),_("strong",[s._v("移除")]),s._v("，并"),_("strong",[s._v("设置新的生存时间")])]),s._v(" "),_("p",[s._v("注意：")]),s._v(" "),_("p",[s._v("SET 命令有 EX、PX 选项，无需再使用 SETEX、SETPX、EXPIRE（即使是更新，也无需使用）")]),s._v(" "),_("p",[s._v("可以减少命令的调用数量并提升程序的执行速度之外，更重要的是保证了操作的原子性，使得“为键设置值”和“为键设置生存时间”这两个操作可以一起执行。当然后续可以通过事务来解决！")]),s._v(" "),_("h2",{attrs:{id:"🔥expireat-pexpireat-设置、更新过期时间"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#🔥expireat-pexpireat-设置、更新过期时间"}},[s._v("#")]),s._v(" 🔥EXPIREAT / PEXPIREAT 设置、更新过期时间")]),s._v(" "),_("div",{staticClass:"language-bash line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-bash"}},[_("code",[s._v("expireat key timestamp\npexpireat key milliseconds-timestamp\n")])]),s._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[s._v("1")]),_("br"),_("span",{staticClass:"line-number"},[s._v("2")]),_("br")])]),_("p",[s._v("通过设置过期时间（expire time），让Redis在指定UNIX时间来临之后自动移除给定的键")]),s._v(" "),_("ul",[_("li",[s._v("EXPIREAT命令接受一个键和一个秒级精度的UNIX时间戳为参数，当系统的当前UNIX时间超过命令指定的UNIX时间时，给定的键就会被移除")]),s._v(" "),_("li",[s._v("PEXPIREAT命令接受一个键和一个毫秒级精度的UNIX时间戳为参数，当系统的当前UNIX时间超过命令指定的UNIX时间时，给定的键就会被移除")])]),s._v(" "),_("h2",{attrs:{id:"自动过期特性的不足之处"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#自动过期特性的不足之处"}},[s._v("#")]),s._v(" 自动过期特性的不足之处")]),s._v(" "),_("p",[s._v("EXPIRE、PEXIRE、EXPIREAT、PEXPIREAT，它们都只能对整个键进行设置，而无法对键中的某个元素进行设置，比如，用户只能对整个集合或者整个散列设置生存时间/过期时间，但是却无法为集合中的某个元素或者散列中的某个字段单独设置生存时间/过期时间，这也是目前Redis的自动过期功能的一个缺陷")]),s._v(" "),_("h2",{attrs:{id:"🔥ttl-pttl-获取键的剩余生存时间"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#🔥ttl-pttl-获取键的剩余生存时间"}},[s._v("#")]),s._v(" 🔥TTL / PTTL 获取键的剩余生存时间")]),s._v(" "),_("div",{staticClass:"language-bash line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-bash"}},[_("code",[s._v("ttl key\npttl key\n")])]),s._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[s._v("1")]),_("br"),_("span",{staticClass:"line-number"},[s._v("2")]),_("br")])]),_("p",[s._v("TTL命令将以秒为单位返回键的剩余生存时间；PTTL命令则会以毫秒为单位返回键的剩余生存时间")]),s._v(" "),_("ul",[_("li",[_("p",[s._v("如果给定的"),_("strong",[s._v("键存在")]),s._v("，但是并"),_("strong",[s._v("没有设置生存时间或者过期时间")]),s._v("，即"),_("strong",[s._v("永久存在")]),s._v("，那么TTL命令和PTTL命令将"),_("strong",[s._v("返回-1")])])]),s._v(" "),_("li",[_("p",[s._v("如果给定的键"),_("strong",[s._v("已经过期、被删除、未定义")]),s._v("，即"),_("strong",[s._v("键并不存在")]),s._v("、，那么TTL命令和PTTL命令将"),_("strong",[s._v("返回-2")])]),s._v(" "),_("p",[s._v("注意："),_("strong",[s._v("过期的键不会立刻被删除")]),s._v("！但理论上就是不存在！")])])]),s._v(" "),_("p",[s._v("TTL命令的精度问题")]),s._v(" "),_("p",[s._v("出现这种情况的原因在于TTL命令只能返回秒级精度的生存时间，所以当给定键的剩余生存时间不足1s时，TTL命令只能返回0作为结果。这时，如果使用精度更高的PTTL命令去检查这些键，就会看到它们实际的剩余生存时间")]),s._v(" "),_("h2",{attrs:{id:"🔥过期键删除策略"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#🔥过期键删除策略"}},[s._v("#")]),s._v(" 🔥过期键删除策略")]),s._v(" "),_("h3",{attrs:{id:"🔥时效性数据的存储结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#🔥时效性数据的存储结构"}},[s._v("#")]),s._v(" 🔥时效性数据的存储结构")]),s._v(" "),_("p",[_("img",{attrs:{src:e(587),alt:"image-20210324003018848"}})]),s._v(" "),_("p",[_("strong",[s._v("数据库键的过期时间都保存在过期字典中，如上图")])]),s._v(" "),_("p",[s._v("数据删除策略的目标：在内存占用与CPU占用之间寻找一种"),_("strong",[s._v("平衡")]),s._v("，不是为了立刻删除数据，顾此失彼都会造成整体redis性能的下降，甚至引发服务器宕机或内存泄露")]),s._v(" "),_("h3",{attrs:{id:"定时（器）删除"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#定时（器）删除"}},[s._v("#")]),s._v(" 定时（器）删除")]),s._v(" "),_("ul",[_("li",[s._v("创建一个"),_("strong",[s._v("定时器")]),s._v("，当key设置有过期时间，且过期时间到达时，由定时器任务立即执行对键的删除操作")]),s._v(" "),_("li",[s._v("优点：节约内存，到时就删除，快速释放掉不必要的内存占用")]),s._v(" "),_("li",[s._v("缺点：CPU压力很大，无论CPU此时负载量多高，均占用CPU，会影响redis服务器响应时间和指令吞吐量")]),s._v(" "),_("li",[s._v("总结：用"),_("strong",[s._v("处理器性能换取存储空间")]),s._v("（"),_("strong",[s._v("拿时间换空间")]),s._v("）")])]),s._v(" "),_("img",{staticStyle:{zoom:"50%"},attrs:{src:e(588),alt:"image-20210324003439382"}}),s._v(" "),_("h3",{attrs:{id:"🔥惰性删除"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#🔥惰性删除"}},[s._v("#")]),s._v(" 🔥惰性删除")]),s._v(" "),_("ul",[_("li",[_("p",[s._v("数据到达过期时间，不做处理。等"),_("strong",[s._v("下次访问该数据时")])]),s._v(" "),_("ul",[_("li",[s._v("如果未过期，返回数据")]),s._v(" "),_("li",[_("strong",[s._v("发现已过期，删除，返回不存在")])])])]),s._v(" "),_("li",[_("p",[s._v("优点：节约CPU性能，发现必须删除的时候才删除")])]),s._v(" "),_("li",[_("p",[s._v("缺点："),_("strong",[s._v("内存压力很大")]),s._v("，出现长期占用内存的数据")])]),s._v(" "),_("li",[_("p",[s._v("总结："),_("strong",[s._v("用存储空间换取处理器性能")]),s._v("（"),_("strong",[s._v("拿空间换时间")]),s._v("）")])])]),s._v(" "),_("img",{staticStyle:{zoom:"50%"},attrs:{src:e(589),alt:"image-20210324003657003"}}),s._v(" "),_("h3",{attrs:{id:"🔥定期删除"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#🔥定期删除"}},[s._v("#")]),s._v(" 🔥定期删除")]),s._v(" "),_("p",[s._v("上述2种方案的折中方案：")]),s._v(" "),_("ul",[_("li",[_("p",[s._v("Redis启动服务器初始化时，读取配置"),_("code",[s._v("server.hz")]),s._v("的值，默认为10")])]),s._v(" "),_("li",[_("p",[s._v("每秒钟执行"),_("code",[s._v("server.hz")]),s._v("次"),_("code",[s._v("serverCron()")]),s._v("—>"),_("code",[s._v("databasesCron()")]),s._v("—>"),_("code",[s._v("activeExpireCycle()")])])]),s._v(" "),_("li",[_("p",[_("code",[s._v("activeExpireCycle()")]),s._v("对每个"),_("code",[s._v("expires[x]")]),s._v("逐一进行检测，每次执行"),_("code",[s._v("250ms/server.hz")])])]),s._v(" "),_("li",[_("p",[s._v("对某个expires[x]检测时，随机挑选W个key检测")]),s._v(" "),_("ul",[_("li",[s._v("如果key超时，删除key（类似惰性删除）")]),s._v(" "),_("li",[s._v("如果一轮中删除的key的数量>W")]),s._v(" "),_("li",[s._v("如果一轮中删除的key的数量≤W*25%，检查下一个expires[x]，0-15循环")]),s._v(" "),_("li",[s._v("W取值=ACTIVE_EXPIRE_CYCLE_LOOKUPS_PER_LOOP属性值")])])]),s._v(" "),_("li",[_("p",[s._v("参数"),_("code",[s._v("current_db")]),s._v("用于记录"),_("code",[s._v("activeExpireCycle()")]),s._v("进入哪个"),_("code",[s._v("expires[x]")]),s._v(" 执行")])]),s._v(" "),_("li",[_("p",[s._v("如果"),_("code",[s._v("activeExpireCycle()")]),s._v("执行时间到期，下次从"),_("code",[s._v("current_db")]),s._v("继续向下执行")])])]),s._v(" "),_("img",{staticStyle:{zoom:"50%"},attrs:{src:e(590),alt:"image-20210324005153814"}}),s._v(" "),_("p",[s._v("总结：")]),s._v(" "),_("ul",[_("li",[s._v("概念：周期性轮询redis库中的时效性数据，采用随机抽取的策略，利用过期数据占比的方式控制删除频度")]),s._v(" "),_("li",[s._v("特点1:CPU性能占用设置有峰值，检测频度可自定义设置")]),s._v(" "),_("li",[s._v("特点2:内存压力不是很大，长期占用内存的冷数据会被持续清理")]),s._v(" "),_("li",[s._v("总结:周期性抽查存储空间(随机抽查，重点抽查)")])]),s._v(" "),_("h3",{attrs:{id:"🔥对比总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#🔥对比总结"}},[s._v("#")]),s._v(" 🔥对比总结")]),s._v(" "),_("ul",[_("li",[_("p",[s._v("定时删除")]),s._v(" "),_("ul",[_("li",[s._v("节约内存，无占用")]),s._v(" "),_("li",[s._v("不分时段占用CPU资源，频度高")]),s._v(" "),_("li",[s._v("拿时间换空间")])])]),s._v(" "),_("li",[_("p",[s._v("惰性删除")]),s._v(" "),_("ul",[_("li",[s._v("内存占用严重")]),s._v(" "),_("li",[s._v("延时执行，CPU利用率高")]),s._v(" "),_("li",[s._v("拿空间换时间")])])]),s._v(" "),_("li",[_("p",[s._v("定期删除")]),s._v(" "),_("ul",[_("li",[s._v("内存定期随机清理")]),s._v(" "),_("li",[s._v("每秒花费固定的CPU资源维护内存")]),s._v(" "),_("li",[s._v("随机抽查，重点抽查")])])])]),s._v(" "),_("p",[s._v("Redis服务器实际使用的是"),_("strong",[s._v("惰性删除")]),s._v("和"),_("strong",[s._v("定期删除")]),s._v("两种策略：通过"),_("strong",[s._v("配合")]),s._v("使用这两种删除策略，服务器可以很好地在合理使用CPU时间和避免浪费内存空间之间取得"),_("strong",[s._v("平衡")])]),s._v(" "),_("h2",{attrs:{id:"🔥逐出策略"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#🔥逐出策略"}},[s._v("#")]),s._v(" 🔥逐出策略")]),s._v(" "),_("h3",{attrs:{id:"新数据进入检测"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#新数据进入检测"}},[s._v("#")]),s._v(" 新数据进入检测")]),s._v(" "),_("p",[s._v("当新数据进入redis时，如果内存不足怎么办?")]),s._v(" "),_("ul",[_("li",[_("p",[s._v("Redis使用内存存储数据，在执行每一个命令前，会调用"),_("code",[s._v("freeMemoryIfNeeded()")]),_("strong",[s._v("检测内存是否充足")]),s._v("。如果内存不满足新加入数据的最低存储要求，redis要"),_("strong",[s._v("临时删除一些数据为当前指令清理存储空间")]),s._v("。清理数据的策略称为逐出算法。")])]),s._v(" "),_("li",[_("p",[s._v("注意：逐出数据的过程"),_("strong",[s._v("不是100%能够清理出足够的可使用的内存空间")]),s._v("，如果"),_("strong",[s._v("不成功则反复执行")]),s._v("。当"),_("strong",[s._v("对所有数据尝试完毕后，如果还不能达到内存清理的要求，将出现错误信息")]),s._v("。")]),s._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[s._v("(error) OOM command not allowed when used memory >'maxmemory'\n")])]),s._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[s._v("1")]),_("br")])])])]),s._v(" "),_("h3",{attrs:{id:"影响数据逐出的相关配置"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#影响数据逐出的相关配置"}},[s._v("#")]),s._v(" 影响数据逐出的相关配置")]),s._v(" "),_("ul",[_("li",[_("p",[s._v("最大可使用内存")]),s._v(" "),_("p",[s._v("占用物理内存的比例，默认值为0，表示不限制。生产环境中根据需求设定，通常设置在50%以上。")]),s._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[s._v("maxmemory\n")])]),s._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[s._v("1")]),_("br")])])]),s._v(" "),_("li",[_("p",[s._v("每次选取待删除数据的个数")]),s._v(" "),_("p",[s._v("选取数据时并不会全库扫描，导致严重的性能消耗，降低读写性能。因此采用随机获取数据的方式作为待检测删除数据")]),s._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[s._v("maxmemory-samples\n")])]),s._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[s._v("1")]),_("br")])])]),s._v(" "),_("li",[_("p",[_("strong",[s._v("删除策略")])]),s._v(" "),_("p",[s._v("达到最大内存后的，对被挑选出来的数据进行删除的策略。如下"),_("strong",[s._v("8种策略")])]),s._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[s._v("maxmemory-policy\n")])]),s._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[s._v("1")]),_("br")])])])]),s._v(" "),_("h3",{attrs:{id:"🔥8种逐出策略"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#🔥8种逐出策略"}},[s._v("#")]),s._v(" 🔥8种逐出策略")]),s._v(" "),_("ul",[_("li",[_("p",[s._v("检测"),_("strong",[s._v("易失数据")]),s._v("(可能会过期的数据集server.db[i].expires )")]),s._v(" "),_("ul",[_("li",[_("p",[s._v("volatile-lru:挑选最近最少使用的数据淘汰。推荐！🔥")])]),s._v(" "),_("li",[_("p",[s._v("volatile-lfu:挑选最近使用次数最少的数据淘汰")]),s._v(" "),_("p",[_("img",{attrs:{src:e(591),alt:"image-20210324010220814"}})])]),s._v(" "),_("li",[_("p",[s._v("volatile-ttl:挑选将要过期的数据淘汰")])]),s._v(" "),_("li",[_("p",[s._v("volatile-random:任意选择数据淘汰")])])])]),s._v(" "),_("li",[_("p",[s._v("检测"),_("strong",[s._v("全库数据")]),s._v("(所有数据集server.db[i].dict )")]),s._v(" "),_("ul",[_("li",[s._v("allkeys-lru:挑选最近最少使用的数据淘汰")]),s._v(" "),_("li",[s._v("allkeys-lfu:挑选最近使用次数最少的数据淘汰")]),s._v(" "),_("li",[s._v("allkeys-random:任意选择数据淘汰")])])]),s._v(" "),_("li",[_("p",[_("strong",[s._v("放弃数据驱逐")])]),s._v(" "),_("ul",[_("li",[s._v("no-enviction(驱逐)："),_("strong",[s._v("禁止驱逐数据")]),s._v("(redis4.0中默认策略)，会引发错误OOM(Out Of Memory)")])])])]),s._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),_("p",[s._v("使用INFO命令输出监控信息，查询缓存 hit 和 miss 的次数，根据业务需求调优Redis配置")])]),s._v(" "),_("h2",{attrs:{id:"persist-时效转永久"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#persist-时效转永久"}},[s._v("#")]),s._v(" PERSIST 时效转永久")]),s._v(" "),_("div",{staticClass:"language-bash line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-bash"}},[_("code",[s._v("persist key\n")])]),s._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[s._v("1")]),_("br")])])])}),[],!1,null,null,null);v.default=t.exports}}]);