(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{730:function(s,t,a){"use strict";a.r(t);var n=a(11),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"dql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dql"}},[s._v("#")]),s._v(" DQL")]),s._v(" "),a("h2",{attrs:{id:"准备表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#准备表"}},[s._v("#")]),s._v(" 准备表")]),s._v(" "),a("p",[a("strong",[s._v("学生基本信息表的结构")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" student_info "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    number "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PRIMARY")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VARCHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    sex "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENUM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'男'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'女'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    id_number "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    department "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VARCHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    major "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VARCHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    enrollment_time "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNIQUE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id_number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[a("strong",[s._v("学生成绩表的结构")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" student_score "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    number "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    subject "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VARCHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    score "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TINYINT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PRIMARY")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" subject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CONSTRAINT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FOREIGN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("REFERENCES")]),s._v(" student_info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"为表填入数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为表填入数据"}},[s._v("#")]),s._v(" 为表填入数据")]),s._v(" "),a("p",[s._v("我们给这两个表插入一些数据：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> INSERT INTO student_info(number, name, sex, id_number, department, major, enrollment_time) VALUES\n    ->     (20180101, '杜子腾', '男', '158177199901044792', '计算机学院', '计算机科学与工程', '2018-09-01'),\n    ->     (20180102, '杜琦燕', '女', '151008199801178529', '计算机学院', '计算机科学与工程', '2018-09-01'),\n    ->     (20180103, '范统', '男', '17156319980116959X', '计算机学院', '软件工程', '2018-09-01'),\n    ->     (20180104, '史珍香', '女', '141992199701078600', '计算机学院', '软件工程', '2018-09-01'),\n    ->     (20180105, '范剑', '男', '181048199308156368', '航天学院', '飞行器设计', '2018-09-01'),\n    ->     (20180106, '朱逸群', '男', '197995199501078445', '航天学院', '电子信息', '2018-09-01');\nQuery OK, 6 rows affected (0.01 sec)\nRecords: 6  Duplicates: 0  Warnings: 0\n\nmysql> INSERT INTO student_score (number, subject, score) VALUES\n    ->     (20180101, '母猪的产后护理', 78),\n    ->     (20180101, '论萨达姆的战争准备', 88),\n    ->     (20180102, '母猪的产后护理', 100),\n    ->     (20180102, '论萨达姆的战争准备', 98),\n    ->     (20180103, '母猪的产后护理', 59),\n    ->     (20180103, '论萨达姆的战争准备', 61),\n    ->     (20180104, '母猪的产后护理', 55),\n    ->     (20180104, '论萨达姆的战争准备', 46);\nQuery OK, 8 rows affected (0.00 sec)\nRecords: 8  Duplicates: 0  Warnings: 0\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("p",[s._v("现在这两个表中的数据就如下所示了：")]),s._v(" "),a("p",[a("strong",[s._v("student_info表")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("number")]),s._v(" "),a("th",[s._v("name")]),s._v(" "),a("th",[s._v("sex")]),s._v(" "),a("th",[s._v("id_number")]),s._v(" "),a("th",[s._v("department")]),s._v(" "),a("th",[s._v("major")]),s._v(" "),a("th",[s._v("enrollment_time")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("20180101")]),s._v(" "),a("td",[s._v("杜子腾")]),s._v(" "),a("td",[s._v("男")]),s._v(" "),a("td",[s._v("158177199901044792")]),s._v(" "),a("td",[s._v("计算机学院")]),s._v(" "),a("td",[s._v("计算机科学与工程")]),s._v(" "),a("td",[s._v("2018-09-01")])]),s._v(" "),a("tr",[a("td",[s._v("20180102")]),s._v(" "),a("td",[s._v("杜琦燕")]),s._v(" "),a("td",[s._v("女")]),s._v(" "),a("td",[s._v("151008199801178529")]),s._v(" "),a("td",[s._v("计算机学院")]),s._v(" "),a("td",[s._v("计算机科学与工程")]),s._v(" "),a("td",[s._v("2018-09-01")])]),s._v(" "),a("tr",[a("td",[s._v("20180103")]),s._v(" "),a("td",[s._v("范统")]),s._v(" "),a("td",[s._v("男")]),s._v(" "),a("td",[s._v("17156319980116959X")]),s._v(" "),a("td",[s._v("计算机学院")]),s._v(" "),a("td",[s._v("软件工程")]),s._v(" "),a("td",[s._v("2018-09-01")])]),s._v(" "),a("tr",[a("td",[s._v("20180104")]),s._v(" "),a("td",[s._v("史珍香")]),s._v(" "),a("td",[s._v("女")]),s._v(" "),a("td",[s._v("141992199701078600")]),s._v(" "),a("td",[s._v("计算机学院")]),s._v(" "),a("td",[s._v("软件工程")]),s._v(" "),a("td",[s._v("2018-09-01")])]),s._v(" "),a("tr",[a("td",[s._v("20180105")]),s._v(" "),a("td",[s._v("范剑")]),s._v(" "),a("td",[s._v("男")]),s._v(" "),a("td",[s._v("181048200008156368")]),s._v(" "),a("td",[s._v("航天学院")]),s._v(" "),a("td",[s._v("飞行器设计")]),s._v(" "),a("td",[s._v("2018-09-01")])]),s._v(" "),a("tr",[a("td",[s._v("20180106")]),s._v(" "),a("td",[s._v("朱逸群")]),s._v(" "),a("td",[s._v("男")]),s._v(" "),a("td",[s._v("197995199801078445")]),s._v(" "),a("td",[s._v("航天学院")]),s._v(" "),a("td",[s._v("电子信息")]),s._v(" "),a("td",[s._v("2018-09-01")])])])]),s._v(" "),a("p",[a("strong",[s._v("student_score表")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("number")]),s._v(" "),a("th",[s._v("subject")]),s._v(" "),a("th",[s._v("score")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("20180101")]),s._v(" "),a("td",[s._v("母猪的产后护理")]),s._v(" "),a("td",[s._v("78")])]),s._v(" "),a("tr",[a("td",[s._v("20180101")]),s._v(" "),a("td",[s._v("论萨达姆的战争准备")]),s._v(" "),a("td",[s._v("88")])]),s._v(" "),a("tr",[a("td",[s._v("20180102")]),s._v(" "),a("td",[s._v("母猪的产后护理")]),s._v(" "),a("td",[s._v("100")])]),s._v(" "),a("tr",[a("td",[s._v("20180102")]),s._v(" "),a("td",[s._v("论萨达姆的战争准备")]),s._v(" "),a("td",[s._v("98")])]),s._v(" "),a("tr",[a("td",[s._v("20180103")]),s._v(" "),a("td",[s._v("母猪的产后护理")]),s._v(" "),a("td",[s._v("59")])]),s._v(" "),a("tr",[a("td",[s._v("20180103")]),s._v(" "),a("td",[s._v("论萨达姆的战争准备")]),s._v(" "),a("td",[s._v("61")])]),s._v(" "),a("tr",[a("td",[s._v("20180104")]),s._v(" "),a("td",[s._v("母猪的产后护理")]),s._v(" "),a("td",[s._v("55")])]),s._v(" "),a("tr",[a("td",[s._v("20180104")]),s._v(" "),a("td",[s._v("论萨达姆的战争准备")]),s._v(" "),a("td",[s._v("46")])])])]),s._v(" "),a("p",[s._v("好了，表的填充工作也已经做完了～ 终于可以开始查询数据了！")]),s._v(" "),a("h2",{attrs:{id:"顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#顺序"}},[s._v("#")]),s._v(" 顺序")]),s._v(" "),a("p",[a("strong",[s._v("FROM、WHERE、GROUP BY、HAVING、SELECT、ORDER BY、LIMIT")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DISTINCT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 查询列表\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" 表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" 布尔表达式"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GROUP")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" 分组列表 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("HAVING")]),s._v(" 分组过滤条件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ORDER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" 排序列表"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LIMIT")]),s._v(" 开始行"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 限制条数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h2",{attrs:{id:"基本查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本查询"}},[s._v("#")]),s._v(" 基本查询")]),s._v(" "),a("h3",{attrs:{id:"查询列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询列"}},[s._v("#")]),s._v(" 查询列")]),s._v(" "),a("p",[s._v("查看某个表中的某一列的数据的通用格式是这样：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" 列名"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 列的别名 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 列名"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 列的别名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" 列名n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 列的别名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" 表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("别名只是在本次查询的到的结果集中展示，而不会改变真实表中的列名")]),s._v(" "),a("p",[s._v("如果需要把记录中的所有列都查出来，"),a("code",[s._v("MySQL")]),s._v("也提供一个省事儿的办法，我们之前也介绍过，就是直接用星号"),a("code",[s._v("*")]),s._v("来表示要查询的东西，就像这样：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" 表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这个命令我们之前看过了，就不多唠叨了。不过需要注意的是，除非你确实需要表中的每个列，否则一般最好别使用星号"),a("code",[s._v("*")]),s._v("来查询所有列，虽然星号"),a("code",[s._v("*")]),s._v("看起来很方便，不用明确列出所需的列，但是查询不需要的列通常会降低性能。")]),s._v(" "),a("h3",{attrs:{id:"列别名注意"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#列别名注意"}},[s._v("#")]),s._v(" 列别名注意")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("在"),a("strong",[s._v("GROUP BY")]),s._v("子句中写了列的别名（MySQL 和 PostgreSQL 可以这样写，对查询做了增强）🔥")]),s._v(" "),a("p",[a("strong",[s._v("由于SQL的执行顺序为SELECT最后，所以 SELECT 的别名不能用做GROUP BY中。但实际上 MySQL 可以！")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("在 HAVING 中使用了列的别名")]),s._v("，可以使用！！！")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("在 ORDER BY 中使用了列的别名")]),s._v("，可以使用！！！")])])]),s._v(" "),a("h3",{attrs:{id:"查询结果去重"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询结果去重"}},[s._v("#")]),s._v(" 查询结果去重")]),s._v(" "),a("p",[a("code",[s._v("DISTINCT")]),a("strong",[s._v("只能放在第一列之前")])]),s._v(" "),a("h4",{attrs:{id:"去除单列的重复结果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#去除单列的重复结果"}},[s._v("#")]),s._v(" 去除单列的重复结果")]),s._v(" "),a("p",[s._v("如果我们想去除重复结果的话，可以将"),a("code",[s._v("DISTINCT")]),s._v("放在被查询的列前边，就是这样：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DISTINCT")]),s._v(" 列名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" 表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"去除多列的重复结果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#去除多列的重复结果"}},[s._v("#")]),s._v(" 去除多列的重复结果")]),s._v(" "),a("p",[s._v("对于查询多列的情况，两条结果重复的意思是："),a("strong",[s._v("两条结果的每一个列中的值都相同")]),s._v("。如果我们想对多列查询的结果去重的话，可以直接把"),a("code",[s._v("DISTINCT")]),s._v("放在被查询的列的最前边：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DISTINCT")]),s._v(" 列名"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 列名"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" 列名n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" 表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"注意"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[s._v("#")]),s._v(" 注意")]),s._v(" "),a("p",[a("strong",[s._v("NULL 也被视为一类数据。NULL 存在于多行中时，也会被合并为一条 NULL 数据")])]),s._v(" "),a("h3",{attrs:{id:"常数查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常数查询"}},[s._v("#")]),s._v(" 常数查询")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'商品'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("38")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2009-02-24'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" product_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" product_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Product"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"数字类型的列做加、减、乘、除运算-🔥"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数字类型的列做加、减、乘、除运算-🔥"}},[s._v("#")]),s._v(" 数字类型的列做加、减、乘、除运算 🔥")]),s._v(" "),a("p",[s._v("记住，"),a("strong",[s._v("列就类似变量")]),s._v("，变量当然可以做"),a("strong",[s._v("运算")]),s._v("了！")]),s._v(" "),a("p",[s._v("⚠️ 与NULL运算时，结果都为NULL。甚至NULL / 0 都是NULL。")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" sal"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.5")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" sal"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("comm "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"from子句真的有必要吗？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#from子句真的有必要吗？"}},[s._v("#")]),s._v(" FROM子句真的有必要吗？")]),s._v(" "),a("p",[s._v("实际上，通过执行 SELECT 语句来代替计算器的情况基本上是不存在的。Oracle 必须有！")]),s._v(" "),a("p",[s._v("只希望得到一行临时数据的情况，还是可以通过使用没有 FROM 子句的 SELECT 语句来实现某种业务的")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" calculation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"条件查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#条件查询"}},[s._v("#")]),s._v(" 条件查询")]),s._v(" "),a("h3",{attrs:{id:"算术运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算术运算符"}},[s._v("#")]),s._v(" 算术运算符")]),s._v(" "),a("p",[s._v("运算符：可用于列运算、条件查询")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("算术运算符")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("+")])]),s._v(" "),a("tr",[a("td",[s._v("-")])]),s._v(" "),a("tr",[a("td",[s._v("*")])]),s._v(" "),a("tr",[a("td",[s._v("/")])]),s._v(" "),a("tr",[a("td",[s._v("()")])])])]),s._v(" "),a("h3",{attrs:{id:"比较运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#比较运算符"}},[s._v("#")]),s._v(" 比较运算符")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("比较运算符")]),s._v(" "),a("th",[s._v("说明")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("=、<>、!=、<、>、<=、>=")]),s._v(" "),a("td",[s._v("对"),a("strong",[s._v("数字、日期和字符（字符按照字典顺序）"),a("strong",[s._v("等几乎所有数据类型的列和值进行比较"),a("br"),s._v(" "),a("strong",[s._v("<>在 SQL 中表示不等于")]),s._v("，很多RDBMS的方言（仅测试了MySQL、Oracle）可以使用")]),s._v("!=")]),s._v("。")])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("[NOT] BETWEEN...AND")])]),s._v(" "),a("td",[s._v("在一个范围之内，如：a between 100 and 200 相当于条件 a 在 [100 到 200] 之间")])])])]),s._v(" "),a("h3",{attrs:{id:"匹配null值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匹配null值"}},[s._v("#")]),s._v(" 匹配"),a("code",[s._v("NULL")]),s._v("值")]),s._v(" "),a("p",[s._v("我们前边说过，"),a("code",[s._v("NULL")]),s._v("代表没有值，意味着你并不知道该列应该填入什么数据，在判断某一列是否为"),a("code",[s._v("NULL")]),s._v("的时候并不能单纯的使用"),a("code",[s._v("=")]),s._v("操作符，而是需要专业判断值是否是"),a("code",[s._v("NULL")]),s._v("的操作符：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("操作符")]),s._v(" "),a("th",[s._v("示例")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("IS NULL")])]),s._v(" "),a("td",[a("code",[s._v("a IS NULL")])]),s._v(" "),a("td",[s._v("a的值是"),a("code",[s._v("NULL")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("IS NOT NULL")])]),s._v(" "),a("td",[a("code",[s._v("a IS NOT NULL")])]),s._v(" "),a("td",[s._v("a的值不是"),a("code",[s._v("NULL")])])])])]),s._v(" "),a("p",[s._v("再次强调一遍，不能直接使用普通的操作符来与"),a("code",[s._v("NULL")]),s._v("值进行比较，必须使用"),a("code",[s._v("IS NULL")]),s._v("或者"),a("code",[s._v("IS NOT NULL")]),s._v("！")]),s._v(" "),a("p",[a("strong",[s._v("NULL 运算注意 🔥")])]),s._v(" "),a("ul",[a("li",[s._v("与 NULL 运算时，结果都为 NULL。甚至 NULL / 0 都是 NULL。")]),s._v(" "),a("li",[s._v("查询 NULL 时"),a("strong",[s._v("不能使用比较运算符")]),s._v("(= 或者 <>、>、<等)，因为结果为空不满足该条件，需使用 IS [ NOT ] NULL。")]),s._v(" "),a("li",[s._v("查询 NULL 时不能使用逻辑运算符，因为结果不为真也不为假，是"),a("strong",[s._v("不确定")]),s._v("（UNKNOWN）")]),s._v(" "),a("li",[a("strong",[s._v("除了 COALESCE 及其衍生函数")]),s._v("！！")])]),s._v(" "),a("h3",{attrs:{id:"匹配列表中的元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匹配列表中的元素"}},[s._v("#")]),s._v(" 匹配列表中的元素")]),s._v(" "),a("p",[s._v("有时候搜索条件中指定的匹配值并不是单个值，而是一个列表，只要匹配到列表中的某一项就算匹配成功，这种情况可以使用"),a("code",[s._v("IN")]),s._v("操作符：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("操作符")]),s._v(" "),a("th",[s._v("示例")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("IN")])]),s._v(" "),a("td",[a("code",[s._v("a IN (b1, b2, ...)")])]),s._v(" "),a("td",[s._v("a是b1, b2, ... 中的某一个")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("NOT IN")])]),s._v(" "),a("td",[a("code",[s._v("a NOT IN (b1, b2, ...)")])]),s._v(" "),a("td",[s._v("a不是b1, b2, ... 中的任意一个")])])])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("匹配运算符")]),s._v(" "),a("th",[s._v("说明")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("strong",[s._v("[NOT] IN")]),s._v("、ALL、ANY")]),s._v(" "),a("td",[s._v("集合表示多个值，使用逗号分隔。ALL为所有，ANY为任意一个即可，可用最值替代")])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("[NOT] EXIST")])]),s._v(" "),a("td",[s._v("通常使用关联子查询作为参数（是否有该条记录，经常会使用 SELECT *）")])])])]),s._v(" "),a("p",[s._v("实际上即使不使用 EXIST，基本上也都可以使用 IN(或者 NOT IN)来代替")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" product_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sale_price\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Product "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" P "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXISTS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 关联子查询")]),s._v("\n                            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" ShopProduct "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" SP "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n                            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" SP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("shop_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'000C'")]),s._v("\n                            "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" SP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("product_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" P"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("product_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 将 Product 表和 ShopProduct 表进行了联接")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"通配符-模糊查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通配符-模糊查询"}},[s._v("#")]),s._v(" 通配符—模糊查询")]),s._v(" "),a("p",[s._v("有时候我们并不能精确的描述我们要查询的哪些结果，比方说我们只是想看看姓"),a("code",[s._v("'杜'")]),s._v("的学生信息，而不能精确的描述出这些姓"),a("code",[s._v("'杜'")]),s._v("的同学的完整姓名，我们称这种查询为"),a("code",[s._v("模糊查询")]),s._v("。"),a("code",[s._v("MySQL")]),s._v("中使用下边这两个操作符来支持"),a("code",[s._v("模糊查询")]),s._v("：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("操作符")]),s._v(" "),a("th",[s._v("示例")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("LIKE")])]),s._v(" "),a("td",[a("code",[s._v("a LIKE b")])]),s._v(" "),a("td",[s._v("a匹配b")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("NOT LIKE")])]),s._v(" "),a("td",[a("code",[s._v("a NOT LIKE b")])]),s._v(" "),a("td",[s._v("a不匹配b")])])])]),s._v(" "),a("p",[s._v("既然我们不能完整描述要查询的信息，那就用某个符号来替代这些模糊的信息，这个符号就被称为"),a("code",[s._v("通配符")]),s._v("。"),a("code",[s._v("MySQL")]),s._v("中支持下边这两个"),a("code",[s._v("通配符")]),s._v("：")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("%")]),s._v("：代表任意一个字符串。")]),s._v(" "),a("p",[s._v("比方说我们想查询"),a("code",[s._v("student_info")]),s._v("表中"),a("code",[s._v("name")]),s._v("以"),a("code",[s._v("'杜'")]),s._v("开头的记录，我们可以这样写：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT number, name, id_number, major FROM student_info WHERE name LIKE '杜%';\n+----------+-----------+--------------------+--------------------------+\n| number   | name      | id_number          | major                    |\n+----------+-----------+--------------------+--------------------------+\n| 20180101 | 杜子腾    | 158177199901044792 | 计算机科学与工程         |\n| 20180102 | 杜琦燕    | 151008199801178529 | 计算机科学与工程         |\n+----------+-----------+--------------------+--------------------------+\n2 rows in set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("或者我们只知道学生名字里边包含了一个"),a("code",[s._v("'香'")]),s._v("字，那我们可以这么查：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT number, name, id_number, major FROM student_info WHERE name LIKE '%香%';\n+----------+-----------+--------------------+--------------+\n| number   | name      | id_number          | major        |\n+----------+-----------+--------------------+--------------+\n| 20180104 | 史珍香    | 141992199701078600 | 软件工程     |\n+----------+-----------+--------------------+--------------+\n1 row in set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("_")]),s._v("：代表任意一个字符。")]),s._v(" "),a("p",[s._v("有的时候我们知道要查询的字符串中有多少个字符，而使用"),a("code",[s._v("%")]),s._v("时匹配的范围太大，我们就可以用"),a("code",[s._v("_")]),s._v("来做通配符。就像是支付宝的万能福卡，一张万能福卡能且只能代表任意一张福卡(也就是它不能代表多张福卡)。")]),s._v(" "),a("p",[s._v("比方说我们想查询姓"),a("code",[s._v("'范'")]),s._v("，并且姓名只有2个字符的记录，可以这么写：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT number, name, id_number, major FROM student_info WHERE name LIKE '范_';\n+----------+--------+--------------------+-----------------+\n| number   | name   | id_number          | major           |\n+----------+--------+--------------------+-----------------+\n| 20180103 | 范统   | 17156319980116959X | 软件工程        |\n| 20180105 | 范剑   | 181048199308156368 | 飞行器设计      |\n+----------+--------+--------------------+-----------------+\n2 rows in set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("不过下边这个查询却什么都没有查到：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT number, name, id_number, major FROM student_info WHERE name LIKE '杜_';\nEmpty set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("这是因为一个"),a("code",[s._v("_")]),s._v("只能代表一个字符（"),a("code",[s._v("%")]),s._v("是代表任意一个字符串），并且"),a("code",[s._v("student_info")]),s._v("表中并没有姓"),a("code",[s._v("'杜'")]),s._v("并且姓名长度是2个字符的记录，所以这么写是查不出东西的。")])])]),s._v(" "),a("h4",{attrs:{id:"转义通配符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转义通配符"}},[s._v("#")]),s._v(" 转义通配符")]),s._v(" "),a("p",[s._v("如果待匹配的字符串中本身就包含普通字符"),a("code",[s._v("'%'")]),s._v("或者"),a("code",[s._v("'_'")]),s._v("该咋办，怎么区分它是一个通配符还是一个普通字符呢？")]),s._v(" "),a("p",[s._v("答：如果匹配字符串中需要普通字符"),a("code",[s._v("'%'")]),s._v("或者"),a("code",[s._v("'_'")]),s._v("的话，需要在它们前边加一个反斜杠"),a("code",[s._v("\\")]),s._v("来和通配符区分开来，也就是说：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("'\\%'")]),s._v("代表普通字符"),a("code",[s._v("'%'")])]),s._v(" "),a("li",[a("code",[s._v("'\\_'")]),s._v("代表普通字符"),a("code",[s._v("'_'")]),s._v(" 比方说这样：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT number, name, id_number, major FROM student_info WHERE name LIKE '范\\_';\nEmpty set (0.00 sec)\n    \nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("由于"),a("code",[s._v("student_info")]),s._v("表中没有叫"),a("code",[s._v("范_")]),s._v("的学生，所以查询结果为空。")]),s._v(" "),a("h3",{attrs:{id:"逻辑运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[s._v("#")]),s._v(" 逻辑运算符")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("逻辑运算符")]),s._v(" "),a("th",[s._v("说明")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("strong",[s._v("AND")]),s._v("或 &&")]),s._v(" "),a("td",[s._v("与，后者并不通用；"),a("strong",[s._v("优先于OR")]),s._v("，"),a("strong",[s._v("“()”优先级最高")])])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("OR")]),s._v(" 或 ||")]),s._v(" "),a("td",[s._v("或")])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("NOT")]),s._v("或 !")]),s._v(" "),a("td",[s._v("非；WHERE NOT代表后面的表达式的非运算（但是不要滥用，不清晰）")])])])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("BETWEEN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zhangSan'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("OR")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'liSi'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("IN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zhangSan'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'liSi'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("IS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 不能使用等号")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("IS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" sale_price "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" purchase_price "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("500")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" ename "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("LIKE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'张_'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 姓张，名字由两个字组成的员工")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" ename "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("LIKE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'___'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 姓名由3个字组成的员工")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" ename "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("LIKE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'张%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 查询的是姓张的所有员工")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" ename "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("LIKE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%阿%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 查询姓名中间带有阿字的员工")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" ename "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("LIKE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 条件不存在，如果姓名为NULL的查询不出来")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("注意 0 在 MySQL 中代表 false，非 0 代表 true（如 1，-1都是 true）")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" sys_user "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"注意-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意-2"}},[s._v("#")]),s._v(" 注意")]),s._v(" "),a("p",[s._v("如果我们需要在某个查询中指定很多的搜索条件，比方说我们想从"),a("code",[s._v("student_score")]),s._v("表中找出课程为"),a("code",[s._v("'论萨达姆的战争准备'")]),s._v("，并且成绩大于"),a("code",[s._v("95")]),s._v("分或者小于"),a("code",[s._v("55")]),s._v("分的记录，那我们可能会这么写：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT * FROM student_score WHERE score > 95 OR score < 55 AND subject = '论萨达姆的战争准备';\n+----------+-----------------------------+-------+\n| number   | subject                     | score |\n+----------+-----------------------------+-------+\n| 20180102 | 母猪的产后护理              |   100 |\n| 20180102 | 论萨达姆的战争准备          |    98 |\n| 20180104 | 论萨达姆的战争准备          |    46 |\n+----------+-----------------------------+-------+\n3 rows in set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("为什么结果中仍然会有"),a("code",[s._v("'母猪的产后护理'")]),s._v("课程的记录呢？因为：AND操作符的优先级高于OR操作符，也就是说在判断某条记录是否符合条件时会先检测AND操作符两边的搜索条件。所以")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("score > 95 OR score < 55 AND subject = '论萨达姆的战争准备'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("可以被看作下边这两个条件中任一条件成立则整个式子成立：")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("score > 95")])]),s._v(" "),a("li",[a("code",[s._v("score < 55 AND subject = '论萨达姆的战争准备'")])])]),s._v(" "),a("p",[s._v("因为结果集中"),a("code",[s._v("subject")]),s._v("是"),a("code",[s._v("'母猪的产后护理'")]),s._v("的记录中"),a("code",[s._v("score")]),s._v("值为"),a("code",[s._v("100")]),s._v("，符合第1个条件，所以整条记录会被加到结果集中。为了避免这种尴尬，在一个查询中有多个搜索条件时最好使用小括号"),a("code",[s._v("()")]),s._v("来显式的指定各个搜索条件的检测顺序，比如上边的例子可以写成下边这样：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT * FROM student_score WHERE (score > 95 OR score < 55) AND subject = '论萨达姆的战争准备';\n+----------+-----------------------------+-------+\n| number   | subject                     | score |\n+----------+-----------------------------+-------+\n| 20180102 | 论萨达姆的战争准备          |    98 |\n| 20180104 | 论萨达姆的战争准备          |    46 |\n+----------+-----------------------------+-------+\n2 rows in set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h2",{attrs:{id:"分组查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分组查询"}},[s._v("#")]),s._v(" 分组查询")]),s._v(" "),a("h3",{attrs:{id:"何为分组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#何为分组"}},[s._v("#")]),s._v(" 何为分组")]),s._v(" "),a("p",[s._v("针对某个列，"),a("strong",[s._v("将该列的值相同的记录分到一个组中")]),s._v("。在GROUP BY 子句中"),a("strong",[s._v("指定的列称为聚合键")]),s._v("或者"),a("strong",[s._v("分组列")]),s._v("。可以有多个分组！")]),s._v(" "),a("p",[s._v("当"),a("strong",[s._v("聚合键中包含 NULL")]),s._v(" 时，在结果中会以**“不确定”行(空行)**的形式表现出来。")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" deptno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GROUP")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" deptno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- deptno分组，查询部门编号和每个部门记录")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" job"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("MAX")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SAL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GROUP")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" job"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 使用job分组，查询每种工作的最高工资")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("在使用"),a("code",[s._v("分组")]),s._v("的时候必须要意识到，分组的存在仅仅是为了"),a("strong",[s._v("方便我们分别统计各个分组中的信息")]),s._v("，所以我们只需要把"),a("strong",[s._v("分组列")]),s._v("和"),a("strong",[s._v("聚合函数")]),s._v("放到查询列表处就好！当然，如果"),a("code",[s._v("非分组列")]),s._v("出现在查询列表中会出现什么情况呢？比如下边这个查询：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT number, subject, AVG(score) FROM student_score GROUP BY subject;\nERROR 1055 (42000): Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'xiaohaizi.student_score.number' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("可以看到出现了错误。为啥会错误呢？回想一下我们使用"),a("code",[s._v("GROUP BY")]),s._v("子句的初衷，我们只是想把记录分为若干组，然后再对各个组分别调用聚集函数去做一些统计工作。本例中的查询列表处放置了既非分组列、又非聚集函数的"),a("code",[s._v("number")]),s._v("列，那我们想表达啥意思呢？从各个分组中的记录中取一条记录的"),a("code",[s._v("number")]),s._v("列？该取分组中的哪条记录为好呢？比方说对于"),a("code",[s._v("'母猪的产后护理'")]),s._v("这个分组中的记录来说，该分组中有4条记录，那"),a("code",[s._v("number")]),s._v("列的值应该取"),a("code",[s._v("20180101")]),s._v("，还是"),a("code",[s._v("20180102")]),s._v("，还是"),a("code",[s._v("20180103")]),s._v("，还是"),a("code",[s._v("20180104")]),s._v("呢？这个我们也不知道，也就是说把非分组列放到查询列表中会引起争议，导致结果不确定。基于此，设计MySQL的大叔才会为上述语句报错。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),a("p",[s._v("小贴士： 其实"),a("strong",[s._v("假如分组后的每个分组的所有记录的某个非分组列的值都一样")]),s._v("，那我把该非分组列加入到查询列表中也没啥问题呀。比方说按照subject列进行分组后，假如在'母猪的产后护理'的分组中各条记录的number列的值都相同，在'论萨达姆的战争准备'的分组中各条记录的number列的值也都相同，那么我们把number列放在查询列表中也没啥问题。可能设计MySQL的大叔觉得这种说法也有点儿道理，他们提出了一个称之为"),a("strong",[s._v("ONLY_FULL_GROUP_BY")]),s._v("的SQL模式，当我们关闭这个SQL模式时，就允许把非分组列放到查询列表中。当然，什么是SQL模式，怎么开启和关闭这个称之为ONLY_FULL_GROUP_BY的SQL模式，不是我们初学者要考虑的问题，等以后大家变牛的时候可以再到文档中去查看。")])]),s._v(" "),a("h3",{attrs:{id:"嵌套分组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#嵌套分组"}},[s._v("#")]),s._v(" 嵌套分组")]),s._v(" "),a("p",[s._v("有时候按照某个列进行分组太笼统，一个分组内可以被继续划分成更小的分组。比方说对于"),a("code",[s._v("student_info")]),s._v("表来说，我们可以先按照"),a("code",[s._v("department")]),s._v("来进行分组，所以可以被划分为2个分组。我们觉得这样按照"),a("code",[s._v("department")]),s._v("分组后，各个分组可以再按照"),a("code",[s._v("major")]),s._v("来继续分组，从而划分成更小的分组。")]),s._v(" "),a("p",[s._v("所以现在有了2个大分组，4个小分组，我们把这种对大的分组下继续分组的的情形叫做"),a("code",[s._v("嵌套分组")]),s._v("。我们只需要在"),a("code",[s._v("GROUP BY")]),s._v("子句中把各个分组列依次写上，用逗号"),a("code",[s._v(",")]),s._v("分隔开就好了。比如这样：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT department, major, COUNT(*) FROM student_info GROUP BY department, major;\n+-----------------+--------------------------+----------+\n| department      | major                    | COUNT(*) |\n+-----------------+--------------------------+----------+\n| 航天学院        | 电子信息                 |        1 |\n| 航天学院        | 飞行器设计               |        1 |\n| 计算机学院      | 计算机科学与工程         |        2 |\n| 计算机学院      | 软件工程                 |        2 |\n+-----------------+--------------------------+----------+\n4 rows in set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("可以看到，在"),a("code",[s._v("嵌套分组")]),s._v("中，聚集函数将作用在"),a("strong",[s._v("最后一个分组列")]),s._v("上，在这个例子中就是"),a("code",[s._v("major")]),s._v("列")]),s._v(" "),a("h3",{attrs:{id:"使用分组注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用分组注意事项"}},[s._v("#")]),s._v(" 使用分组注意事项")]),s._v(" "),a("p",[s._v("使用分组来统计数据给我们带来了非常大的便利，但是要随时提防有坑的地方：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("如果分组列中含有"),a("code",[s._v("NULL")]),s._v("值，那么"),a("code",[s._v("NULL")]),s._v("也会作为一个独立的分组存在。")])]),s._v(" "),a("li",[a("p",[s._v("如果存在多个分组列，也就是"),a("code",[s._v("嵌套分组")]),s._v("，"),a("strong",[s._v("聚合函数将作用在最后的那个分组列上")]),s._v("。")])]),s._v(" "),a("li",[a("p",[s._v("如果查询语句中存在"),a("code",[s._v("WHERE")]),s._v("子句和"),a("code",[s._v("ORDER BY")]),s._v("子句，那么"),a("code",[s._v("GROUP BY")]),s._v("子句必须出现在"),a("code",[s._v("WHERE")]),s._v("子句之后，"),a("code",[s._v("ORDER BY")]),s._v("子句之前。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("GROUP BY")]),s._v("子句后也可以跟随"),a("code",[s._v("表达式")]),s._v("(但不能是聚集函数)。")]),s._v(" "),a("p",[s._v("上边介绍的"),a("code",[s._v("GROUP BY")]),s._v("后跟随的都是表中的某个列或者某些列，其实一个表达式也可以，比如这样：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT concat('专业：', major), COUNT(*) FROM student_info GROUP BY concat('专业：', major);\n+-----------------------------------+----------+\n| concat('专业：', major)           | COUNT(*) |\n+-----------------------------------+----------+\n| 专业：电子信息                    |        1 |\n| 专业：计算机科学与工程            |        2 |\n| 专业：软件工程                    |        2 |\n| 专业：飞行器设计                  |        1 |\n+-----------------------------------+----------+\n4 rows in set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[a("code",[s._v("MySQL")]),s._v("会根据这个表达式的值来对记录进行分组，使用表达式进行分组的时候需要特别注意，查询列表中的表达式和"),a("code",[s._v("GROUP BY")]),s._v("子句中的表达式必须完全一样。不过一般情况下我们也不会用表达式进行分组，所以目前基本没啥用～")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("WHERE")]),s._v("子句和"),a("code",[s._v("HAVING")]),s._v("子句的区别。")]),s._v(" "),a("p",[a("code",[s._v("WHERE")]),s._v("子句在分组前进行过滤，作用于每一条记录，"),a("code",[s._v("WHERE")]),s._v("子句过滤掉的记录将不包括在分组中。而"),a("code",[s._v("HAVING")]),s._v("子句在数据分组后进行过滤，作用于整个分组。")])]),s._v(" "),a("li",[a("p",[s._v("在"),a("strong",[s._v("GROUP BY")]),s._v("子句中写了列的别名（MySQL 和 PostgreSQL 可以这样写，对查询做了增强）🔥")]),s._v(" "),a("p",[a("strong",[s._v("由于SQL的执行顺序为SELECT最后，所以 SELECT 的别名不能用做GROUP BY中。但实际上 MySQL 可以！")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("GROUP BY")]),s._v("子句的结果能排序吗？")]),s._v(" "),a("p",[s._v("通常 SELECT 语句的执行结果的显示顺序都是"),a("strong",[s._v("随机")]),s._v("的，需要排序则需在SELECT中指定")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("DISTINCT")]),s._v("和"),a("strong",[s._v("GROUP BY")]),s._v("都能够删除后续列中的重复数据。在“想要删除选择结果中的重复记录”时使用DISTINCT，在“想要计算汇总结果”时使用GROUP BY。不使用COUNT等聚合函数，而只使用GROUP BY子句的SELECT语句，会让人觉得奇怪")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("在 SELECT 子句中书写了多余的列")]),s._v("。使用聚合函数（其实是使用分组函数）时，SELECT 子句中只能存在以下三种元素：")]),s._v(" "),a("ul",[a("li",[s._v("常数：数字 123，或者字符串 '测试'，或日期")]),s._v(" "),a("li",[s._v("聚合函数。"),a("code",[s._v("非分组列")]),s._v("不能单独出现在检索列表(SELECT)中(可以被放到聚集函数中)。")]),s._v(" "),a("li",[s._v("GROUP BY子句中指定的列名(也就是"),a("strong",[s._v("聚合键")]),s._v(")，其实应该是每组共有的。")])])])]),s._v(" "),a("h2",{attrs:{id:"having"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#having"}},[s._v("#")]),s._v(" HAVING")]),s._v(" "),a("h3",{attrs:{id:"作用于分组的过滤条件-🔥"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用于分组的过滤条件-🔥"}},[s._v("#")]),s._v(" 作用于分组的过滤条件 🔥")]),s._v(" "),a("p",[s._v("有时候某个带有"),a("code",[s._v("GROUP BY")]),s._v("子句的查询中可能会"),a("strong",[s._v("产生非常多的分组")]),s._v("，假设"),a("code",[s._v("student_score")]),s._v("表中存储了100门学科的成绩，也就是"),a("code",[s._v("subject")]),s._v("列中有100个不重复的值，那就会产生100个分组，也就意味着这个查询的结果集中会产生100条记录。如果我们不想在结果集中得到这么多记录，只想把那些符合某些条件的分组加入到结果集，从而减少结果集中记录的条数，那就需要把针对分组的条件放到"),a("code",[s._v("HAVING")]),s._v("子句了。比方说老师想要查询平均分大于"),a("code",[s._v("73")]),s._v("分的课程，就可以这么写")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT subject, AVG(score) FROM student_score GROUP BY subject HAVING AVG(score) > 73;\n+-----------------------------+------------+\n| subject                     | AVG(score) |\n+-----------------------------+------------+\n| 论萨达姆的战争准备          |    73.2500 |\n+-----------------------------+------------+\n1 row in set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("其实这里所谓的"),a("code",[s._v("针对分组的条件")]),s._v("一般是指下边这两种：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("分组列")]),s._v(" "),a("p",[s._v("也就是说我们可以"),a("strong",[s._v("把用于分组的列放到"),a("code",[s._v("HAVING")]),s._v("子句的条件中")]),s._v("，比如这样：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT subject, AVG(score) FROM student_score GROUP BY subject having subject = '母猪的产后护理';\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("作用于"),a("strong",[s._v("分组的聚集函数")])]),s._v(" "),a("p",[s._v("当然，并不是"),a("code",[s._v("HAVING")]),s._v("子句中只能放置在查询列表出现的那些聚集函数，"),a("strong",[s._v("只要是针对这个分组进行统计的聚集函数")]),s._v("都可以，比方说老师想查询最高分大于98分的课程的平均分，可以这么写：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT subject, AVG(score) FROM student_score GROUP BY subject HAVING MAX(score) > 98;\n+-----------------------+------------+\n| subject               | AVG(score) |\n+-----------------------+------------+\n| 母猪的产后护理        |    73.0000 |\n+-----------------------+------------+\n1 row in set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("其中的"),a("code",[s._v("MAX(score)")]),s._v("这个聚集函数并没有出现在查询列表中，但仍然可以作为"),a("code",[s._v("HAVING")]),s._v("子句中表达式的一部分。")])])]),s._v(" "),a("h3",{attrs:{id:"结果集过滤条件-🔥"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结果集过滤条件-🔥"}},[s._v("#")]),s._v(" 结果集过滤条件 🔥")]),s._v(" "),a("p",[s._v("当不使用 GROUP 时，WHERE 和 HAVING 的效果大致一样。不同在于：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("WHERE 是过滤磁盘数据")])]),s._v(" "),a("li",[a("p",[s._v("HAVING 是过滤"),a("strong",[s._v("内存中结果集")]),s._v("数据（如列别名）")]),s._v(" "),a("p",[s._v("如果在 WHERE 中使用别名则报错（没有该列），这时候就可以使用 HAVING 处理")])])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("price "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" outer_price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" good "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 报错")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("price "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" outer_price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" good "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("having")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 在HAVING子句中使用无集合条件可能效率不高。考虑将它们移至WHERE ")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"where-和-having-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#where-和-having-区别"}},[s._v("#")]),s._v(" WHERE 和 HAVING 区别")]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("WHERE：分组前过滤数据，指定行对应条件；HAVING：分组后过滤数据，指定组对应条件")])]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("聚合键所对应的条件不应该书写在 HAVING 子句当中，而应该书写在 WHERE 子句当中")]),s._v("。")])]),s._v(" "),a("li",[a("p",[s._v("通常情况下，"),a("strong",[s._v("将条件写在 WHERE 子句中要比写在 HAVING 子句中的处理速度更快")]),s._v("。")]),s._v(" "),a("ul",[a("li",[s._v("使用 COUNT 函数等对表中的数据进行"),a("strong",[s._v("聚合")]),s._v("操作时，DBMS 内部就会进行"),a("strong",[s._v("排序")]),s._v("处理。"),a("strong",[s._v("排序处理是会大大增加机器负担的高负荷的处理")]),s._v(" 。因此，只有尽可能减少排序的行数，才能提高处理速度。通过 WHERE 子句指定条件时，由于排序之前就对数据进行了过滤，因此能够减少排序的数据量。")])])]),s._v(" "),a("li",[a("p",[s._v("可以对 WHERE 子句指定条件所对应的列"),a("strong",[s._v("创建索引")]),s._v("，这样也可以大幅提高处理速度。")])])])]),s._v(" "),a("li",[a("p",[s._v("见结果集过滤条件")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("WHERE后不可以使用聚合函数，HAVING后可以使用聚合函数")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" deptno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GROUP")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" deptno "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("HAVING")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 以部门分组...。条件为记录数大于3")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("HAVING 子句中能够使用的 3 种要素如下所示：")])]),s._v(" "),a("li",[a("ul",[a("li",[s._v("常数：数字 123，或者字符串 '测试'，或日期")]),s._v(" "),a("li",[s._v("聚合函数")]),s._v(" "),a("li",[s._v("GROUP BY子句中指定的列名(也就是"),a("strong",[s._v("聚合键")]),s._v(")")])])])]),s._v(" "),a("h2",{attrs:{id:"排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#排序"}},[s._v("#")]),s._v(" 排序")]),s._v(" "),a("p",[s._v("我们之前查询"),a("code",[s._v("number")]),s._v("列的时候得到的记录并不是有序的，这是为什么呢？"),a("code",[s._v("MySQL")]),s._v("其实"),a("strong",[s._v("默认会按照这些数据底层存储的顺序来给我们返回数据")]),s._v("，但是这些数据"),a("strong",[s._v("可能会经过更新或者删除")]),s._v("，如果我们不明确指定按照什么顺序来排序返回结果的话，那我们可以认为该结果中记录的顺序是不确定的。换句话说如果我们想让返回结果中的记录按照某种特定的规则排序，那我们必须显式的指定排序规则。")]),s._v(" "),a("p",[s._v("通常，从表中抽取数据时，如果没有特别指定顺序，最终排列顺序便无从得知")]),s._v(" "),a("h3",{attrs:{id:"升序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#升序"}},[s._v("#")]),s._v(" 升序")]),s._v(" "),a("p",[s._v("ascendent")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" student_score "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ORDER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" score "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ASC")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- ASC可以省略")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"降序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#降序"}},[s._v("#")]),s._v(" 降序")]),s._v(" "),a("p",[s._v("descendent")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" student_score "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ORDER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" score "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DESC")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- DESC不能省略")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"多字段作为排序条件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多字段作为排序条件"}},[s._v("#")]),s._v(" 多字段作为排序条件")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" student_score "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ORDER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" subject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" score "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DESC")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 按 subject 升序排，如果 subject 相同，按 score 降序排")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"注意-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意-3"}},[s._v("#")]),s._v(" 注意")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("排序键中包含 NULL 时，会在开头或末尾进行汇总。")])]),s._v(" "),a("li",[s._v("**在 ORDER BY 子句中可以使用 SELECT 子句中定义的别名。**与SQL执行顺序有关！")]),s._v(" "),a("li",[s._v("在 ORDER BY 子句中可以使用 SELECT 子句中未使用的列和聚合函数。")]),s._v(" "),a("li",[s._v("在 ORDER BY 子句中"),a("strong",[s._v("不要使用列编号")]),s._v("：阅读困难；该功能将会删除")]),s._v(" "),a("li",[s._v("对于数字的排序还是很好理解的，但是字符串怎么排序呢？"),a("strong",[s._v("大写的A和小写的a哪个大哪个小？这个问题涉及到字符串使用的编码方式以及字符串排序规则")]),s._v("，我们之后会详细的介绍它们，现在你只需要知道排序的语法就好了。")])]),s._v(" "),a("h2",{attrs:{id:"限制查询结果条数-分页"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#限制查询结果条数-分页"}},[s._v("#")]),s._v(" 限制查询结果条数—分页")]),s._v(" "),a("h3",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),a("p",[s._v("有时候查询结果的条数会很多，都显示出来可能会撑爆屏幕～ 所以"),a("code",[s._v("MySQL")]),s._v("给我们提供了一种限制结果集中的记录条数的方式，就是在查询语句的末尾使用这样的语法：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("LIMIT 开始行, 限制条数;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("code",[s._v("开始行")]),s._v("指的是我们想从第几行数据开始查询，"),a("code",[s._v("限制条数")]),s._v("是结果集中最多包含多少条记录。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),a("p",[s._v("小贴士： 在生活中通常都是从1开始计数的，而在计算机中都是从0开始计数的，所以我们平时所说的第1条记录在计算机中算是第0条。比如"),a("code",[s._v("student_info")]),s._v("表里的6条记录在计算机中依次表示为：第0条、第1条、第2条、第3条、第4条、第5条。")])]),s._v(" "),a("p",[s._v("MySQL、PostgreSQL、MariaDB 和 SQLite方言LIMIT用来限定查询结果的"),a("strong",[s._v("起始索引（从0开始）")]),s._v("，以及"),a("strong",[s._v("总行数")]),s._v("："),a("strong",[a("code",[s._v("开始的索引 = (当前页-1) \\* 每页记录数")])])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*1. 一页的记录数：10行;2. 查询第3页*/")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("limit")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v("第一个参数是0可以省略")]),s._v("；最后不足总行数的话，有多少显示多少。")]),s._v(" "),a("p",[s._v("如果是 Oracle，你需要基于 ROWNUM 来统计行数")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" hp_max \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" hp_max \n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" heros \n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ORDER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" hp_max"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" ROWNUM "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"注意-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意-4"}},[s._v("#")]),s._v(" 注意")]),s._v(" "),a("p",[s._v("如果指定的"),a("code",[s._v("开始行")]),s._v("大于结果中的行数，那查询结果就什么都没有：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT number, name, id_number, major FROM student_info LIMIT 6, 2;\nEmpty set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("如果查询的结果条数不超过"),a("code",[s._v("限制条数")]),s._v("，那就可以全部显式出来：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT number, name, id_number, major FROM student_info LIMIT 4, 3;\n+----------+-----------+--------------------+-----------------+\n| number   | name      | id_number          | major           |\n+----------+-----------+--------------------+-----------------+\n| 20180105 | 范剑      | 181048199308156368 | 飞行器设计      |\n| 20180106 | 朱逸群    | 197995199501078445 | 电子信息        |\n+----------+-----------+--------------------+-----------------+\n2 rows in set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("从第4条开始的记录有两条，"),a("code",[s._v("限制条数")]),s._v("为3，所以这两条记录都可以被展示在结果集中。")]),s._v(" "),a("h2",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#"}},[s._v("#")]),s._v(" ==========")]),s._v(" "),a("h2",{attrs:{id:"表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表达式"}},[s._v("#")]),s._v(" 表达式")]),s._v(" "),a("h3",{attrs:{id:"操作数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作数"}},[s._v("#")]),s._v(" 操作数")]),s._v(" "),a("p",[a("code",[s._v("MySQL")]),s._v("中"),a("code",[s._v("操作数")]),s._v("可以是下边这几种类型：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("常数")]),s._v(" "),a("p",[s._v("常数很好理解，我们平时用到的"),a("strong",[s._v("数字、字符串、时间")]),s._v("值什么的都可以被称为常数，它是一个确定的值，比如数字"),a("code",[s._v("1")]),s._v("，字符串"),a("code",[s._v("'abc'")]),s._v("，时间值"),a("code",[s._v("2019-08-16 17:10:43")]),s._v("啥的。")])]),s._v(" "),a("li",[a("p",[s._v("列名")]),s._v(" "),a("p",[s._v("针对某个具体的表，它的列名可以被当作表达式的一部分，比如对于"),a("code",[s._v("student_info")]),s._v("表来说，"),a("code",[s._v("number")]),s._v("、"),a("code",[s._v("name")]),s._v("都可以作为"),a("code",[s._v("操作数")]),s._v("。")])]),s._v(" "),a("li",[a("p",[s._v("函数调用")]),s._v(" "),a("p",[a("code",[s._v("MySQL")]),s._v("中有"),a("code",[s._v("函数")]),s._v("的概念，比方说获取当前时间的函数"),a("code",[s._v("NOW")]),s._v("，而在函数后边加个小括号就算是一个"),a("code",[s._v("函数调用")]),s._v("，比如"),a("code",[s._v("NOW()")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("如果你不清楚函数的概念，我们之后会详细唠叨的，现在不知道也可以～\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("标量子查询或者行子查询")]),s._v(" "),a("p",[s._v("这个子查询我们稍后会详细唠叨的～")])]),s._v(" "),a("li",[a("p",[s._v("其他表达式")]),s._v(" "),a("p",[s._v("一个表达式也可以作为一个操作数与另一个操作数来形成一个更复杂的表达式，比方说（假设"),a("code",[s._v("col")]),s._v("是一个列名）：")]),s._v(" "),a("ul",[a("li",[s._v("(col - 5) / 3")]),s._v(" "),a("li",[s._v("(1 + 1) * 2 + col * 3")])])])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),a("p",[s._v("小贴士： 当然，可以作为操作数的东西不止这么几种，不过我们这是一个入门书籍，大家在熟练使用MySQL后再到文档中查看更多的操作数类型吧。")])]),s._v(" "),a("h3",{attrs:{id:"操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作符"}},[s._v("#")]),s._v(" 操作符")]),s._v(" "),a("p",[s._v("对于小白的我们来说，目前熟悉掌握下边三种操作符就应该够用了：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("算术操作符")]),s._v(" "),a("p",[s._v("就是加减乘除法那一堆，我们看一下"),a("code",[s._v("MySQL")]),s._v("中都支持哪些：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("操作符")]),s._v(" "),a("th",[s._v("示例")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("+")])]),s._v(" "),a("td",[a("code",[s._v("a + b")])]),s._v(" "),a("td",[s._v("加法")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("-")])]),s._v(" "),a("td",[a("code",[s._v("a - b")])]),s._v(" "),a("td",[s._v("减法")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("*")])]),s._v(" "),a("td",[a("code",[s._v("a * b")])]),s._v(" "),a("td",[s._v("乘法")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("/")])]),s._v(" "),a("td",[a("code",[s._v("a / b")])]),s._v(" "),a("td",[s._v("除法")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("DIV")])]),s._v(" "),a("td",[a("code",[s._v("a DIV b")])]),s._v(" "),a("td",[s._v("除法，取商的整数部分")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("%")])]),s._v(" "),a("td",[a("code",[s._v("a % b")])]),s._v(" "),a("td",[s._v("取余")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("-")])]),s._v(" "),a("td",[a("code",[s._v("-a")])]),s._v(" "),a("td",[s._v("负号")])])])]),s._v(" "),a("p",[s._v("在使用"),a("code",[s._v("MySQL")]),s._v("中的"),a("code",[s._v("算术操作符")]),s._v("时需要注意，"),a("code",[s._v("DIV")]),s._v("和"),a("code",[s._v("/")]),s._v("都表示除法操作符，但是"),a("code",[s._v("DIV")]),s._v("只会取商的整数部分，"),a("code",[s._v("/")]),s._v("会保留商的小数部分。比如表达式 "),a("code",[s._v("2 DIV 3")]),s._v("的结果是"),a("code",[s._v("0")]),s._v("，而"),a("code",[s._v("2 / 3")]),s._v("的结果是"),a("code",[s._v("0.6667")]),s._v("。")])]),s._v(" "),a("li",[a("p",[s._v("比较操作符")]),s._v(" "),a("p",[s._v("就是在"),a("code",[s._v("搜索条件")]),s._v("中我们已经看过的"),a("code",[s._v("比较操作符")]),s._v("，我们把常用的都抄下来看一下：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("操作符")]),s._v(" "),a("th",[s._v("示例")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("=")])]),s._v(" "),a("td",[a("code",[s._v("a = b")])]),s._v(" "),a("td",[s._v("a等于b")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("<>")]),s._v("或者"),a("code",[s._v("!=")])]),s._v(" "),a("td",[a("code",[s._v("a <> b")])]),s._v(" "),a("td",[s._v("a不等于b")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("<")])]),s._v(" "),a("td",[a("code",[s._v("a < b")])]),s._v(" "),a("td",[s._v("a小于b")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("<=")])]),s._v(" "),a("td",[a("code",[s._v("a <= b")])]),s._v(" "),a("td",[s._v("a小于或等于b")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v(">")])]),s._v(" "),a("td",[a("code",[s._v("a > b")])]),s._v(" "),a("td",[s._v("a大于b")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v(">=")])]),s._v(" "),a("td",[a("code",[s._v("a >= b")])]),s._v(" "),a("td",[s._v("a大于或等于b")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("BETWEEN")])]),s._v(" "),a("td",[a("code",[s._v("a BETWEEN b AND c")])]),s._v(" "),a("td",[s._v("满足 b <= a <= c")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("NOT BETWEEN")])]),s._v(" "),a("td",[a("code",[s._v("a NOT BETWEEN b AND c")])]),s._v(" "),a("td",[s._v("不满足 b <= a <= c")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("IN")])]),s._v(" "),a("td",[a("code",[s._v("a IN (b1, b2, ...)")])]),s._v(" "),a("td",[s._v("a是b1, b2, ... 中的某一个")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("NOT IN")])]),s._v(" "),a("td",[a("code",[s._v("a NOT IN (b1, b2, ...)")])]),s._v(" "),a("td",[s._v("a不是b1, b2, ... 中的任意一个")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("IS NULL")])]),s._v(" "),a("td",[a("code",[s._v("a IS NULL")])]),s._v(" "),a("td",[s._v("a的值是"),a("code",[s._v("NULL")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("IS NOT NULL")])]),s._v(" "),a("td",[a("code",[s._v("a IS NOT NULL")])]),s._v(" "),a("td",[s._v("a的值不是"),a("code",[s._v("NULL")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("LIKE")])]),s._v(" "),a("td",[a("code",[s._v("a LIKE b")])]),s._v(" "),a("td",[s._v("a匹配b")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("NOT LIKE")])]),s._v(" "),a("td",[a("code",[s._v("a NOT LIKE b")])]),s._v(" "),a("td",[s._v("a不匹配b")])])])]),s._v(" "),a("p",[s._v("由"),a("code",[s._v("比较操作符")]),s._v("连接而成的表达式也称为"),a("code",[s._v("布尔表达式")]),s._v("，表示"),a("code",[s._v("真")]),s._v("或者"),a("code",[s._v("假")]),s._v("，也可以称为"),a("code",[s._v("TRUE")]),s._v("或者"),a("code",[s._v("FALSE")]),s._v("。比如"),a("code",[s._v("1 > 3")]),s._v("就代表"),a("code",[s._v("FALSE")]),s._v("，"),a("code",[s._v("3 != 2")]),s._v("就代表"),a("code",[s._v("TRUE")]),s._v("。")])]),s._v(" "),a("li",[a("p",[s._v("逻辑操作符")]),s._v(" "),a("p",[s._v("逻辑操作符是用来将多个"),a("code",[s._v("布尔表达式")]),s._v("连接起来，我们需要了解这几个"),a("code",[s._v("逻辑操作符")]),s._v("：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("操作符")]),s._v(" "),a("th",[s._v("示例")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("AND")])]),s._v(" "),a("td",[a("code",[s._v("a AND b")])]),s._v(" "),a("td",[s._v("只有a和b同时为真，表达式才为真")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("OR")])]),s._v(" "),a("td",[a("code",[s._v("a OR b")])]),s._v(" "),a("td",[s._v("只要a或b有任意一个为真，表达式就为真")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("XOR")])]),s._v(" "),a("td",[a("code",[s._v("a XOR b")])]),s._v(" "),a("td",[s._v("a和b有且只有一个为真，表达式为真")])])])])])]),s._v(" "),a("h3",{attrs:{id:"表达式的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表达式的使用"}},[s._v("#")]),s._v(" 表达式的使用")]),s._v(" "),a("p",[s._v("只要把这些"),a("code",[s._v("操作数")]),s._v("和"),a("code",[s._v("操作符")]),s._v("相互组合起来就可以组成一个"),a("code",[s._v("表达式")]),s._v("。"),a("code",[s._v("表达式")]),s._v("主要以下边这两种方式使用：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("放在查询列表中")]),s._v(" "),a("p",[s._v("我们前边都是将列名放在查询列表中的("),a("code",[s._v("*")]),s._v("号代表所有的列名～)。列名只是"),a("code",[s._v("表达式")]),s._v("中超级简单的一种，我们可以将任意一个表达式作为查询列表的一部分来处理，比方说我们可以在查询"),a("code",[s._v("student_score")]),s._v("表时把"),a("code",[s._v("score")]),s._v("字段的数据都加"),a("code",[s._v("100")]),s._v("，就像这样：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT  number, subject, score + 100 FROM student_score;\n+----------+-----------------------------+-------------+\n| number   | subject                     | score + 100 |\n+----------+-----------------------------+-------------+\n| 20180101 | 母猪的产后护理              |         178 |\n| 20180101 | 论萨达姆的战争准备          |         188 |\n| 20180102 | 母猪的产后护理              |         200 |\n| 20180102 | 论萨达姆的战争准备          |         198 |\n| 20180103 | 母猪的产后护理              |         159 |\n| 20180103 | 论萨达姆的战争准备          |         161 |\n| 20180104 | 母猪的产后护理              |         155 |\n| 20180104 | 论萨达姆的战争准备          |         146 |\n+----------+-----------------------------+-------------+\n8 rows in set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("p",[s._v("其中的"),a("code",[s._v("number")]),s._v("、"),a("code",[s._v("subject")]),s._v("、"),a("code",[s._v("score + 100")]),s._v("都是表达式，结果集中的列的名称也将默认使用这些表达式的名称，所以如果你觉得原名称不好，我们可以使用别名：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT  number, subject, score + 100 AS score FROM student_score;\n+----------+-----------------------------+-------+\n| number   | subject                     | score |\n+----------+-----------------------------+-------+\n| 20180101 | 母猪的产后护理              |   178 |\n| 20180101 | 论萨达姆的战争准备          |   188 |\n| 20180102 | 母猪的产后护理              |   200 |\n| 20180102 | 论萨达姆的战争准备          |   198 |\n| 20180103 | 母猪的产后护理              |   159 |\n| 20180103 | 论萨达姆的战争准备          |   161 |\n| 20180104 | 母猪的产后护理              |   155 |\n| 20180104 | 论萨达姆的战争准备          |   146 |\n+----------+-----------------------------+-------+\n8 rows in set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("p",[s._v("这样"),a("code",[s._v("score + 100")]),s._v("列就可以按照别名"),a("code",[s._v("score")]),s._v("来展示了！")]),s._v(" "),a("p",[s._v("需要注意的是，放在查询列表的表达式也可以不涉及列名，就像这样：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT 1 FROM student_info;\n+---+\n| 1 |\n+---+\n| 1 |\n| 1 |\n| 1 |\n| 1 |\n| 1 |\n| 1 |\n+---+\n6 rows in set (0.01 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("因为"),a("code",[s._v("student_info")]),s._v("中有6条记录，所以结果集中也就展示了6条结果，不过我们的查询列表处只有一个常数"),a("code",[s._v("1")]),s._v("，所以所有的结果的值也都是常数"),a("code",[s._v("1")]),s._v("。这种查询列表中不涉及列名的情况下，我们甚至可以省略掉"),a("code",[s._v("FROM")]),s._v("子句后边的表名，就像这样：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT 1;\n+---+\n| 1 |\n+---+\n| 1 |\n+---+\n1 row in set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("可是这么写有什么现实用处么？好像有的，可以做个计算器[偷笑]～")])]),s._v(" "),a("li",[a("p",[s._v("作为搜索条件")]),s._v(" "),a("p",[s._v("我们在介绍搜索条件的时候介绍的都是带有列名的表达式，搜索条件也可以不带列名，比如这样：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT number, name, id_number, major FROM student_info WHERE 2 > 1;\n+----------+-----------+--------------------+--------------------------+\n| number   | name      | id_number          | major                    |\n+----------+-----------+--------------------+--------------------------+\n| 20180101 | 杜子腾    | 158177199901044792 | 计算机科学与工程         |\n| 20180102 | 杜琦燕    | 151008199801178529 | 计算机科学与工程         |\n| 20180103 | 范统      | 17156319980116959X | 软件工程                 |\n| 20180104 | 史珍香    | 141992199701078600 | 软件工程                 |\n| 20180105 | 范剑      | 181048199308156368 | 飞行器设计               |\n| 20180106 | 朱逸群    | 197995199501078445 | 电子信息                 |\n+----------+-----------+--------------------+--------------------------+\n6 rows in set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("由于我们的搜索条件是"),a("code",[s._v("2 > 1")]),s._v("，这个条件对于表中的每一条记录都成立，所以最后的查询结果就是全部的记录。不过这么写有点儿傻哈，没有一毛钱卵用，没一点实际意义～ 所以通常情况下搜索条件中都会包含列名的。")])])]),s._v(" "),a("h2",{attrs:{id:"时间处理函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时间处理函数"}},[s._v("#")]),s._v(" 时间处理函数")]),s._v(" "),a("h3",{attrs:{id:"当前日期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#当前日期"}},[s._v("#")]),s._v(" 当前日期")]),s._v(" "),a("h4",{attrs:{id:"【标准sql】current-date"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【标准sql】current-date"}},[s._v("#")]),s._v(" 【标准SQL】CURRENT_DATE")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- PostgreSQL 和 MySQL")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CURRENT_DATE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 2021-12-12")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 在 Oracle 中使用该函数时，需要在 FROM 子句中指定临时表(DUAL)。且返回的有日期和时间！")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- CURRENT_DATE 取会话的当前日期和时间；SYSDATE 取服务器（主机）的当前日期和时间。一般相同，除非修改会话的时区。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CURRENT_DATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" dual"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- SQL Server CAST函数将CURRENT_TIMESTAMP转换为日期类型")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" CAST"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CURRENT_TIMESTAMP")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" CUR_DATE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 在 DB2 中使用时，需要在CRUUENT和DATE之间添加半角空格，并且还需要指定临时表 SYSIBM.SYSDUMMY1(相当于 Oracle 中的 DUAL)。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CURRENT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" SYSIBM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SYSDUMMY1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h4",{attrs:{id:"【mysql】curdate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【mysql】curdate"}},[s._v("#")]),s._v(" 【MySQL】CURDATE")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" CURDATE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 2021-12-12")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"当前时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#当前时间"}},[s._v("#")]),s._v(" 当前时间")]),s._v(" "),a("h4",{attrs:{id:"【标准sql】current-time"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【标准sql】current-time"}},[s._v("#")]),s._v(" 【标准SQL】CURRENT_TIME")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- PostgreSQL 和 MySQL")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CURRENT_TIME")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 18:18:18")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 在 Oracle 中使用该函数时，需要在 FROM 子句中指定临时表(DUAL)。且返回的有日期和时间！")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CURRENT_TIMESTAMP")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" dual"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- Oracle")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--SQL Server CAST函数将CURRENT_TIMESTAMP转换为时间类型")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" CAST"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CURRENT_TIMESTAMP")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TIME")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" CUR_TIME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--DB2 CURRENT和TIME之间使用了半角空格，指定临时表SYSIBM.SYSDUMMY1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CURRENT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TIME")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" SYSIBM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SYSDUMMY1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h4",{attrs:{id:"【mysql】curtime"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【mysql】curtime"}},[s._v("#")]),s._v(" 【MySQL】CURTIME")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" CURTIME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 18:18:18")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"当前日期和时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#当前日期和时间"}},[s._v("#")]),s._v(" 当前日期和时间")]),s._v(" "),a("h4",{attrs:{id:"【标准sql】current-timestamp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【标准sql】current-timestamp"}},[s._v("#")]),s._v(" 【标准SQL】CURRENT_TIMESTAMP")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- -- PostgreSQL、MySQL 和 SQL Server")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CURRENT_TIMESTAMP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 2021-12-12 18:18:18")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 在 Oracle 中使用该函数时，需要在 FROM 子句中指定临时表(DUAL)。且返回的有日期和时间！")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CURRENT_TIMESTAMP")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" dual"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- DB2 CURRENT和TIME之间使用了半角空格，指定临时表SYSIBM.SYSDUMMY1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CURRENT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TIMESTAMP")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" SYSIBM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SYSDUMMY1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h4",{attrs:{id:"【mysql】now"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【mysql】now"}},[s._v("#")]),s._v(" 【MySQL】NOW")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("NOW")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 2021-12-12 18:18:18")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"提取"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提取"}},[s._v("#")]),s._v(" 提取")]),s._v(" "),a("h4",{attrs:{id:"【标准sql】extract-提取日期元素返回数值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【标准sql】extract-提取日期元素返回数值"}},[s._v("#")]),s._v(" 【标准SQL】EXTRACT——提取日期元素返回数值")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- PostgreSQL 和 MySQL\t")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CURRENT_TIMESTAMP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" EXTRACT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("YEAR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("MONTH")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DAY")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("HOUR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("MINUTE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SECOND")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CURRENT_TIMESTAMP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- Oracle")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CURRENT_TIMESTAMP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" EXTRACT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("YEAR")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CURRENT_TIMESTAMP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("year")]),s._v(" \n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- SQL Server")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CURRENT_TIMESTAMP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" DATEPART"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("YEAR")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CURRENT_TIMESTAMP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* DB2，CURRENT和TIME之间使用了半角空格，指定临时表SYSIBM.SYSDUMMY1 */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CURRENT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TIMESTAMP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" EXTRACT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("YEAR")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CURRENT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TIMESTAMP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("year")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("该函数的返回值并不是日期类型而是"),a("strong",[s._v("数值类型")]),s._v("。")]),s._v(" "),a("h4",{attrs:{id:"【标准sql】date：提取日期部分返回数值，下同"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【标准sql】date：提取日期部分返回数值，下同"}},[s._v("#")]),s._v(" 【标准SQL】DATE：提取日期部分返回数值，下同")]),s._v(" "),a("p",[s._v("DATE 中的参数可以是日期类型、时间类型（就是这么神奇）、日期时间类型、"),a("strong",[s._v("字符串（会隐式类型转换）")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020-11-11 12:12:12'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"year"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#year"}},[s._v("#")]),s._v(" YEAR")]),s._v(" "),a("h4",{attrs:{id:"month"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#month"}},[s._v("#")]),s._v(" MONTH")]),s._v(" "),a("h4",{attrs:{id:"day"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#day"}},[s._v("#")]),s._v(" DAY")]),s._v(" "),a("h4",{attrs:{id:"hour"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hour"}},[s._v("#")]),s._v(" HOUR")]),s._v(" "),a("h4",{attrs:{id:"minute"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#minute"}},[s._v("#")]),s._v(" MINUTE")]),s._v(" "),a("h4",{attrs:{id:"second"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#second"}},[s._v("#")]),s._v(" SECOND")]),s._v(" "),a("h3",{attrs:{id:"增删计算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#增删计算"}},[s._v("#")]),s._v(" 增删计算")]),s._v(" "),a("h4",{attrs:{id:"【mysql】"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【mysql】"}},[s._v("#")]),s._v(" 【MySQL】")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CURRENT_DATE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 2021-12-12")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" DATE_ADD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CURRENT_DATE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTERVAL")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DAY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 2021-12-14")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" DATE_SUB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CURRENT_DATE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTERVAL")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DAY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 2021-12-10")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("在使用"),a("code",[s._v("DATE_ADD")]),s._v("和"),a("code",[s._v("DATE_SUB")]),s._v("这两个函数时需要注意，增加或减去的时间间隔单位可以自己定义，下边是"),a("code",[s._v("MySQL")]),s._v("支持的一些时间单位：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("时间单位")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("MICROSECOND")])]),s._v(" "),a("td",[s._v("毫秒")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("SECOND")])]),s._v(" "),a("td",[s._v("秒")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("MINUTE")])]),s._v(" "),a("td",[s._v("分钟")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("HOUR")])]),s._v(" "),a("td",[s._v("小时")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("DAY")])]),s._v(" "),a("td",[s._v("天")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("WEEK")])]),s._v(" "),a("td",[s._v("星期")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("MONTH")])]),s._v(" "),a("td",[s._v("月")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("QUARTER")])]),s._v(" "),a("td",[s._v("季度")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("YEAR")])]),s._v(" "),a("td",[s._v("年")])])])]),s._v(" "),a("p",[s._v("如果我们相让"),a("code",[s._v("2021-12-12 18:18:18")]),s._v("这个时间值增加2分钟，可以这么写：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" DATE_ADD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CURRENT_TIMESTAMP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTERVAL")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("MINUTE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" DATE_ADD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("NOW")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTERVAL")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("MINUTE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"比较计算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#比较计算"}},[s._v("#")]),s._v(" 比较计算")]),s._v(" "),a("h4",{attrs:{id:"【mysql】-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【mysql】-2"}},[s._v("#")]),s._v(" 【MySQL】")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 返回值是相差的天数，不能定位到小时、分钟和秒")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" DATEDIFF"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2021-12-12'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2021-12-14'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- -2")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 返回值是相差的时间")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" TIMEDIFF"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2021-12-12 12:12:12'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2021-12-14 12:12:12'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- -48:00:00")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 有参数设置，可以精确到天（DAY）、小时（HOUR），分钟（MINUTE）和秒（SECOND）等上述单位")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" TIMESTAMPDIFF"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DAY")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2021-12-12 12:12:12'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2021-12-14 12:12:12'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 2 这个值和上面的不一样！比较方向不一样")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"格式化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#格式化"}},[s._v("#")]),s._v(" 格式化")]),s._v(" "),a("h4",{attrs:{id:"【mysql】-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【mysql】-3"}},[s._v("#")]),s._v(" 【MySQL】")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" DATE_FORMAT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("NOW")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%m-%d-%Y'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 12-12-2021")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("在使用"),a("code",[s._v("DATE_FORMAT")]),s._v("函数时需要注意，我们可以通过一些所谓的"),a("code",[s._v("格式符")]),s._v("来自定义日期和时间的显示格式，下边是"),a("code",[s._v("MySQL")]),s._v("中常用的一些日期和时间的格式符以及它们对应的含义：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("格式符")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("%b")])]),s._v(" "),a("td",[s._v("简写的月份名称（Jan、Feb、...、Dec)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("%D")])]),s._v(" "),a("td",[s._v("带有英文后缀的月份中的日期（0th、1st、2nd、...、31st)）")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("%d")])]),s._v(" "),a("td",[s._v("数字格式的月份中的日期(00、01、02、...、31)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("%f")])]),s._v(" "),a("td",[s._v("微秒（000000-999999）")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("%H")])]),s._v(" "),a("td",[s._v("二十四小时制的小时 (00-23)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("%h")])]),s._v(" "),a("td",[s._v("十二小时制的小时 (01-12)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("%i")])]),s._v(" "),a("td",[s._v("数值格式的分钟(00-59)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("%M")])]),s._v(" "),a("td",[s._v("月份名（January、February、...、December）")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("%m")])]),s._v(" "),a("td",[s._v("数值形式的月份(00-12)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("%p")])]),s._v(" "),a("td",[s._v("上午或下午（AM代表上午、PM代表下午）")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("%S")])]),s._v(" "),a("td",[s._v("秒(00-59)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("%s")])]),s._v(" "),a("td",[s._v("秒(00-59)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("%W")])]),s._v(" "),a("td",[s._v("星期名（Sunday、Monday、...、Saturday）")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("%w")])]),s._v(" "),a("td",[s._v("周内第几天 （0=星期日、1=星期一、 6=星期六）")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("%Y")])]),s._v(" "),a("td",[s._v("4位数字形式的年（例如2019）")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("%y")])]),s._v(" "),a("td",[s._v("2位数字形式的年（例如19）")])])])]),s._v(" "),a("p",[s._v("我们可以把我们想要的显示格式用对应的格式符描述出来，就像这样：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT DATE_FORMAT(NOW(),'%b %d %Y %h:%i %p');\n+----------------------------------------+\n| DATE_FORMAT(NOW(),'%b %d %Y %h:%i %p') |\n+----------------------------------------+\n| Aug 16 2019 05:10 PM                   |\n+----------------------------------------+\n1 row in set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[a("code",[s._v("'%b %d %Y %h:%i %p'")]),s._v("就是一个用格式符描述的显示格式，意味着对应的日期和时间应该以下边描述的方式展示：")]),s._v(" "),a("ul",[a("li",[s._v("先输出简写的月份名称（格式符"),a("code",[s._v("%b")]),s._v("），也就是示例中的"),a("code",[s._v("Aug")]),s._v("，然后输出一个空格。")]),s._v(" "),a("li",[s._v("再输出用数字格式表示的的月份中的日期（格式符"),a("code",[s._v("%d")]),s._v("），也就是示例中的"),a("code",[s._v("16")]),s._v("，然后输出一个空格。")]),s._v(" "),a("li",[s._v("再输出4位数字形式的年（格式符"),a("code",[s._v("%Y")]),s._v("），也就是示例中的"),a("code",[s._v("2019")]),s._v("，然后输出一个空格。")]),s._v(" "),a("li",[s._v("再输出十二小时制的小时（格式符"),a("code",[s._v("%h")]),s._v("），也就是示例中的"),a("code",[s._v("05")]),s._v("，然后输出一个冒号"),a("code",[s._v(":")]),s._v("。")]),s._v(" "),a("li",[s._v("再输出数值格式的分钟（格式符"),a("code",[s._v("%i")]),s._v("），也就是示例中的"),a("code",[s._v("10")]),s._v("，然后输出一个空格。")]),s._v(" "),a("li",[s._v("最后输出上午或者下午（格式符"),a("code",[s._v("%p")]),s._v("），也就是示例中的"),a("code",[s._v("PM")]),s._v("。")])]),s._v(" "),a("h2",{attrs:{id:"文本处理函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文本处理函数"}},[s._v("#")]),s._v(" 文本处理函数")]),s._v(" "),a("h3",{attrs:{id:"简介-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介-2"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("名称")]),s._v(" "),a("th",[s._v("调用示例")]),s._v(" "),a("th",[s._v("示例结果")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("LEFT")])]),s._v(" "),a("td",[a("code",[s._v("LEFT('abc123', 3)")])]),s._v(" "),a("td",[a("code",[s._v("abc")])]),s._v(" "),a("td",[s._v("给定字符串从左边取指定长度的子串")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("RIGHT")])]),s._v(" "),a("td",[a("code",[s._v("RIGHT('abc123', 3)")])]),s._v(" "),a("td",[a("code",[s._v("123")])]),s._v(" "),a("td",[s._v("给定字符串从右边取指定长度的子串")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("LENGTH")])]),s._v(" "),a("td",[a("code",[s._v("LENGTH('abc')")])]),s._v(" "),a("td",[a("code",[s._v("3")])]),s._v(" "),a("td",[s._v("给定字符串的长度")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("LOWER")])]),s._v(" "),a("td",[a("code",[s._v("LOWER('ABC')")])]),s._v(" "),a("td",[a("code",[s._v("abc")])]),s._v(" "),a("td",[s._v("给定字母字符串的小写格式")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("UPPER")])]),s._v(" "),a("td",[a("code",[s._v("UPPER('abc')")])]),s._v(" "),a("td",[a("code",[s._v("ABC")])]),s._v(" "),a("td",[s._v("给定字母字符串的大写格式")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("LTRIM")])]),s._v(" "),a("td",[a("code",[s._v("LTRIM(' abc')")])]),s._v(" "),a("td",[a("code",[s._v("abc")])]),s._v(" "),a("td",[s._v("给定字符串左边空格去除后的格式")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("RTRIM")])]),s._v(" "),a("td",[a("code",[s._v("RTRIM('abc ')")])]),s._v(" "),a("td",[a("code",[s._v("abc")])]),s._v(" "),a("td",[s._v("给定字符串右边空格去除后的格式")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("SUBSTRING")])]),s._v(" "),a("td",[a("code",[s._v("SUBSTRING('abc123', 2, 3)")])]),s._v(" "),a("td",[a("code",[s._v("bc1")])]),s._v(" "),a("td",[s._v("给定字符串从指定位置截取指定长度的子串。"),a("strong",[s._v("index 从1开始")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("CONCAT")])]),s._v(" "),a("td",[a("code",[s._v("CONCAT('abc', '123', 'xyz')")])]),s._v(" "),a("td",[a("code",[s._v("abc123xyz")])]),s._v(" "),a("td",[s._v("将给定的各个字符串拼接成一个新字符串")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("REPLACE")])]),s._v(" "),a("td",[a("code",[s._v("REPLACE('abcde', 'bc', 'a')")])]),s._v(" "),a("td",[a("code",[s._v("aade")])]),s._v(" "),a("td",[s._v("替换字符串")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("POSITION")])]),s._v(" "),a("td",[a("code",[s._v("POSITION('@' IN 'conanan@qq.com')")])]),s._v(" "),a("td",[a("code",[s._v("8")])]),s._v(" "),a("td",[s._v("index 从1开始")])])])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("进行字符串拼接时，如果其中包含 NULL，那么得到的结果也是NULL。这是因为它也是变了形的函数。多个值拼接也可以。")]),s._v(" "),a("ul",[a("li",[s._v("MySQL使用CONCAT函数（可多个）")]),s._v(" "),a("li",[s._v("PG 使用 || （标准SQL语法）")]),s._v(" "),a("li",[s._v("Oracle 使用 || （标准SQL语法）")]),s._v(" "),a("li",[s._v("SQL Server使用“+” 拼接")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("MySQL 中的 LENGTH")]),s._v(" 以字节为单位的函数进行计算时，“LENGTH(山田)”的返回结果是 4。MySQL中还存在计算字符串长度的自有函数 CHAR_LENGTH 。该函数也无法在 SQL Server 中使用，可以使用LEN函数来计算。")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("SUBSTRING")]),s._v("函数的语法是标准 SQL 承认的正式语法，但是现在只有 PostgreSQL 和 MySQL 支持该语法。 该函数也存在和LENGTH函数同样的"),a("strong",[s._v("多字节字符的问题（没有这情况。。）")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("SUBSTRING"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("对象字符串 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" 截取的起始位置 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FOR")]),s._v(" 截取的字符数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- PostgreSQL 、 MySQL 都可以")]),s._v("\nSUBSTRING"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("对象字符串，截取的起始位置，截取的字符数 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- SQL Server、MySQL 都可以")]),s._v("\nSUBSTR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("对象字符串，截取的起始位置，截取的字符数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- Oracle/DB2 专用语法;MySQL也可以使用，可以有前2个参数或3个参数")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" demo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sys_user "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" user_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'x小米加步枪111'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" demo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sys_user "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" user_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'x小米加步枪222'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v(" sys_user "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" user_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" CONCAT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'h红米'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" SUBSTRING"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user_name "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" user_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'x小米加步枪%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[s._v("#")]),s._v(" 示例")]),s._v(" "),a("p",[s._v("我们以"),a("code",[s._v("SUBSTRING")]),s._v("函数为例试一下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT SUBSTRING('abc123', 2, 3);\n+---------------------------+\n| SUBSTRING('abc123', 2, 3) |\n+---------------------------+\n| bc1                       |\n+---------------------------+\n1 row in set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("我们前边在唠叨"),a("code",[s._v("表达式")]),s._v("的说过，"),a("code",[s._v("函数调用")]),s._v("也算是一种表达式的"),a("code",[s._v("操作数")]),s._v("，它可以和其他操作数用操作符连接起来组成一个表达式来作为查询列表的一部分或者放到搜索条件中。我们来以"),a("code",[s._v("CONCAT")]),s._v("函数为例来看一下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT CONCAT('学号为', number, '的学生在《', subject, '》课程的成绩是：', score) AS 成绩描述 FROM student_score;\n+---------------------------------------------------------------------------------------+\n| 成绩描述                                                                              |\n+---------------------------------------------------------------------------------------+\n| 学号为20180101的学生在《母猪的产后护理》课程的成绩是：78                              |\n| 学号为20180101的学生在《论萨达姆的战争准备》课程的成绩是：88                          |\n| 学号为20180102的学生在《母猪的产后护理》课程的成绩是：100                             |\n| 学号为20180102的学生在《论萨达姆的战争准备》课程的成绩是：98                          |\n| 学号为20180103的学生在《母猪的产后护理》课程的成绩是：59                              |\n| 学号为20180103的学生在《论萨达姆的战争准备》课程的成绩是：61                          |\n| 学号为20180104的学生在《母猪的产后护理》课程的成绩是：55                              |\n| 学号为20180104的学生在《论萨达姆的战争准备》课程的成绩是：46                          |\n+---------------------------------------------------------------------------------------+\n8 rows in set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("h2",{attrs:{id:"数值处理函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数值处理函数"}},[s._v("#")]),s._v(" 数值处理函数")]),s._v(" "),a("p",[s._v("下边列举一些数学上常用到的函数，在遇到需要数学计算的业务时会很有用：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("名称")]),s._v(" "),a("th",[s._v("调用示例")]),s._v(" "),a("th",[s._v("示例结果")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("ABS")])]),s._v(" "),a("td",[a("code",[s._v("ABS(-1)")])]),s._v(" "),a("td",[a("code",[s._v("1")])]),s._v(" "),a("td",[s._v("取绝对值")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("Pi")])]),s._v(" "),a("td",[a("code",[s._v("PI()")])]),s._v(" "),a("td",[a("code",[s._v("3.141593")])]),s._v(" "),a("td",[s._v("返回圆周率")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("COS")])]),s._v(" "),a("td",[a("code",[s._v("COS(PI())")])]),s._v(" "),a("td",[a("code",[s._v("-1")])]),s._v(" "),a("td",[s._v("返回一个角度的余弦")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("EXP")])]),s._v(" "),a("td",[a("code",[s._v("EXP(1)")])]),s._v(" "),a("td",[a("code",[s._v("2.718281828459045")])]),s._v(" "),a("td",[s._v("返回e的指定次方")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("MOD")])]),s._v(" "),a("td",[a("code",[s._v("MOD(5,2)")])]),s._v(" "),a("td",[a("code",[s._v("1")])]),s._v(" "),a("td",[s._v("返回除法的余数")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("RAND")])]),s._v(" "),a("td",[a("code",[s._v("RAND()")])]),s._v(" "),a("td",[a("code",[s._v("0.7537623539136372")])]),s._v(" "),a("td",[s._v("返回一个随机数")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("SIN")])]),s._v(" "),a("td",[a("code",[s._v("SIN(PI()/2)")])]),s._v(" "),a("td",[a("code",[s._v("1")])]),s._v(" "),a("td",[s._v("返回一个角度的正弦")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("SQRT")])]),s._v(" "),a("td",[a("code",[s._v("SQRT(9)")])]),s._v(" "),a("td",[a("code",[s._v("3")])]),s._v(" "),a("td",[s._v("返回一个数的平方根")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("TAN")])]),s._v(" "),a("td",[a("code",[s._v("TAN(0)")])]),s._v(" "),a("td",[a("code",[s._v("0")])]),s._v(" "),a("td",[s._v("返回一个角度的正切")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("ROUND")])]),s._v(" "),a("td",[a("code",[s._v("ROUND(5.55,1)")])]),s._v(" "),a("td",[a("code",[s._v("5.6")])]),s._v(" "),a("td",[s._v("四舍五入（保留n位小数，不写则不保留小数）")])])])]),s._v(" "),a("ul",[a("li",[s._v("ABS 函数的参数为 NULL 时，结果也是 NULL。"),a("strong",[s._v("绝大多数函数对于 NULL 都返回 NULL，但是转换函数中的COALESCE函数除外")])]),s._v(" "),a("li",[s._v("主流的 DBMS 都支持 MOD 函数，只有SQL Server 不支持该函数，使用“%”来计算余数。")])]),s._v(" "),a("h2",{attrs:{id:"聚合（统计）函数-列的纵向运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聚合（统计）函数-列的纵向运算"}},[s._v("#")]),s._v(" 聚合（统计）函数—列的纵向运算")]),s._v(" "),a("p",[s._v("如果将上边介绍的那些函数以函数调用的形式放在查询列表中，那么会为表中符合"),a("code",[s._v("WHERE")]),s._v("条件的每一条记录调用一次该函数。比方说这样：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT number, LEFT(name, 1) FROM student_info WHERE number < 20180106;\n+----------+---------------+\n| number   | LEFT(name, 1) |\n+----------+---------------+\n| 20180101 | 杜            |\n| 20180102 | 杜            |\n| 20180103 | 范            |\n| 20180104 | 史            |\n| 20180105 | 范            |\n+----------+---------------+\n5 rows in set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[a("code",[s._v("student_info")]),s._v("表中符合"),a("code",[s._v("number < 20180106")]),s._v("搜索条件的每一条记录的"),a("code",[s._v("name")]),s._v("字段会依次被当作"),a("code",[s._v("LEFT")]),s._v("函数的参数，结果就是把这些人的名字的首个字符给提取出来了。但是有些函数是用来统计数据的，比方说统计一下表中的行数，某一列数据的最大值是什么，我们把这种函数称之为"),a("code",[s._v("聚集函数")]),s._v("，下边介绍"),a("code",[s._v("MySQL")]),s._v("中常用的几种"),a("code",[s._v("聚集函数")]),s._v("：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("函数名")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("COUNT")])]),s._v(" "),a("td",[s._v("返回某列的"),a("strong",[s._v("行数")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("MAX")])]),s._v(" "),a("td",[s._v("返回某列的最大值")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("MIN")])]),s._v(" "),a("td",[s._v("返回某列的最小值")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("SUM")])]),s._v(" "),a("td",[s._v("返回某列值之"),a("strong",[s._v("和")]),s._v("，可利用 true 返回 1 false 返回 0 的特性")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("AVG")])]),s._v(" "),a("td",[s._v("返回某列的平均值")])])])]),s._v(" "),a("h3",{attrs:{id:"常见错误注意"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见错误注意"}},[s._v("#")]),s._v(" 常见错误注意")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("聚合函数只能用于 "),a("strong",[s._v("SELECT")]),s._v(" 子句和 "),a("strong",[s._v("HAVING")]),s._v(" 子句和 "),a("strong",[s._v("ORDER BY")]),s._v("子句")])]),s._v(" "),a("li",[a("p",[s._v("在 "),a("strong",[s._v("WHERE")]),s._v(" 子句中使用聚合函数（不能使用）")])]),s._v(" "),a("li",[a("p",[s._v("聚合函数的计算，"),a("strong",[s._v("排除了NULL值")]),s._v("。（解决："),a("strong",[s._v("选择不包含NULL的列如主键 或")]),s._v(" "),a("code",[s._v("IFNULL")]),s._v("函数）。与四则运算中若存在NULL，结果一定为NULL不同")])]),s._v(" "),a("li",[a("p",[s._v("聚合函数的结果为单行单列的值。")])]),s._v(" "),a("li",[a("p",[s._v("可以修改聚合函数列别名")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("聚合函数中使用比较运算符表达式时注意表达式为 true 时结果为1，false 时结果为0。此时count 和 sum 选择一定要注意")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("score"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" score "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("having")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("score "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"count函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#count函数"}},[s._v("#")]),s._v(" COUNT函数")]),s._v(" "),a("p",[a("code",[s._v("COUNT")]),s._v("函数使用来统计行数的，它有下边两种使用方式：")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("COUNT(*)")]),s._v("：对表中行的数目进行计数，不管列的值是不是"),a("code",[s._v("NULL")]),s._v("。只要有一列不为空则记录上！")]),s._v(" "),a("li",[a("code",[s._v("COUNT(列名)")]),s._v("：对特定的列进行计数，会忽略掉该列为"),a("code",[s._v("NULL")]),s._v("的行。")])]),s._v(" "),a("p",[s._v("两者的区别是会不会忽略统计列的值为NULL的行！两者的区别是会不会忽略统计列的值为NULL的行！两者的区别是会不会忽略统计列的值为NULL的行！重要的事情说了3遍，希望你能记住。我们来数一下"),a("code",[s._v("student_info")]),s._v("表中有几行记录吧：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT COUNT(*) FROM student_info;\n+----------+\n| COUNT(*) |\n+----------+\n|        6 |\n+----------+\n1 row in set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h3",{attrs:{id:"max函数（原则上适用任何数据类型，能排序的，如日期、字符串）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#max函数（原则上适用任何数据类型，能排序的，如日期、字符串）"}},[s._v("#")]),s._v(" MAX函数（原则上适用任何数据类型，能排序的，如日期、字符串）")]),s._v(" "),a("p",[a("code",[s._v("MAX")]),s._v("函数是用来查询某列中数据的最大值，以"),a("code",[s._v("student_score")]),s._v("表中的"),a("code",[s._v("score")]),s._v("列为例来看一下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT MAX(score) FROM student_score;\n+------------+\n| MAX(score) |\n+------------+\n|        100 |\n+------------+\n1 row in set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[a("code",[s._v("score")]),s._v("列的最大值"),a("code",[s._v("100")]),s._v("就被查找出来了～")]),s._v(" "),a("h3",{attrs:{id:"min函数（原则上适用任何数据类型，能排序的，如日期、字符串）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#min函数（原则上适用任何数据类型，能排序的，如日期、字符串）"}},[s._v("#")]),s._v(" MIN函数（原则上适用任何数据类型，能排序的，如日期、字符串）")]),s._v(" "),a("p",[a("code",[s._v("MIN")]),s._v("函数是用来查询某列中数据的最小值，以"),a("code",[s._v("student_score")]),s._v("表中的"),a("code",[s._v("score")]),s._v("列为例来看一下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT MIN(score) FROM student_score;\n+------------+\n| MIN(score) |\n+------------+\n|         46 |\n+------------+\n1 row in set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[a("code",[s._v("score")]),s._v("列的最小值"),a("code",[s._v("46")]),s._v("就被查找出来了～")]),s._v(" "),a("h3",{attrs:{id:"sum函数（适用于数值类型）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sum函数（适用于数值类型）"}},[s._v("#")]),s._v(" SUM函数（适用于数值类型）")]),s._v(" "),a("p",[a("code",[s._v("SUM")]),s._v("函数是用来计算某列数据的和，还是以"),a("code",[s._v("student_score")]),s._v("表中的"),a("code",[s._v("score")]),s._v("列为例来看一下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT SUM(score) FROM student_score;\n+------------+\n| SUM(score) |\n+------------+\n|        585 |\n+------------+\n1 row in set (0.01 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("所有学生的成绩总和"),a("code",[s._v("585")]),s._v("就被查询出来了，比我们用自己算快多了哈～")]),s._v(" "),a("h3",{attrs:{id:"avg函数（适用于数值类型）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#avg函数（适用于数值类型）"}},[s._v("#")]),s._v(" AVG函数（适用于数值类型）")]),s._v(" "),a("p",[a("code",[s._v("AVG")]),s._v("函数是用来计算某列数据的平均数，还是以"),a("code",[s._v("student_score")]),s._v("表中的"),a("code",[s._v("score")]),s._v("列为例来看一下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT AVG(score) FROM student_score;\n+------------+\n| AVG(score) |\n+------------+\n|    73.1250 |\n+------------+\n1 row in set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("可以看到平均分就是"),a("code",[s._v("73.1250")]),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"给定搜索条件下聚合函数的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#给定搜索条件下聚合函数的使用"}},[s._v("#")]),s._v(" 给定搜索条件下聚合函数的使用")]),s._v(" "),a("p",[s._v("聚合函数并不是一定要统计一个表中的所有记录，我们也可以指定搜索条件来限定这些聚集函数作用的范围。比方说我们只想统计"),a("code",[s._v("'母猪的产后护理'")]),s._v("这门课程的平均分可以这么写：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT AVG(score) FROM student_score WHERE subject = '母猪的产后护理';\n+------------+\n| AVG(score) |\n+------------+\n|    73.0000 |\n+------------+\n1 row in set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("换句话说就是：不在搜索条件中的那些记录是不参与统计的。")]),s._v(" "),a("h3",{attrs:{id:"聚合函数中distinct的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聚合函数中distinct的使用"}},[s._v("#")]),s._v(" 聚合函数中DISTINCT的使用")]),s._v(" "),a("p",[s._v("默认情况下，上边介绍的聚合函数将计算指定列的所有非"),a("code",[s._v("NULL")]),s._v("数据，如果我们指定的列中有重复数据的话，可以选择使用"),a("code",[s._v("DISTINCT")]),s._v("来过滤掉这些重复数据。比方说我们想查看一下"),a("code",[s._v("student_info")]),s._v("表中存储了多少个专业的学生信息，就可以这么写：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT COUNT(DISTINCT major) FROM student_info;\n+-----------------------+\n| COUNT(DISTINCT major) |\n+-----------------------+\n|                     4 |\n+-----------------------+\n1 row in set (0.01 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("可以看到一共有4个专业。")]),s._v(" "),a("h3",{attrs:{id:"组合聚合函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组合聚合函数"}},[s._v("#")]),s._v(" 组合聚合函数")]),s._v(" "),a("p",[s._v("这些聚集函数也可以集中在一个查询中使用，比如这样：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT COUNT(*) AS 成绩记录总数, MAX(score) AS 最高成绩, MIN(score) AS 最低成绩, AVG(score) AS 平均成绩 FROM student_score;\n+--------------------+--------------+--------------+--------------+\n| 成绩记录总数       | 最高成绩     | 最低成绩     | 平均成绩     |\n+--------------------+--------------+--------------+--------------+\n|                  8 |          100 |           46 |      73.1250 |\n+--------------------+--------------+--------------+--------------+\n1 row in set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h2",{attrs:{id:"类型转换函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型转换函数"}},[s._v("#")]),s._v(" 类型转换函数")]),s._v(" "),a("h3",{attrs:{id:"类型转换-cast"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型转换-cast"}},[s._v("#")]),s._v(" 类型转换—CAST")]),s._v(" "),a("h4",{attrs:{id:"【标准sql】cast"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【标准sql】cast"}},[s._v("#")]),s._v(" 【标准SQL】CAST")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- CAST(转换前的值 AS 想要转换的数据类型);")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" CAST"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0001'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTEGER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" int_col"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- SQL Server PostgreSQL")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" CAST"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0001'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" SIGNED "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTEGER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" int_col"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- MySQL")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" CAST"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0001'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTEGER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" int_col "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" DUAL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- Oracle")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" CAST"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0001'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTEGER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" int_col "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" SYSIBM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SYSDUMMY1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- DB2")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" CAST"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2009-12-14'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" date_col"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- SQL Server PostgreSQL MySQL")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" CAST"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2009-12-14'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" date_col "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" DUAL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- Oracle")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" CAST"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2009-12-14'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" date_col "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" SYSIBM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SYSDUMMY1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- DB2")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("将字符串类型转换为整数类型时，前面的 “000”消失了，能够切实感到发生了转换。但是，将字符串转换为日期类型时，从结果上并不能看出数据发生了什么变化。"),a("strong",[s._v("类型转换其实并不是为了方便用户使用而开发的功能，而是为了方便 DBMS 内部处理而开发的功能")]),s._v("。")]),s._v(" "),a("h4",{attrs:{id:"【oracle】"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【oracle】"}},[s._v("#")]),s._v(" 【Oracle】")]),s._v(" "),a("ul",[a("li",[s._v("to_char")]),s._v(" "),a("li",[s._v("to_date")])]),s._v(" "),a("h3",{attrs:{id:"转换null值-coalesce"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转换null值-coalesce"}},[s._v("#")]),s._v(" 转换NULL值—COALESCE")]),s._v(" "),a("h4",{attrs:{id:"【标准sql】coalesce"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【标准sql】coalesce"}},[s._v("#")]),s._v(" 【标准SQL】COALESCE")]),s._v(" "),a("p",[s._v("将 NULL 转换为其他值，返回第一个非空数值")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COALESCE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("数据"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("数据"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("数据"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* COALESCE 是 SQL 特有的函数。该函数会返回可变参数中左侧开始第1个不是 NULL 的值。*/")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COALESCE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2009-11-01'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--SQL Server PostgreSQL MySQL")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COALESCE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2009-11-01'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" col_1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" DUAL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- Oracle")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COALESCE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2009-11-01'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" col_1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" SYSIBM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SYSDUMMY1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--  DB2")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h4",{attrs:{id:"【mysql】ifnull"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【mysql】ifnull"}},[s._v("#")]),s._v(" 【MySQL】IFNULL")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" IFNULL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 如果存在NULL值，那么当成0来运算")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"【oracle】nvl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【oracle】nvl"}},[s._v("#")]),s._v(" 【Oracle】NVL")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"隐式类型转换的场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#隐式类型转换的场景"}},[s._v("#")]),s._v(" 隐式类型转换的场景")]),s._v(" "),a("p",[s._v("只要某个值的类型与上下文要求的类型不符，"),a("code",[s._v("MySQL")]),s._v("就会根据上下文环境中需要的类型对该值进行类型转换，由于这些类型转换都是"),a("code",[s._v("MySQL")]),s._v("自动完成的，所以也可以被称为"),a("code",[s._v("隐式类型转换")]),s._v("。我们列举几种常见的隐式类型转换的场景：")]),s._v(" "),a("h4",{attrs:{id:"把操作数类型转换为适合操作符计算的相应类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#把操作数类型转换为适合操作符计算的相应类型"}},[s._v("#")]),s._v(" 把操作数类型转换为适合操作符计算的相应类型")]),s._v(" "),a("p",[s._v("比方说对于加法操作符"),a("code",[s._v("+")]),s._v("来说，它要求两个操作数都必须是数字才能进行计算，所以如果某个操作数不是数字的话，会将其隐式转换为数字，比方说下边这几个例子：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1 + 2       →   3\n'1' + 2     →   3\n'1' + '2'   →   3\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("虽然"),a("code",[s._v("'1'")]),s._v("、"),a("code",[s._v("'2'")]),s._v("都是字符串，但是如果它们作为加法操作符"),a("code",[s._v("+")]),s._v("的操作数的话，都会被强制转换为数字，所以上边几个表达式其实都会被当作"),a("code",[s._v("1 + 2")]),s._v("去处理的，这些表达式被放在查询列表时的效果如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT 1 + 2, '1' + 2, '1' + '2';\n+-------+---------+-----------+\n| 1 + 2 | '1' + 2 | '1' + '2' |\n+-------+---------+-----------+\n|     3 |       3 |         3 |\n+-------+---------+-----------+\n1 row in set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h4",{attrs:{id:"将函数参数转换为该函数期望的类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将函数参数转换为该函数期望的类型"}},[s._v("#")]),s._v(" 将函数参数转换为该函数期望的类型")]),s._v(" "),a("p",[s._v("我们拿用于拼接字符串的"),a("code",[s._v("CONCAT")]),s._v("函数举例，这个函数以字符串类型的值作为参数，如果我们在调用这个函数的时候，传入了别的类型的值作为参数，"),a("code",[s._v("MySQL")]),s._v("会自动把这些值的类型转换为字符串类型的：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("CONCAT('1', '2')    →   '12'\nCONCAT('1', 2)      →   '12'\nCONCAT(1, 2)        →   '12'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("虽然"),a("code",[s._v("1")]),s._v("、"),a("code",[s._v("2")]),s._v("都是数字，但是如果它们作为"),a("code",[s._v("CONCAT")]),s._v("函数的参数的话，都会被强制转换为字符串，所以上边几个表达式其实都会被当作"),a("code",[s._v("CONCAT('1', '2)")]),s._v("去处理的，这些表达式被放到查询列表时的效果如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT CONCAT('1', '2'), CONCAT('1', 2), CONCAT(1, 2);\n+------------------+----------------+--------------+\n| CONCAT('1', '2') | CONCAT('1', 2) | CONCAT(1, 2) |\n+------------------+----------------+--------------+\n| 12               | 12             | 12           |\n+------------------+----------------+--------------+\n1 row in set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h4",{attrs:{id:"存储数据时，把某个值转换为某个列需要的类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储数据时，把某个值转换为某个列需要的类型"}},[s._v("#")]),s._v(" 存储数据时，把某个值转换为某个列需要的类型")]),s._v(" "),a("p",[s._v("我们先新建一个简单的表"),a("code",[s._v("t")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("CREATE TABLE t (\n    i1 TINYINT,\n    i2 TINYINT,\n    s VARCHAR(100)\n);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("这个表有三个列，列"),a("code",[s._v("i1")]),s._v("和"),a("code",[s._v("i2")]),s._v("是用来存储整数的，列"),a("code",[s._v("s")]),s._v("是用来存储字符串的，如果我们在存储数据的时候填入的不是期望的类型，就像这样：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> INSERT INTO t(i1, i2, s) VALUES('100', '100', 200);\nQuery OK, 1 row affected (0.01 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("我们为列"),a("code",[s._v("i1")]),s._v("和"),a("code",[s._v("i2")]),s._v("填入的值是一个字符串值："),a("code",[s._v("'100'")]),s._v("，列"),a("code",[s._v("s")]),s._v("填入的值是一个整数值："),a("code",[s._v("200")]),s._v("，虽然说类型都不对，但是由于隐式类型转换的存在，在插入数据的时候字符串"),a("code",[s._v("'100'")]),s._v("会被转型为整数"),a("code",[s._v("100")]),s._v("，整数"),a("code",[s._v("200")]),s._v("会被转型成字符串"),a("code",[s._v("'200'")]),s._v("，所以最后插入成功，我们来看一下效果：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT * FROM t;\n+------+------+------+\n| i1   | i2   | s    |\n+------+------+------+\n|  100 |  100 | 200  |\n+------+------+------+\n1 row in set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h3",{attrs:{id:"类型转换的注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型转换的注意事项"}},[s._v("#")]),s._v(" 类型转换的注意事项")]),s._v(" "),a("h4",{attrs:{id:"mysql会尽量把值转换为表达式中需要的类型，而不是产生错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql会尽量把值转换为表达式中需要的类型，而不是产生错误"}},[s._v("#")]),s._v(" "),a("code",[s._v("MySQL")]),s._v("会尽量把值转换为表达式中需要的类型，而不是产生错误")]),s._v(" "),a("p",[s._v("按理说"),a("code",[s._v("'23sfd'")]),s._v("这个字符串无法转换为数字，但是"),a("code",[s._v("MySQL")]),s._v("规定只要字符串的开头部分包含数字，那么就把这个字符串转换为开头的数字，如果开头并没有包含数字，那么将被转换成"),a("code",[s._v("0")]),s._v("，比方说这样：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("'23sfd'         →   23\n'2019-08-28'    →   2019\n'11:30:32'      →   11\n'sfd'           →   0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("看个例子：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT '23sfd' + 0, 'sfd' + 0;\n+-------------+-----------+\n| '23sfd' + 0 | 'sfd' + 0 |\n+-------------+-----------+\n|          23 |         0 |\n+-------------+-----------+\n1 row in set, 2 warnings (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("不过需要注意的是，"),a("strong",[s._v("这种强制转换不能用于存储数据中（只能查询）")]),s._v("，比方说这样：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> INSERT INTO t(i1, i2, s) VALUES('sfd', 'sfd', 'aaa');\nERROR 1366 (HY000): Incorrect integer value: 'sfd' for column 'i1' at row 1\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("由于"),a("code",[s._v("i1")]),s._v("和"),a("code",[s._v("i2")]),s._v("列需要整数，而填入的字符串"),a("code",[s._v("'sfd'")]),s._v("并不能顺利的转为整数，所以报错了。")]),s._v(" "),a("h4",{attrs:{id:"在运算时会自动提升操作数的类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在运算时会自动提升操作数的类型"}},[s._v("#")]),s._v(" 在运算时会自动提升操作数的类型")]),s._v(" "),a("p",[s._v("我们知道不同数据类型能表示的数值范围是不一样的，在小的数据类型经过算数计算后得出的结果可能大于该可以表示的范围。比方说"),a("code",[s._v("t")]),s._v("表中有一条记录如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT * FROM t;\n+------+------+------+\n| i1   | i2   | s    |\n+------+------+------+\n|  100 |  100 | 200  |\n+------+------+------+\n1 row in set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("其中的"),a("code",[s._v("i1")]),s._v("列和"),a("code",[s._v("i2")]),s._v("列的类型都是"),a("code",[s._v("TINYINT")]),s._v("，而"),a("code",[s._v("TINYINT")]),s._v("能表示的最大正整数是"),a("code",[s._v("127")]),s._v("，如果我们把"),a("code",[s._v("i1")]),s._v("列的值和"),a("code",[s._v("i2")]),s._v("列的值相加会发生什么呢？请看：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT i1 + i2 FROM t;\n+---------+\n| i1 + i2 |\n+---------+\n|     200 |\n+---------+\n1 row in set (0.00 sec)\n\nmysql>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("可以看到最后的结果是"),a("code",[s._v("200")]),s._v("，可是它已经超过"),a("code",[s._v("TINYINT")]),s._v("类型的表示范围了。其实在运算的过程中，"),a("code",[s._v("MySQL")]),s._v("自动将整数类型的操作数提升到了"),a("code",[s._v("BIGINT")]),s._v("，这样就不会产生运算结果太大超过"),a("code",[s._v("TINYINT")]),s._v("能表示的数值范围的尴尬情况了。类似的，有浮点数的运算过程会把操作数自动转型为"),a("code",[s._v("DOUBLE")]),s._v("类型。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),a("p",[s._v("小贴士： 有隐式类型转换，自然也有显式类型转换。在MySQL中，可以"),a("strong",[s._v("使用CAST函数完成显式地类型转换")]),s._v("，就是我们明确指定要将特定的数值转换为某种特定类型，一般是 MySQL 底层使用，初衷不是给开发者使用的。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);