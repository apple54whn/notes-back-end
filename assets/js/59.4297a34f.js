(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{566:function(s,a,e){s.exports=e.p+"assets/img/image-20210307215512874.0b8b8992.png"},751:function(s,a,e){"use strict";e.r(a);var t=e(11),r=Object(t.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"通用指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#通用指令"}},[s._v("#")]),s._v(" 通用指令")]),s._v(" "),t("h2",{attrs:{id:"exist-是否存在"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#exist-是否存在"}},[s._v("#")]),s._v(" EXIST 是否存在")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("del key\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"del-删除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#del-删除"}},[s._v("#")]),s._v(" DEL 删除")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("exists key\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"type-类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#type-类型"}},[s._v("#")]),s._v(" TYPE 类型")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" key\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"keys-获取所有与给定匹配符相匹配的键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#keys-获取所有与给定匹配符相匹配的键"}},[s._v("#")]),s._v(" KEYS 获取所有与给定匹配符相匹配的键")]),s._v(" "),t("h3",{attrs:{id:"简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),t("p",[s._v("KEYS命令接受一个全局匹配符作为参数，然后返回数据库中所有与这个匹配符相匹配的键作为结果")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("keys pattern\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[t("p",[s._v("获取数据库包含的所有键")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("keys *\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("获取所有以"),t("code",[s._v("user::")]),s._v("为前缀的键")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("keys user::*\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("如果数据库中没有任何键与给定的匹配符相匹配，那么KEYS命令将返回一个空值")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" keys user::*\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("empty array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])])]),s._v(" "),t("h3",{attrs:{id:"全局匹配符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全局匹配符"}},[s._v("#")]),s._v(" 全局匹配符")]),s._v(" "),t("p",[s._v("KEYS命令允许使用多种不同的全局匹配符作为pattern参数的值，如下展示了一些常见的全局匹配符，并举例说明了这些匹配符的作用。或参考 "),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Glob_(programming)",target:"_blank",rel:"noopener noreferrer"}},[s._v("WIKI"),t("OutboundLink")],1),s._v("、"),t("a",{attrs:{href:"https://man7.org/linux/man-pages/man7/glob.7.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("glob程序手册"),t("OutboundLink")],1),s._v("。")]),s._v(" "),t("p",[t("img",{attrs:{src:e(566),alt:"image-20210307215512874"}})]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("keys *  查询所有\nkeys it*  查询所有以it开头\nkeys *heima  查询所有以heima结尾\nkeys ??heima  查询所有前面两个字符任意，后面以heima结尾\nkeys user:?  查询所有以user:开头，最后一个字符任意\nkeys u[st]er:1  查询所有以u开头，以er:1结尾，中间包含一个字母，s或t\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h2",{attrs:{id:"scan-以渐进方式迭代数据库中的键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#scan-以渐进方式迭代数据库中的键"}},[s._v("#")]),s._v(" SCAN 以渐进方式迭代数据库中的键")]),s._v(" "),t("p",[s._v("因为KEYS命令需要检查数据库包含的所有键，并一次性将符合条件的所有键全部返回给客户端，所以当数据库包含的键数量比较大时，使用KEYS命令可能会导致服务器被阻塞。为了解决这个问题，Redis从2.8.0版本开始提供SCAN命令，该命令是一个迭代器，它每次被调用的时候都会从数据库中获取一部分键，用户可以通过重复调用SCAN命令来迭代数据库包含的所有键")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("scan cursor\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("cursor参数用于指定迭代时使用的游标，游标记录了迭代的轨迹和进度。在开始一次新的迭代时，用户需要将游标设置为0")])]),s._v(" "),t("p",[s._v("SCAN命令的执行结果由两个元素组成")]),s._v(" "),t("ul",[t("li",[s._v("第一个元素是进行下一次迭代所需的游标，如果这个游标为0，那么说明客户端已经对数据库完成了一次完整的迭代。")]),s._v(" "),t("li",[s._v("第二个元素是一个列表，这个列表包含了本次迭代取得的数据库键；如果SCAN命令在某次迭代中没有获取到任何键，那么这个元素将是一个空列表")])]),s._v(" "),t("p",[s._v("关于SCAN命令返回的键列表，有两点需要注意")]),s._v(" "),t("ul",[t("li",[s._v("SCAN命令可能会返回重复的键，用户如果不想在结果中包含重复的键，那么就需要自己在客户端中进行检测和过滤。")]),s._v(" "),t("li",[s._v("SCAN命令返回的键数量是不确定的，有时甚至会不返回任何键，但只要命令返回的游标不为0，迭代就没有结束。")])]),s._v(" "),t("h2",{attrs:{id:"rename、renamenx-修改键名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rename、renamenx-修改键名"}},[s._v("#")]),s._v(" RENAME、RENAMENX 修改键名")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rename")]),s._v(" key new\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("RENAME命令在执行成功时将返回OK作为结果")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" name conan\nOK\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" get name\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"conan"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rename")]),s._v(" name username\nOK\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" get name\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nil"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" get username\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"conan"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("注意：")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("覆盖已存在的键")]),s._v("。如果用户指定的新键名已经被占用，那么RENAME命令会先移除占用了新键名的那个键，然后再执行改名操作")]),s._v(" "),t("li",[s._v("RENAMENX 只在新键名尚未被占用的情况下进行改名。推荐！如果用户指定的新键名已经被占用，那么RENAMENX将放弃执行改名操作")])]),s._v(" "),t("h2",{attrs:{id:"sort-对键的值进行排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sort-对键的值进行排序"}},[s._v("#")]),s._v(" SORT 对键的值进行排序")]),s._v(" "),t("h3",{attrs:{id:"介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[s._v("#")]),s._v(" 介绍")]),s._v(" "),t("p",[s._v("通过执行SORT命令对 "),t("strong",[s._v("list")]),s._v(" 元素、"),t("strong",[s._v("set")]),s._v(" 元素或者 "),t("strong",[s._v("sorted_set")]),s._v(" 成员进行排序。为了让用户能够以不同的方式进行排序，Redis为SORT命令提供了非常多的可选项，如果我们以不给定任何可选项的方式直接调用SORT命令，那么命令将对指定键存储的元素执行"),t("strong",[s._v("数字值排序")]),s._v("。默认情况下，SORT命令将按照"),t("strong",[s._v("从小到大")]),s._v("的顺序依次返回排序后的各个值")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" key "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("asc"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("desc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"字符串排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串排序"}},[s._v("#")]),s._v(" 字符串排序")]),s._v(" "),t("p",[s._v("如果我们尝试直接使用SORT命令去"),t("strong",[s._v("对字符串元素进行排序")]),s._v("，那么命令将产生一个"),t("strong",[s._v("错误")])]),s._v(" "),t("p",[s._v("为了让SORT命令能够对字符串值进行排序，我们必须让SORT命令执行字符串排序操作而不是数字值排序操作，这一点可以通过使用"),t("strong",[s._v("ALPHA选项")]),s._v("来实现")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" key alpha\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"limit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#limit"}},[s._v("#")]),s._v(" LIMIT")]),s._v(" "),t("p",[s._v("在默认情况下，SORT命令将返回所有被排序的元素，但如果我们只需要其中一部分排序结果，那么可以使用可选的LIMIT选项")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" key "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("limit offset count"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("其中offset参数用于指定返回结果之前需要跳过的元素数量，而count参数则用于指定需要获取的元素数量")]),s._v(" "),t("h3",{attrs:{id:"未完"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#未完"}},[s._v("#")]),s._v(" 未完...")]),s._v(" "),t("p",[s._v("在默认情况下，SORT命令将返回被排序的元素作为结果，但如果用户有需要，也可以使用GET选项去获取其他值作为排序结果")]),s._v(" "),t("h2",{attrs:{id:"help-generic"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#help-generic"}},[s._v("#")]),s._v(" HELP @GENERIC")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v(" @generic\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"select-切换至指定的数据库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#select-切换至指定的数据库"}},[s._v("#")]),s._v(" SELECT 切换至指定的数据库")]),s._v(" "),t("p",[s._v("一个Redis服务器可以包含多个数据库。在"),t("strong",[s._v("默认")]),s._v("情况下，"),t("strong",[s._v("Redis服务器在启动时将会创建16个数据库")]),s._v("：这些数据库都使用号码进行标识，其中第一个数据库为0号数据库，第二个数据库为1号数据库，而第三个数据库则为2号数据库，以此类推。")]),s._v(" "),t("p",[s._v("Redis虽然不允许在同一个数据库中使用两个同名的键，但是由于不同数据库拥有不同的命名空间，因此在不同数据库中使用同名的键是完全没有问题的，而用户也可以通过使用不同数据库来存储不同的数据，以此来达到重用键名并且减少键冲突的目的。")]),s._v(" "),t("p",[s._v("比如，如果我们将用户的个人信息和会话信息都存放在同一个数据库中，那么为了区分这两种信息，程序就需要使用"),t("code",[s._v("user::<id>::profile")]),s._v("格式的键来存储用户信息，并使用"),t("code",[s._v("user::<id>::session")]),s._v("格式的键来存储用户会话；但如果将这两种信息分别存储在0号数据库和1号数据库中，那么程序就可以在0号数据库中使用"),t("code",[s._v("user::<id>")]),s._v("格式的键来存储用户信息，并在1号数据库中继续使用"),t("code",[s._v("user::<id>")]),s._v("格式的键来存储用户会话。")]),s._v(" "),t("p",[s._v("当用户使用客户端与Redis服务器进行连接时，客户端一般默认都会使用0号数据库，但是通过使用SELECT命令，用户可以从当前正在使用的数据库切换到自己想要使用的数据库")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"move-将给定的键移动到另一个数据库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#move-将给定的键移动到另一个数据库"}},[s._v("#")]),s._v(" MOVE 将给定的键移动到另一个数据库")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("move key db\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("当MOVE命令成功将给定键从当前数据库移动至目标数据库时，命令返回1；")]),s._v(" "),t("p",[s._v("如果给定键并不存在于当前数据库，或者目标数据库中存在与给定键同名的键，那么MOVE命令将不做动作，只返回0表示移动失败。")]),s._v(" "),t("h2",{attrs:{id:"dbsize-获取数据库包含的键值对数量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dbsize-获取数据库包含的键值对数量"}},[s._v("#")]),s._v(" DBSIZE 获取数据库包含的键值对数量")]),s._v(" "),t("h2",{attrs:{id:"flushdb-清空当前数据库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flushdb-清空当前数据库"}},[s._v("#")]),s._v(" FLUSHDB 清空当前数据库")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("flushdb "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("async"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("FLUSHDB命令会遍历用户正在使用的数据库，移除其中包含的所有键值对，然后返回OK表示数据库已被清空。")]),s._v(" "),t("p",[s._v("与DEL命令一样，FLUSHDB命令也是一个"),t("strong",[s._v("同步移除命令")]),s._v("，并且因为FLUSHDB移除的是整个数据库而不是单个键，所以它常常会引发比DEL命令更为严重的服务器阻塞现象")]),s._v(" "),t("p",[s._v("如果用户在调用FLUSHDB命令时使用了async选项，那么实际的数据库清空操作将放在后台线程中以"),t("strong",[s._v("异步方式进行")]),s._v("，这样FLUSHDB命令就不会再阻塞服务器了。")]),s._v(" "),t("h2",{attrs:{id:"flushall-清空所有数据库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flushall-清空所有数据库"}},[s._v("#")]),s._v(" FLUSHALL 清空所有数据库")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("flushall "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("async"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("FLUSHALL命令会遍历服务器包含的所有数据库，并移除其中包含的所有键值对，然后返回OK表示所有数据库均已被清空。")]),s._v(" "),t("p",[s._v("通过指定async选项，FLUSHALL命令将以异步方式在后台线程中执行所有实际的数据库清空操作，因此它将不会再阻塞服务器")]),s._v(" "),t("h2",{attrs:{id:"其他命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他命令"}},[s._v("#")]),s._v(" 其他命令")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("quit\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ping")]),s._v(" --测试服务器是否连通\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" message\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])])])}),[],!1,null,null,null);a.default=r.exports}}]);