(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{552:function(s,a,t){s.exports=t.p+"assets/img/image-20210303225651746.9083c1f5.png"},553:function(s,a,t){s.exports=t.p+"assets/img/image-20210304001114793.513b1a8e.png"},554:function(s,a,t){s.exports=t.p+"assets/img/image-20210304001350448.ef835fe4.png"},555:function(s,a,t){s.exports=t.p+"assets/img/image-20210304001646292.cde313b3.png"},556:function(s,a,t){s.exports=t.p+"assets/img/image-20210304001754360.7abbc7b7.png"},557:function(s,a,t){s.exports=t.p+"assets/img/image-20210304001941279.d41cbc25.png"},558:function(s,a,t){s.exports=t.p+"assets/img/image-20210304002046884.4888ffbc.png"},559:function(s,a,t){s.exports=t.p+"assets/img/image-20210304002632110.636bebb8.png"},746:function(s,a,t){"use strict";t.r(a);var e=t(11),r=Object(e.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"sorted-set"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sorted-set"}},[s._v("#")]),s._v(" sorted_set")]),s._v(" "),e("h2",{attrs:{id:"介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[s._v("#")]),s._v(" 介绍")]),s._v(" "),e("ul",[e("li",[s._v("新的存储需求：数据"),e("strong",[s._v("排序")]),s._v("有利于数据的有效展示，需要提供一种可以根据自身特征进行排序的方式")]),s._v(" "),e("li",[s._v("sorted_set类型：在 set 的存储结构基础上"),e("strong",[s._v("添加可排序字段score")])]),s._v(" "),e("li",[s._v("score保存的数据存储空间是"),e("strong",[s._v("64位")]),s._v("，如果是整数范围是-9007199254740992~9007199254740992")]),s._v(" "),e("li",[s._v("score保存的数据也可以是一个双精度的double值，基于双精度浮点数的特征，可能会丢失精度，使用时候要慎重")]),s._v(" "),e("li",[s._v("sorted_set 底层存储还是基于set结构的，因此数据"),e("strong",[s._v("不能重复")]),s._v("，如果"),e("strong",[s._v("重复添加")]),s._v("相同的数据，"),e("strong",[s._v("score值将被反复覆盖")]),s._v("，保留最后一次修改的结果")])]),s._v(" "),e("p",[e("img",{attrs:{src:t(552),alt:"image-20210303225651746"}})]),s._v(" "),e("h2",{attrs:{id:"🔥zadd-添加或更新成员"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#🔥zadd-添加或更新成员"}},[s._v("#")]),s._v(" 🔥ZADD 添加或更新成员")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("ZADD sorted_set score member "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("score member"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("在"),e("strong",[s._v("默认")]),s._v("情况下，ZADD命令将返回"),e("strong",[s._v("成功添加的新成员数量")]),s._v("作为返回值")]),s._v(" "),e("p",[s._v("示例")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" zadd salary "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3500")]),s._v(" conan "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4000")]),s._v(" conanan "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),s._v(" zhangsan\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" zadd salary "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v(" conanan\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" --修改score\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h3",{attrs:{id:"xx-nx-选项"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xx-nx-选项"}},[s._v("#")]),s._v(" XX / NX 选项")]),s._v(" "),e("p",[s._v("从Redis 3.0.2版本开始，Redis允许用户在执行ZADD命令时，通过使用可选的XX选项或者NX选项来显式地指示命令只执行更新操作或者只执行添加操作")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("zadd sorted_set [xx|nx] score member [score member ...]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ul",[e("li",[s._v("带有XX选项的ZADD命令只会对有序集合已有的成员进行"),e("strong",[s._v("更新")]),s._v("，而不会向有序集合添加任何新成员")]),s._v(" "),e("li",[s._v("带有NX选项的ZADD命令只会向有序集合"),e("strong",[s._v("添加新成员")]),s._v("，而不会对已有的成员进行任何更新")])]),s._v(" "),e("h3",{attrs:{id:"ch-被修改成员的数量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ch-被修改成员的数量"}},[s._v("#")]),s._v(" CH 被修改成员的数量")]),s._v(" "),e("p",[s._v("在"),e("strong",[s._v("默认")]),s._v("情况下，ZADD命令会"),e("strong",[s._v("返回新添加成员的数量")]),s._v("作为返回值，但是从Redis 3.0.2版本开始，用户可以通过给定"),e("strong",[s._v("CH")]),s._v("选项，让ZADD命令返回被修改（"),e("strong",[s._v("changed")]),s._v("）成员的数量作为返回值")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("zadd sorted_set [ch] score member [score member ...]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("“被修改成员”指的是"),e("strong",[s._v("新添加")]),s._v("到有序集合的成员，以及分值"),e("strong",[s._v("被更新")]),s._v("了的成员")]),s._v(" "),e("h2",{attrs:{id:"🔥zrem-移除指定的成员"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#🔥zrem-移除指定的成员"}},[s._v("#")]),s._v(" 🔥ZREM 移除指定的成员")]),s._v(" "),e("p",[s._v("用户可以从有序集合中移除指定的一个或多个成员以及与这些成员相关联的分值")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("zrem sorted_set member [member ...]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("返回"),e("strong",[s._v("被移除成员的数量")])]),s._v(" "),e("p",[s._v("实例")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" zrem salary zhangsan\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("如果用户给定的某个成员并不存在于有序集合中，那么ZREM将自动忽略该成员")]),s._v(" "),e("h2",{attrs:{id:"🔥zremrangebyrank-移除指定排名范围内的成员"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#🔥zremrangebyrank-移除指定排名范围内的成员"}},[s._v("#")]),s._v(" 🔥ZREMRANGEBYRANK 移除指定排名范围内的成员")]),s._v(" "),e("p",[s._v("从"),e("strong",[s._v("升序排列的有序集合中移除位于指定排名范围内的成员")]),s._v("，然后返回被移除成员的数量")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("ZREMRANGEBYRANK sorted_set start end\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("命令接受的也是一个闭区间范围，也就是说，排名为start和end的成员也将被移除")]),s._v(" "),e("p",[s._v("以下代码展示了如何移除salary有序集合中升序排名0～3位的4个成员")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" zremrangebyrank salary "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("从salary有序集合中移除排名倒数前3位的成员")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" zremrangebyrank salary -3 -1\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h2",{attrs:{id:"🔥zremrangebyscore-移除指定分值范围内的成员"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#🔥zremrangebyscore-移除指定分值范围内的成员"}},[s._v("#")]),s._v(" 🔥ZREMRANGEBYSCORE 移除指定分值范围内的成员")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("zremrangebyscore key min max\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("从有序集合中移除位于指定分值范围内的成员，并在移除操作执行完毕返回被移除成员的数量")]),s._v(" "),e("ul",[e("li",[s._v("min max 也可以使用 "),e("code",[s._v("(")]),s._v("、"),e("code",[s._v("-inf")]),s._v("、"),e("code",[s._v("+inf")])])]),s._v(" "),e("h2",{attrs:{id:"🔥zscore-获取成员的分值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#🔥zscore-获取成员的分值"}},[s._v("#")]),s._v(" 🔥ZSCORE 获取成员的分值")]),s._v(" "),e("p",[s._v("用户可以获取与给定成员相关联的分值")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("zscore sorted_set member\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("示例")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" zscore salary conanan\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"5000"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" zscore salary conanann\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nil"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("如果用户给定的有序集合并不存在，或者有序集合中并未包含给定的成员，那么ZSCORE命令将返回空值")]),s._v(" "),e("h2",{attrs:{id:"🔥zrank、zrevrank-获取成员在有序集合中的排名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#🔥zrank、zrevrank-获取成员在有序集合中的排名"}},[s._v("#")]),s._v(" 🔥ZRANK、ZREVRANK 获取成员在有序集合中的排名")]),s._v(" "),e("p",[s._v("取得给定成员在有序集合中的排名")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("zrank sorted_set member\nzrevrank sorted_set member\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("ul",[e("li",[s._v("其中ZRANK命令返回的是成员的"),e("strong",[s._v("升序")]),s._v("排列排名，即成员在按照分值从小到大进行排列时的排名，")]),s._v(" "),e("li",[s._v("ZREVRANK命令返回的则是成员的"),e("strong",[s._v("降序")]),s._v("排列排名，即成员在按照分值从大到小进行排列时的排名")]),s._v(" "),e("li",[s._v("如果用户给定的有序集合并不存在，或者用户给定的成员并不存在于有序集合当中，那么ZRANK命令和ZREVRANK命令将返回一个空值")])]),s._v(" "),e("p",[s._v("示例")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" zrange salary "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" -1 withscores\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"conan"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3500"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zhangsan"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3500"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"conanan"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"5500"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" zrank salary conan\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" zrank salary zhangsan\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" zrank salary conanan\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[s._v("注意：score相同但是排名不同！"),e("strong",[s._v("不是很公平")]),s._v("！")]),s._v(" "),e("h2",{attrs:{id:"🔥zincrby-对成员的分值执行自增或自减操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#🔥zincrby-对成员的分值执行自增或自减操作"}},[s._v("#")]),s._v(" 🔥ZINCRBY 对成员的分值执行自增或自减操作")]),s._v(" "),e("p",[s._v("对有序集合中指定成员的分值执行自增操作，为其加上指定的增量（加上负增量也行哦）")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("zincrby sorted_set increment member\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("在执行完自增操作之后，将返回给定成员当前的分值")]),s._v(" "),e("p",[s._v("示例")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" zincrby salary "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("500")]),s._v(" conanan\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"5500"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("注意：")]),s._v(" "),e("ul",[e("li",[s._v("如果用户在执行ZINCRBY命令时，给定成员并不存在于有序集合中，或者给定的有序集合并不存在，那么ZINCRBY命令将直接把给定的成员添加到有序集合中，并把给定的增量设置为该成员的分值，效果相当于执行ZADD命令")])]),s._v(" "),e("h2",{attrs:{id:"🔥zcard-获取有序集合的大小"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#🔥zcard-获取有序集合的大小"}},[s._v("#")]),s._v(" 🔥ZCARD 获取有序集合的大小")]),s._v(" "),e("p",[s._v("取得有序集合的基数，即有序集合包含的成员数量")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("zcard sorted_set\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("实例")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" zcard salary\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h2",{attrs:{id:"🔥zcount-统计指定分值范围内的成员数量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#🔥zcount-统计指定分值范围内的成员数量"}},[s._v("#")]),s._v(" 🔥ZCOUNT 统计指定分值范围内的成员数量")]),s._v(" "),e("p",[s._v("统计出有序集合中分值介于指定范围之内的成员数量")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("zcount sorted_set min max\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ul",[e("li",[s._v("min max 也可以使用 "),e("code",[s._v("(")]),s._v("、"),e("code",[s._v("-inf")]),s._v("、"),e("code",[s._v("+inf")])])]),s._v(" "),e("p",[s._v("统计出salary有序集合中分值介于3000～5000之间的成员数量")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" zcount salary "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" -- "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("个成员\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h2",{attrs:{id:"🔥zrange、zrevrange-获取指定索引范围内的成员"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#🔥zrange、zrevrange-获取指定索引范围内的成员"}},[s._v("#")]),s._v(" 🔥ZRANGE、ZREVRANGE 获取指定索引范围内的成员")]),s._v(" "),e("p",[s._v("以升序排列或者降序排列方式，从有序集合中获取指定索引范围内的成员")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("zrange sorted_set start end "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("withscores"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nzrevrange sorted_set start end "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("withscores"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("ul",[e("li",[s._v("ZRANGE命令用于获取按照分值大小实施"),e("strong",[s._v("升序排列")]),s._v("的成员，")]),s._v(" "),e("li",[s._v("ZREVRANGE命令则用于获取按照分值大小实施"),e("strong",[s._v("降序排列")]),s._v("的成员")]),s._v(" "),e("li",[s._v("命令中的start索引和end索引指定的是"),e("strong",[s._v("闭区间索引范围")]),s._v("。且记住是"),e("strong",[s._v("排序后才使用start、end截取")])]),s._v(" "),e("li",[s._v("如果用户给定的有序集合并不存在，那么ZRANGE命令和ZREVRANGE命令将返回一个空列表")])]),s._v(" "),e("h3",{attrs:{id:"withscores-获取成员及其分值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#withscores-获取成员及其分值"}},[s._v("#")]),s._v(" WITHSCORES 获取成员及其分值")]),s._v(" "),e("p",[s._v("默认情况下，ZRANGE命令和ZREVRANGE命令只会返回指定索引范围内的成员，如果用户想要在获取这些成员的同时也获取与之相关联的分值，那么可以在调用ZRANGE命令或者ZREVRANGE命令的时候，给定可选的WITHSCORES选项")]),s._v(" "),e("h2",{attrs:{id:"🔥zrangebyscore、zrevrangebyscore-获取指定分值范围内的成员"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#🔥zrangebyscore、zrevrangebyscore-获取指定分值范围内的成员"}},[s._v("#")]),s._v(" 🔥ZRANGEBYSCORE、ZREVRANGEBYSCORE 获取指定分值范围内的成员")]),s._v(" "),e("p",[s._v("通过使用ZRANGEBYSCORE命令或者ZREVRANGEBYSCORE命令，用户可以以升序排列或者降序排列的方式获取有序集合中分值介于指定范围内的成员")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("zrangebyscore sorted_set min max "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("withscores"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("limit offset count"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nzrevrangebyscore sorted_set max min "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("withscores"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("limit offset count"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("ul",[e("li",[s._v("命令的min参数和max参数分别用于指定用户想要获取的成员的最小分值和最大分值")]),s._v(" "),e("li",[s._v("不过需要注意的是，俩命令"),e("strong",[s._v("接受min参数和max参数的顺序正好相反")]),s._v("。")]),s._v(" "),e("li",[s._v("min max 也可以使用 "),e("code",[s._v("(")]),s._v("、"),e("code",[s._v("-inf")]),s._v("、"),e("code",[s._v("+inf")])])]),s._v(" "),e("h3",{attrs:{id:"withscores-获取成员及其分值-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#withscores-获取成员及其分值-2"}},[s._v("#")]),s._v(" WITHSCORES 获取成员及其分值")]),s._v(" "),e("h3",{attrs:{id:"limit-限制命令返回的成员数量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#limit-限制命令返回的成员数量"}},[s._v("#")]),s._v(" LIMIT 限制命令返回的成员数量")]),s._v(" "),e("p",[s._v("LIMIT选项接受offset和count两个参数作为输入，其中"),e("strong",[s._v("offset")]),s._v("参数用于指定命令在返回结果之前需要"),e("strong",[s._v("跳过的成员数量")]),s._v("，而"),e("strong",[s._v("count")]),s._v("参数则用于指示命令最多可以"),e("strong",[s._v("返回多少个成员")])]),s._v(" "),e("h3",{attrs:{id:"使用开区间分值范围"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用开区间分值范围"}},[s._v("#")]),s._v(" ( 使用开区间分值范围")]),s._v(" "),e("p",[s._v("如果用户想要定义的是开区间而不是闭区间，那么可以在给定分值范围时，在分值参数的前面加上一个单括号“(”，这样，具有给定分值的成员就不会出现在命令返回的结果当中")]),s._v(" "),e("p",[s._v("以下命令只会返回分值大于3500且小于5000的成员，但并不会返回分值等于3500或者等于5000的成员")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" zrangebyscore salary "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3500")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v(" withscores\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"使用无限值作为范围"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用无限值作为范围"}},[s._v("#")]),s._v(" 使用无限值作为范围")]),s._v(" "),e("p",[s._v("min参数和max参数除了可以是普通的分值或者带有(符号的分值之外，还可以是特殊值**+inf"),e("strong",[s._v("或者")]),s._v("-inf**，前者用于表示"),e("strong",[s._v("无穷大")]),s._v("，而后者则用于表示"),e("strong",[s._v("无穷小")]),s._v("：当我们只想定义分值范围的上限或者下限，而不是同时定义分值范围的上限和下限时，+inf和-inf就可以派上用场")]),s._v(" "),e("p",[s._v("如果我们想要获取salary有序集合中所有分值小于5000的成员，那么可以执行以下命令")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" zrangebyscore salary -inf "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v(" withscores\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("如果我们想要获取salary有序集合中所有分值大于4000的成员，那么可以执行以下命令")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" zrangebyscore salary "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4000")]),s._v(" +inf withscores\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"🔥zinterstore、zunionstore-交并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#🔥zinterstore、zunionstore-交并"}},[s._v("#")]),s._v(" 🔥ZINTERSTORE、ZUNIONSTORE 交并")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("zinterstore destination numkeys sorted_set "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("sorted_set"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("WEIGHTS weight"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("AGGREGATE SUM"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("MIN"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("MAX"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nzunionstore destination numkeys sorted_set "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("sorted_set"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("WEIGHTS weight"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("AGGREGATE SUM"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("MIN"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("MAX"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("ul",[e("li",[s._v("numbers参数用于指定"),e("strong",[s._v("参与计算的有序集合数量")])]),s._v(" "),e("li",[s._v("之后的一个或多个sorted_set参数则用于指定参与计算的各个有序集合键")]),s._v(" "),e("li",[s._v("计算得出的结果则会存储到destination参数指定的键中")]),s._v(" "),e("li",[s._v("返回计算结果包含的成员数量")]),s._v(" "),e("li",[e("strong",[s._v("值相同的会将score相加")])])]),s._v(" "),e("h3",{attrs:{id:"aggregate-指定聚合函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#aggregate-指定聚合函数"}},[s._v("#")]),s._v(" AGGREGATE 指定聚合函数")]),s._v(" "),e("p",[s._v("通过这个选项，用户可以决定使用哪个聚合函数来计算结果有序集合成员的分值")]),s._v(" "),e("p",[s._v("在没有显式地使用AGGREGATE选项指定聚合函数的情况下，ZUNIONSTORE和ZINTERSTORE"),e("strong",[s._v("默认使用SUM作为聚合函数")])]),s._v(" "),e("p",[e("img",{attrs:{src:t(553),alt:"image-20210304001114793"}})]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" zinterstore agg-sum "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" ss1 ss2 ss3 AGGREGATE SUM\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" zrange agg-sum "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" -1 withscores\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"8"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("img",{attrs:{src:t(554),alt:"image-20210304001350448"}})]),s._v(" "),e("h3",{attrs:{id:"weights-设置权重"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#weights-设置权重"}},[s._v("#")]),s._v(" WEIGHTS 设置权重")]),s._v(" "),e("p",[s._v("在默认情况下，ZUNIONSTORE和ZINTERSTORE将直接使用给定有序集合的成员分值去计算结果有序集合的成员分值，但是在有需要的情况下，用户也可以通过可选的WEIGHTS参数为各个给定有序集合的成员分值设置权重")]),s._v(" "),e("p",[s._v("在使用WEIGHTS选项时，用户需要为每个给定的有序集合分别设置一个权重，命令会将这个权重与成员的分值相乘，得出成员的新分值，然后执行聚合计算；与此相反，如果用户在使用WEIGHTS选项时，不想改变某个给定有序集合的分值，那么只需要将那个有序集合的权重设置为1即可")]),s._v(" "),e("p",[s._v("如果我们对图所示的3个有序集合执行以下命令")]),s._v(" "),e("p",[e("img",{attrs:{src:t(555),alt:"image-20210304001646292"}})]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" zunionstore weighted-result "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" wss1 wss2 wss3 weigths "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v('那么wss1有序集合成员"a"的分值2将被乘以3，变为6; wss2有序集合成员"b"的分值4则会被乘以5，变为20;wss3有序集合成员的分值3则会保持不变；通过进行并集计算，命令最终将得出图所示的结果有序集合weighted-result')]),s._v(" "),e("p",[e("img",{attrs:{src:t(556),alt:"image-20210304001754360"}})]),s._v(" "),e("h3",{attrs:{id:"使用-set-作为输入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-set-作为输入"}},[s._v("#")]),s._v(" 使用 set 作为输入")]),s._v(" "),e("p",[s._v("ZUNIONSTORE和ZINTERSTORE除了可以使用sorted_set作为输入之外，还可以使用set作为输入：在默认情况下，这两个命令将把给定集合看作所有成员的分值都为1的有序集合来进行计算。如果有需要，用户也可以使用WEIGHTS选项来改变给定集合的分值，比如，如果你希望某个集合所有成员的分值都被看作10而不是1，那么只需要在执行命令时把那个集合的权重设置为10即可。")]),s._v(" "),e("img",{staticStyle:{zoom:"33%"},attrs:{src:t(557),alt:"image-20210304001941279"}}),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" zunionstore mixed "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" alphabets another-alphabets\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("img",{staticStyle:{zoom:"50%"},attrs:{src:t(558),alt:"image-20210304002046884"}}),s._v(" "),e("h2",{attrs:{id:"zrangebylex、zrevrangebylex-返回指定字典序范围内的成员"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zrangebylex、zrevrangebylex-返回指定字典序范围内的成员"}},[s._v("#")]),s._v(" ZRANGEBYLEX、ZREVRANGEBYLEX 返回指定字典序范围内的成员")]),s._v(" "),e("p",[s._v("对于拥有不同分值的有序集合成员来说，成员的大小将由分值决定，至于"),e("strong",[s._v("分值相同的成员，它们的大小则由该成员在字典序中的大小决定")])]),s._v(" "),e("p",[s._v("这种排列规则的一个特例是，当有序集合的所有成员"),e("strong",[s._v("都拥有相同的分值")]),s._v("时，有序集合的成员将"),e("strong",[s._v("不再根据分值进行排序")]),s._v("，而是"),e("strong",[s._v("根据字典序进行排序")]),s._v("。在这种情况下，本章前面介绍的根据分值对成员进行操作的命令，比如ZRANGEBYSCORE、ZCOUNT和ZREMRANGEBYSCORE等，都将不再适用")]),s._v(" "),e("p",[s._v("为了让用户可以对字典序排列的有序集合执行类似ZRANGEBYSCORE这样的操作，Redis提供了相应的"),e("strong",[s._v("ZRANGEBYLEX")]),s._v("、"),e("strong",[s._v("ZREVRANGEBYLEX")]),s._v("、"),e("strong",[s._v("ZLEXCOUNT")]),s._v("和"),e("strong",[s._v("ZREMRANGEBYLEX")]),s._v("命令，这些命令可以分别对字典序排列的有序集合执行升序排列的范围获取操作、降序排列的范围获取操作、统计位于字典序指定范围内的成员数量以及移除位于字典序指定范围内的成员，本章接下来将分别对这些命令进行介绍。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("ZRANGEBYLEX sorted_set min max [limit offset count]\nZREVRANGEBYLEX sorted_set max min [limit offset count]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("命令的min参数和max参数用于指定用户想要获取的字典序范围，它们的值可以是以下4种值之一：")]),s._v(" "),e("ul",[e("li",[s._v("带有"),e("code",[s._v("[")]),s._v("符号的值表示在结果中包含与给定值具有同等字典序大小的成员。")]),s._v(" "),e("li",[s._v("带有"),e("code",[s._v("(")]),s._v("符号的值表示在结果中不包含与给定值具有同等字典序大小的成员。")]),s._v(" "),e("li",[s._v("加号"),e("code",[s._v("+")]),s._v("表示无穷大。")]),s._v(" "),e("li",[s._v("减号"),e("code",[s._v("-")]),s._v("表示无穷小。")])]),s._v(" "),e("p",[e("img",{attrs:{src:t(559),alt:"image-20210304002632110"}})]),s._v(" "),e("p",[s._v("举个例子，对于图所示的words有序集合来说，如果我们想要通过ZRANGEBYLEX命令获取words有序集合包含的所有成员，那么只需要将min参数的值设置为-, max参数的值设置为+即可")]),s._v(" "),e("p",[s._v('如果我们想要获取words有序集合中所有以字母"a"开头的成员，那么只需要将min参数的值设置为[a ,max参数的值设置为(b即可')]),s._v(" "),e("p",[s._v('如果我们想要获取words有序集合中所有字典序小于字母"c"的成员，那么只需要将min参数的值设置为-, max参数的值设置为(c即可')]),s._v(" "),e("h3",{attrs:{id:"limit-限制命令返回的成员数量-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#limit-限制命令返回的成员数量-2"}},[s._v("#")]),s._v(" LIMIT 限制命令返回的成员数量")]),s._v(" "),e("h2",{attrs:{id:"zlexcount-统计位于字典序指定范围内的成员数量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zlexcount-统计位于字典序指定范围内的成员数量"}},[s._v("#")]),s._v(" ZLEXCOUNT 统计位于字典序指定范围内的成员数量")]),s._v(" "),e("p",[s._v("对于按照字典序排列的有序集合，用户可以使用ZLEXCOUNT命令统计有序集合中位于字典序指定范围内的成员数量")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("ZLEXCOUNT sorted_set min max\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v('通过执行以下命令，我们可以统计出words有序集合中以字母"a"开头的成员数量')]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" ZLEXCOUNT words "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("a "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v('用以下命令，统计出有序集合中字典序大于等于字母"b"的成员数量')]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" ZLEXCOUNT words "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("b +\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"zremrangebylex-移除位于字典序指定范围内的成员"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zremrangebylex-移除位于字典序指定范围内的成员"}},[s._v("#")]),s._v(" ZREMRANGEBYLEX 移除位于字典序指定范围内的成员")]),s._v(" "),e("p",[s._v("对于按照字典序排列的有序集合，用户可以使用ZREMRANGEBYLEX命令去移除有序集合中位于字典序指定范围内的成员")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("ZREMRANGEBYLEX sorted_set min max\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("在移除用户指定的成员之后，将返回被移除成员的数量作为命令的返回值")]),s._v(" "),e("p",[s._v('以下代码展示了如何移除words有序集合中所有以字母"b"开头的成员')]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" ZREMRANGEBYLEX words "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("b "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"🔥zpopmax、zpopmin-弹出分值最高和最低的成员"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#🔥zpopmax、zpopmin-弹出分值最高和最低的成员"}},[s._v("#")]),s._v(" 🔥ZPOPMAX、ZPOPMIN 弹出分值最高和最低的成员")]),s._v(" "),e("p",[s._v("Redis 5.0版本新添加的两个命令，分别用于移除并返回有序集合中分值最大和最小的N个元素")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("ZPOPMAX sorted_set "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("count"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nZPOPMIN sorted_set "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("count"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("其中被移除元素的数量可以通过可选的count参数来指定。如果用户没有显式地给定count参数，那么命令默认只会移除一个元素")]),s._v(" "),e("h2",{attrs:{id:"🔥bzpopmax、bzpopmin-阻塞式最大-最小元素弹出操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#🔥bzpopmax、bzpopmin-阻塞式最大-最小元素弹出操作"}},[s._v("#")]),s._v(" 🔥BZPOPMAX、BZPOPMIN 阻塞式最大/最小元素弹出操作")]),s._v(" "),e("p",[s._v("Redis 5.0版本新添加的两个命令，BZPOPMAX命令和BZPOPMIN命令分别是ZPOPMAX命令以及ZPOPMIN命令的阻塞版本，这两个阻塞命令都接受任意多个有序集合和一个"),e("strong",[s._v("秒级精度")]),s._v("的超时时限作为参数")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("BZPOPMAX sorted_set "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("sorted_set "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v("\nBZPOPMIN sorted_set "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("sorted_set "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("接收到参数的BZPOPMAX命令和BZPOPMIN命令会依次检查用户给定的有序集合，并从它遇到的第一个非空有序集合中弹出指定的元素。如果命令在检查了所有给定有序集合之后都没有发现可弹出的元素，那么它将阻塞执行命令的客户端，并在给定的时限之内等待可弹出的元素出现，直到等待时间超过给定时限为止。用户可以通过"),e("strong",[s._v("将超时时限设置为0来让命令一直阻塞，直到可弹出的元素出现为止")]),s._v("。")]),s._v(" "),e("p",[s._v("BZPOPMAX命令和BZPOPMIN命令在成功弹出元素时将返回一个包含3个项的列表，这3个项分别为"),e("strong",[s._v("被弹出元素所在的有序集合")]),s._v("、"),e("strong",[s._v("被弹出元素的成员")]),s._v("以及"),e("strong",[s._v("被弹出元素的分值")]),s._v("。与此相反，如果这两个命令因为等待超时而未能弹出任何元素，那么它们将返回一个空值nil作为结果")]),s._v(" "),e("h2",{attrs:{id:""}},[e("a",{staticClass:"header-anchor",attrs:{href:"#"}},[s._v("#")]),s._v(" ====================")]),s._v(" "),e("h2",{attrs:{id:"🔥【场景】排行榜"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#🔥【场景】排行榜"}},[s._v("#")]),s._v(" 🔥【场景】排行榜")]),s._v(" "),e("p",[s._v("我们在网上常常会看到各式各样的排行榜，比如，在音乐网站上可能会看到试听排行榜、下载排行榜、华语歌曲排行榜和英语歌曲排行榜等，而在视频网站上可能会看到观看排行榜、购买排行榜、收藏排行榜等，甚至连项目托管网站GitHub都提供了各种不同的排行榜，以此来帮助用户找到近期最受人瞩目的新项目。")]),s._v(" "),e("p",[s._v("一个使用有序集合实现的排行榜程序：")]),s._v(" "),e("ul",[e("li",[s._v("这个程序使用ZADD命令向排行榜中添加被排序的元素及其分数，并使用ZREVRANK命令去获取元素在排行榜中的排名，以及使用ZSCORE命令去获取元素的分数。")]),s._v(" "),e("li",[s._v("当用户不再需要对某个元素进行排序的时候，可以调用由ZREM命令实现的remove()方法，从排行榜中移除该元素。")]),s._v(" "),e("li",[s._v("如果用户想要修改某个被排序元素的分数，那么只需要调用由ZINCRBY命令实现的increase_score()方法或者decrease_score()方法即可。")]),s._v(" "),e("li",[s._v("当用户想要获取排行榜前N位的元素及其分数时，只需要调用由ZREVRANGE命令实现的top()方法即可。")])]),s._v(" "),e("h2",{attrs:{id:"🔥【场景】时间线排序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#🔥【场景】时间线排序"}},[s._v("#")]),s._v(" 🔥【场景】时间线排序")]),s._v(" "),e("p",[s._v("在互联网上，有很多网站都会根据内容的发布时间来对内容进行排序，比如：")]),s._v(" "),e("ul",[e("li",[s._v("博客系统会按照文章发布时间的先后，把最近发布的文章放在前面，而发布时间较早的文章则放在后面，这样访客在浏览博客的时候，就可以先阅读最新的文章，然后再阅读较早的文章。")]),s._v(" "),e("li",[s._v("新闻网站会按照新闻的发布时间，把最近发生的新闻放在网站的前面，而早前发生的新闻则放在网站的后面，这样当用户访问该网站的时候，就可以第一时间查看到最新的新闻报道。")]),s._v(" "),e("li",[s._v("诸如微博和Twitter这样的微博客都会把用户最新发布的消息放在页面的前面，而稍早之前发布的消息则放在页面的后面，这样用户就可以通过向后滚动网页，查看最近一段时间自己关注的人都发表了哪些动态。类似的情形还有很多。通过对这类行为进行抽象，我们可以创建出代码清单6-2所示的时间线程序：")]),s._v(" "),e("li",[s._v("这个程序会把被添加到时间线里面的元素用作成员，与元素相关联的时间戳用作分值，将元素和它的时间戳添加到有序集合中。")]),s._v(" "),e("li",[s._v("因为时间线中的每个元素都有一个与之相关联的"),e("strong",[s._v("时间戳")]),s._v("，所以时间线中的元素将按照时间戳的大小进行排序。")]),s._v(" "),e("li",[s._v("通过对时间线中的元素执行ZREVRANGE命令或者ZREVRANGEBYSCORE命令，用户可以以分页的方式按顺序取出时间线中的元素，或者从时间线中取出指定时间区间内的元素")])]),s._v(" "),e("h2",{attrs:{id:"🔥【场景】商品推荐"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#🔥【场景】商品推荐"}},[s._v("#")]),s._v(" 🔥【场景】商品推荐")]),s._v(" "),e("p",[s._v("在浏览网上商城的时候，我们常常会看到类似“购买此商品的顾客也同时购买”这样的商品推荐功能")]),s._v(" "),e("p",[s._v("从抽象的角度来讲，这些推荐功能实际上都是通过记录用户的访问路径来实现的：如果用户在对一个目标执行了类似浏览或者购买这样的操作之后，也对另一个目标执行了相同的操作，那么程序就会对这次操作的访问路径进行记录和计数，然后程序就可以通过计数结果来知道用户在对指定目标执行了某个操作之后，还会对哪些目标执行相同的操作。")]),s._v(" "),e("p",[s._v("使用以上原理实现的路径统计程序")]),s._v(" "),e("ul",[e("li",[s._v("每当用户从起点origin对终点destination进行一次访问，程序都会使用ZINCRBY命令对存储着起点origin访问记录的有序集合的destination成员执行一次分值加1操作。")]),s._v(" "),e("li",[s._v("在此之后，程序只需要对存储着origin访问记录的有序集合执行ZREVRANGE命令，就可以知道用户在访问了起点origin之后，最经常访问的目的地有哪些。")])]),s._v(" "),e("h2",{attrs:{id:"🔥【场景】自动补全"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#🔥【场景】自动补全"}},[s._v("#")]),s._v(" 🔥【场景】自动补全")]),s._v(" "),e("p",[s._v("包含大量信息的网站常常会在搜索或者查找功能上提供自动补全特性，这一特性可以帮助用户更快速地找到他们想要的信息。比如，当我们在搜索引擎中输入“黄”字的时候，搜索引擎的自动补全特性就会列出一些比较著名的以“黄”字开头的人或者物，以便用户可以更快速地找到相关信息")]),s._v(" "),e("p",[s._v("为了尽可能地节约内存，一个高效的自动补全程序应该只存储热门关键字的自动补全结果，并移除无人访问的冷门关键字的自动补全结果。其中一种方法就是使用排行榜程序，为用户输入的关键字构建一个排行榜，然后定期地删除排名靠后的关键字的自动补全结果。")]),s._v(" "),e("p",[s._v("排行榜的方法虽然可行，但是却需要用程序定期删除自动补全结果，使用起来相当麻烦。一个更方便也更优雅的方法，就是使用EXPIRE命令和PEXPIRE命令的更新特性去实现自动的冷门数据淘汰机制。为此，我们可以修改自动补全程序，让它在每次处理用户输入的时候，为相应关键字的自动补全结果设置生存时间。")]),s._v(" "),e("p",[s._v("详细查看书本")]),s._v(" "),e("h2",{attrs:{id:"🔥【场景】即时任务-消息队列执行管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#🔥【场景】即时任务-消息队列执行管理"}},[s._v("#")]),s._v(" 🔥【场景】即时任务/消息队列执行管理")]),s._v(" "),e("p",[s._v("简单的场景")]),s._v(" "),e("ul",[e("li",[s._v("每处理一个使用 zremrangebyrank mq 0 0 即可")])]),s._v(" "),e("p",[s._v("复杂的场景，如多条件任务权重设定，如果权重条件过多时，需要对排序score值进行处理，保障score值能够兼容2条件或者多条件，例如外贸订单优先于国内订单，总裁订单优先于员工订单，经理订单优先于员工订单")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("因score长度受限，需要对数据进行截断处理，尤其是时间设置为小时或分钟级即可(折算后)")])]),s._v(" "),e("li",[e("p",[s._v("先设定订单类别，后设定订单发起角色类别，"),e("strong",[s._v("整体score长度必须是统一的")]),s._v("，"),e("strong",[s._v("不足位补0")]),s._v("。第一排序规则"),e("strong",[s._v("首位不得是0")])]),s._v(" "),e("ul",[e("li",[s._v("例如外贸101，国内102；经理004，员工008。")]),s._v(" "),e("li",[s._v("员工下的外贸单score值为101008(优先)")]),s._v(" "),e("li",[s._v("经理下的国内单score值为102004")])])])]),s._v(" "),e("h2",{attrs:{id:"🔥【场景】定时任务执行顺序管理或任务过期管理-仅参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#🔥【场景】定时任务执行顺序管理或任务过期管理-仅参考"}},[s._v("#")]),s._v(" 🔥【场景】定时任务执行顺序管理或任务过期管理—仅参考")]),s._v(" "),e("h3",{attrs:{id:"业务场景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#业务场景"}},[s._v("#")]),s._v(" 业务场景")]),s._v(" "),e("p",[s._v("基础服务+增值服务类网站会设定各位会员的试用，让用户充分体验会员优势。例如观影试用VIP、游戏 VIP体验、云盘下载体验VIP、数据查看体验VIP。当VIP体验到期后，如果有效管理此类信息。即便对于正式 VIP用户也存在对应的管理方式。")]),s._v(" "),e("p",[s._v("网站会定期开启投票、讨论，限时进行，逾期作废。如何有效管理此类过期信息。")]),s._v(" "),e("h3",{attrs:{id:"解决方案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[s._v("#")]),s._v(" 解决方案")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("对于基于时间线限定（到期时间）的任务处理，将"),e("strong",[s._v("处理时间记录为score值")]),s._v("，利用排序功能区分处理的先后顺序")])]),s._v(" "),e("li",[e("p",[s._v("记录下一个要处理的时间，当到期后处理对应任务，移除redis中的记录，并记录下一个要处理的时间")])]),s._v(" "),e("li",[e("p",[s._v("当新任务加入时，判定并更新当前下一个要处理的任务时间")])]),s._v(" "),e("li",[e("p",[s._v("为提升sorted_set的性能，通常将任务根据特征存储成若干个sorted_set。例如1小时内，1天内，周内，月内，季内，年度等，操作时逐级提升，将即将操作的若干个任务纳入到1小时内处理的队列中")])]),s._v(" "),e("li",[e("p",[s._v("获取当前系统时间")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("直接使用 ZREMRANGEBYSCORE 并配合 time 命令即可")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);