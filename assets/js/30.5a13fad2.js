(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{534:function(t,s,a){t.exports=a.p+"assets/img/1609768381293-0c27bba5-225c-43ae-9832-5e2f1584a4d9.c16986d7.png"},535:function(t,s,a){t.exports=a.p+"assets/img/1609768399408-3b346640-ec41-402a-a082-ea438e81e01c.dab80a85.png"},536:function(t,s,a){t.exports=a.p+"assets/img/1609768488034-ae508b84-efe8-47c9-bc71-66ec7274a251.1f0981c8.png"},736:function(t,s,a){"use strict";a.r(s);var r=a(11),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"mysql-的系统架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mysql-的系统架构"}},[t._v("#")]),t._v(" MySQL 的系统架构")]),t._v(" "),r("h2",{attrs:{id:"系统架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#系统架构"}},[t._v("#")]),t._v(" 系统架构")]),t._v(" "),r("p",[r("img",{attrs:{src:a(534),alt:"image.png"}})]),t._v(" "),r("p",[t._v("MySQL 是 C/S 架构，服务端程序适用 mysqld，整体流程如下：")]),t._v(" "),r("p",[r("img",{attrs:{src:a(535),alt:"image.png"}})]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("连接层")]),t._v("：客户端和服务器端建立连接，客户端发送 SQL 至服务端；")]),t._v(" "),r("li",[r("strong",[t._v("SQL 层")]),t._v("：对 SQL 语句进行查询处理；与数据库文件的存储方式无关；其结构如下：")]),t._v(" "),r("li",[r("strong",[t._v("存储引擎层")]),t._v("：与数据库文件打交道，负责数据的存储和读取。")])]),t._v(" "),r("h2",{attrs:{id:"sql-如何执行"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#sql-如何执行"}},[t._v("#")]),t._v(" SQL 如何执行")]),t._v(" "),r("p",[r("img",{attrs:{src:a(536),alt:"image.png"}})]),t._v(" "),r("ul",[r("li",[t._v("查询缓存：Server 如果在查询缓存中发现了这条 SQL 语句，就会直接将结果返回给客户端；如果没有，就进入到解析器阶段。需要说明的是，因为查询缓存往往效率不高，所以在 MySQL8.0 之后就抛弃了这个功能。")]),t._v(" "),r("li",[r("strong",[t._v("解析器")]),t._v("：在解析器中对 SQL 语句进行语法分析、语义分析。")]),t._v(" "),r("li",[r("strong",[t._v("优化器")]),t._v("：在优化器中会确定 SQL 语句的执行路径，比如是根据全表检索，还是根据索引来检索等。")]),t._v(" "),r("li",[r("strong",[t._v("执行器")]),t._v("：在执行之前需要判断该用户是否具备权限，如果具备权限就执行 SQL 查询并返回结果。在 MySQL8.0 以下的版本，如果设置了查询缓存，这时会将查询结果进行缓存。")])]),t._v(" "),r("h2",{attrs:{id:"存储引擎"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#存储引擎"}},[t._v("#")]),t._v(" 存储引擎")]),t._v(" "),r("p",[t._v("与 Oracle 不同的是，MySQL 的存储引擎采用了插件的形式，每个存储引擎都面向一种特定的数据库应用环境。同时开源的 MySQL 还允许开发人员设置自己的存储引擎，"),r("strong",[t._v("且 MySQL 中每张表都可以设置为不同的存储引擎")]),t._v("。下面是一些常见的存储引擎：")]),t._v(" "),r("ul",[r("li",[t._v("InnoDB 存储引擎：它是 MySQL 5.5 版本之后默认的存储引擎，最大的特点是支持事务、行级锁定、外键约束等。")]),t._v(" "),r("li",[t._v("MyISAM 存储引擎：MySQL 5.5 版本之前是默认的存储引擎，不支持事务，也不支持外键，最大特点是速度快，占用资源少。")]),t._v(" "),r("li",[t._v("Memory 存储引擎：使用系统内存作为存储介质，以便得到更快的响应速度。不过如果 mysqld 进程崩溃，则会导致所有的数据丢失，因此我们只有当数据是临时的情况下才使用 Memory 存储引擎。")]),t._v(" "),r("li",[t._v("NDB 存储引擎：也叫做 NDB Cluster 存储引擎，主要用于 MySQL Cluster 分布式集群环境，类似于 Oracle 的 RAC 集群。")]),t._v(" "),r("li",[t._v("Archive 存储引擎：它有很好的压缩机制，用于文件归档，在请求写入时会进行压缩，所以也经常用来做仓库。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);