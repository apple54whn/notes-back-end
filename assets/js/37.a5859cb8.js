(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{476:function(t,s,a){t.exports=a.p+"assets/img/String-cache.7a88603e.png"},477:function(t,s,a){t.exports=a.p+"assets/img/params.4d1e2d02.png"},689:function(t,s,a){"use strict";a.r(s);var n=a(11),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"字符串"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),n("h2",{attrs:{id:"string（java-lang）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#string（java-lang）"}},[t._v("#")]),t._v(" String（java.lang）")]),t._v(" "),n("h3",{attrs:{id:"简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),n("p",[n("code",[t._v("String")]),t._v("效果上相当于"),n("code",[t._v("char[]")]),t._v("（Java 8 及之前），但底层是被"),n("code",[t._v("final")]),t._v("修饰的"),n("code",[t._v("byte[]")]),t._v("（Java 9 及之后）。且其实现了"),n("code",[t._v("Serializable")]),t._v("，"),n("code",[t._v("Comparable")]),t._v("，"),n("code",[t._v("CharSequence")]),t._v("接口。"),n("code",[t._v("String")]),n("strong",[t._v("类")]),t._v("及其所有"),n("strong",[t._v("属性")]),t._v("都被"),n("strong",[t._v("声明为"),n("code",[t._v("final")])]),t._v("，是"),n("strong",[t._v("常量")]),t._v("，其"),n("strong",[t._v("值（地址值，不是底层数组）在创建后不能被更改")]),t._v("。")]),t._v(" "),n("h3",{attrs:{id:"不可变性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#不可变性"}},[t._v("#")]),t._v(" 不可变性")]),t._v(" "),n("p",[t._v("由于它的底层结构，具有"),n("strong",[t._v("不可变性")]),t._v("：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("当对字符串重新赋值时，需要"),n("strong",[t._v("重写指定内存区域赋值")]),t._v("，不能使用原有的 value 进行赋值")])]),t._v(" "),n("li",[n("p",[t._v("当执行"),n("code",[t._v("concat")]),t._v("，"),n("code",[t._v("substring")]),t._v("，"),n("code",[t._v("replace")]),t._v("等操作都"),n("strong",[t._v("需要重新指定内存区域赋值")]),t._v("（与常量池无关）")])]),t._v(" "),n("li",[n("p",[t._v("字符串的"),n("code",[t._v("+")]),t._v("运算，若是"),n("strong",[t._v("存在变量相加，先开空间再拼接，结果在堆中")]),t._v("；"),n("strong",[t._v("只有常量则先拼接（类似字面量赋值），然后在常量池中找")]),t._v("，有就返回，没有就创建并放入常量池。如果拼接的结果调用"),n("code",[t._v("intern()")]),t._v("方法，"),n("strong",[t._v("返回值就在常量池中")]),t._v("。字符串常量池中不会存储相同内容的字符串。")])]),t._v(" "),n("li",[n("p",[t._v("加"),n("code",[t._v("final")]),t._v("修饰的也是常量！")]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" charArray "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'h'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'e'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'l'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'l'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'o'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str3 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("charArray"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str4 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str5 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"helloworld"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" str2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" str3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false，同理str2!=str3")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str5 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" str1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" str4"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str5 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str5 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" str1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str5 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("intern")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意final")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"helloworld"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s3 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" s3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s11 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"helloworld"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s22 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s33 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s22 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s11"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" s33"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br")])])]),t._v(" "),n("li",[n("p",[t._v("通过"),n("strong",[t._v("字面量直接赋值")]),t._v("的定义字符串的会"),n("strong",[t._v("放入（Java8）方法区（具体实现为元空间）的字符串常量池")]),t._v("中；但是**"),n("code",[t._v("new String")]),t._v("方式定义的不会放入**。")])])]),t._v(" "),n("p",[n("img",{attrs:{src:a(476),alt:""}})]),t._v(" "),n("ul",[n("li",[n("p",[t._v("特别的，注意"),n("strong",[t._v("对象中的 String 属性")])]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" t1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tom"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nt1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hh"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nt1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xx"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" t2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tom"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nt2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hh"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nt2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xx"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" t2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "=="比较地址值，三处赋值操作都为 true，因此值在常量池中！')]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])])])]),t._v(" "),n("h3",{attrs:{id:"构造方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#构造方法"}},[t._v("#")]),t._v(" 构造方法")]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("String()")]),t._v("：初始化一个新创建的 String 对象，使其表示一个空字符序列")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("String(String original)")]),t._v("：初始化一个新创建的 String 对象")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("String(char/byte[] value [,int offset,int count])")]),t._v("：分配一个新的 String，它包含取自字符数组参数全部（或一个子数组）的字符")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("String(byte[] bytes[,int offset,int length][,String charsetName])")]),t._v("：通过使用指定的"),n("strong",[t._v("字符集解码")]),t._v("指定的 byte （或子）数组，构造一个新的 String")])]),t._v(" "),n("li",[n("p",[n("code",[t._v('String s = "hello"')]),t._v("：直接创建新的 String")]),t._v(" "),n("p",[n("strong",[t._v("字面值")]),t._v("作为"),n("strong",[t._v("字符串对象")]),t._v("（新创建的字符串是该参数字符串的副本）和通过"),n("strong",[t._v("构造方法")]),t._v("创建对象的不同")]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br")])]),n("p",[t._v("前者最多创建两对象，后者最多创建一个对象")])]),t._v(" "),n("li",[n("p",[t._v("……")])])]),t._v(" "),n("h3",{attrs:{id:"常用方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常用方法"}},[t._v("#")]),t._v(" 常用方法")]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),n("p",[n("strong",[t._v("不改变原 String 值")])])]),t._v(" "),n("p",[n("strong",[t._v("判断功能")])]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("boolean isEmpty()")]),t._v(" 字符串长度是否为 0")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("boolean contains(CharSequence cs)")]),t._v(" 字符串中是否包含指定字符序列")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("boolean equals(Object anObject)")]),t._v(" 字符串与指定字符串是否相等("),n("strong",[t._v("内容")]),t._v(")，推荐"),n("strong",[t._v("常量放前面")])]),t._v(" "),n("p",[n("code",[t._v("boolean equalsIgnoreCase(String str)")]),t._v(" 字符串与指定字符串是否相等，忽略大小写")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("boolean startsWith(String prefix[,int toffset])")]),t._v(" 从指定索引开始的子串是否以 prefix 开始")]),t._v(" "),n("p",[n("code",[t._v("boolean endsWith(String suffix)")]),t._v(" 字符串是否以 suffix 后缀结尾")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("boolean matches(String regex)")]),t._v(" 判断此字符串是否匹配给定的正则表达式")])])]),t._v(" "),n("p",[n("strong",[t._v("获取功能")])]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("int length()")]),t._v("：返回字符串长度")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("String concat(String str)")]),t._v(" 将字符串"),n("strong",[t._v("拼接，本字符串不变")]),t._v("，常用"),n("code",[t._v("+")])])]),t._v(" "),n("li",[n("p",[n("code",[t._v("char charAt(int index)")]),t._v(" 返回指定索引的字符")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("int indexOf/lastIndexOf(int ch/String str)")]),t._v(" 获取指定字符/字符串第一次/最后一次出现的索引")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("int indexOf/lastIndexOf(int ch/String str,int fromIndex)")]),t._v(" 获取指定~从**[某索引开始"),n("strong",[t._v("第一次出现的索引/最后一次出现的索引（从指定的索引开始")]),t._v("反向搜索**，但返回值还是正向数数）")]),t._v(" "),n("p",[n("code",[t._v("ch")]),t._v("是"),n("code",[t._v("int")]),t._v("类型原因："),n("code",[t._v("'a'")]),t._v("和"),n("code",[t._v("97")]),t._v("都能代表"),n("code",[t._v("'a'")])]),t._v(" "),n("div",{staticClass:"language-JAVA line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"qqqqqaq"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("lastIndexOf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//大于等于5都能搜到，值为5；小于则返回值为-1")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br")])])]),t._v(" "),n("li",[n("p",[n("code",[t._v("String substring(int startIndex[,int endIndex])")]),t._v(" 获取"),n("code",[t._v("[start,end)")]),t._v("子串，没 end 到结尾")])])]),t._v(" "),n("p",[n("strong",[t._v("替换")])]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("String replace(CharSequence/char target, CharSequence/char replacement)")]),t._v("将"),n("strong",[t._v("所有")]),t._v("target 字符或字符串替换为新的 replacement 字符串。CharSequence 是接口，String 实现了它。用于敏感词汇过滤")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("String replaceAll(String regex, String replacement)")]),t._v("使用给定的 replacement 替换此字符串所有"),n("strong",[t._v("匹配给定的正则表达式的子字符串")])])]),t._v(" "),n("li",[n("p",[n("code",[t._v("String replaceFirst(String regex, String replacement)")]),t._v("使用给定的 replacement 替换此字符串"),n("strong",[t._v("匹配给定的正则表达式的第一个子字符串")])])])]),t._v(" "),n("p",[n("strong",[t._v("转换功能")])]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("String static valueOf(int i/char[] chs)")]),t._v(" "),n("strong",[t._v("静态方法")]),t._v("将 int 型和"),n("strong",[t._v("字符数组型")]),t._v("数据转为字符串")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("String toLowerCase() /toUpperCase()")]),t._v(" 将所有字符都转换为小写/大写，本身不变")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("byte[] getBytes([Charset c/String c])")]),t._v(" 将字符串"),n("strong",[t._v("转换为字节数组")]),t._v("；相反则直接构造器传入")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("char[] toCharArray()")]),t._v(" 将字符串"),n("strong",[t._v("转换为字符数组")]),t._v("；相反则直接构造器传入")])])]),t._v(" "),n("p",[n("strong",[t._v("其他功能")])]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("去空格")]),t._v("（去掉字符串"),n("strong",[t._v("首尾")]),t._v("空格）")]),t._v(" "),n("p",[n("code",[t._v("String trim()")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("按字典比较")]),t._v("（按字典顺序比较，在 str 前返回负数，在 str 后返回正数，相等则返回 0）")]),t._v(" "),n("p",[n("code",[t._v("int compareTo(String str)/compareIgnoreCase(String str)")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("切片")]),t._v("：根据给定"),n("strong",[t._v("正则表达式 regex")]),t._v("的匹配切片，返回字符串数组，"),n("strong",[t._v("不包括 regex 字符串")]),t._v("。"),n("strong",[t._v("最多不超过 limit 个")]),t._v("，如果超过了，剩下的全部都放到最后一个元素中。若要用英文句点"),n("code",[t._v(".")]),t._v("切分，必须写"),n("code",[t._v("\\\\.")]),t._v("。")]),t._v(" "),n("p",[n("code",[t._v("String[] split(String regex [,int limit])")])]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" fbIds "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4542,4540,"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" split "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fbIds"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("split"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])])]),t._v(" "),n("li",[n("p",[t._v("若常量池中包括了一个等于此 String 对象的字符串（由 equals 确定），则返回池中字符串；否则将此字符串添加到池中，并返回其引用")]),t._v(" "),n("p",[n("code",[t._v("inter()")])])])]),t._v(" "),n("h3",{attrs:{id:"类型转换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类型转换"}},[t._v("#")]),t._v(" 类型转换")]),t._v(" "),n("p",[t._v("String 与 基本类型或包装类型之间转换")]),t._v(" "),n("ul",[n("li",[t._v("基本类型 ——> 字符串：\n"),n("ul",[n("li",[n("strong",[n("code",[t._v('基本类型的值+""')])]),t._v("：最简单方法，常用")]),t._v(" "),n("li",[n("strong",[t._v("String 类的静态方法"),n("code",[t._v("valueOf(参数)")])])]),t._v(" "),n("li",[n("strong",[t._v("包装类的静态方法"),n("code",[t._v("toString(参数)")])]),t._v("，不是 Object 类的"),n("code",[t._v("toString()")]),t._v("方法，重载")])])]),t._v(" "),n("li",[t._v("字符串 ——> 基本类型：\n"),n("ul",[n("li",[n("strong",[t._v("包装类的静态方法"),n("code",[t._v("parseXxx()")])])]),t._v(" "),n("li",[n("strong",[t._v("包装类的静态方法"),n("code",[t._v("valueOf(参数)")]),t._v("，转包装类后再转基本类型")])])])])]),t._v(" "),n("h3",{attrs:{id:"习题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#习题"}},[t._v("#")]),t._v(" 习题")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("字符串遍历 "),n("code",[t._v("char charAt(int index)")]),t._v("或"),n("code",[t._v("char[] toCharArray()")])])]),t._v(" "),n("li",[n("p",[t._v("统计大串中小串出现的次数 "),n("code",[t._v("int indexOf(String str,int fromIndex)")]),t._v("或"),n("code",[t._v("substring")])])]),t._v(" "),n("li",[n("p",[t._v("把字符串的首字母转成大写，其他小写 "),n("code",[t._v("String substring(int start,int end)")])])]),t._v(" "),n("li",[n("p",[t._v("把一个小数转换为保留两位小数的字符串，不考虑四舍五入：加空串转为字符串，再用 split 即可")]),t._v(" "),n("ul",[n("li",[t._v("若考虑四舍五入，则可以将保留的数转为整数，再根据后一位值对整数进行加 1 与否")])])]),t._v(" "),n("li",[n("p",[t._v("字符串必须只有字母和数字，如下是不是这种情况的：")]),t._v(" "),n("p",[n("code",[t._v("(ch<='0'||ch>='9') && (ch<='A'||ch>='Z') && (ch<='a'||ch>='z')")])])])]),t._v(" "),n("h2",{attrs:{id:"stringbuilder（java-lang）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#stringbuilder（java-lang）"}},[t._v("#")]),t._v(" StringBuilder（java.lang）")]),t._v(" "),n("blockquote",[n("p",[t._v("StringBuffer 比 StringBuilder 每个方法都多 synchronized")])]),t._v(" "),n("p",[n("code",[t._v("StringBuilder")]),t._v("(字符串缓冲区)，又称为"),n("strong",[t._v("可变字符序列")]),t._v("，表示"),n("strong",[t._v("字符容器")]),t._v("，其"),n("strong",[t._v("内容和长度可变")]),t._v("，不同步，线程不安全。没有"),n("code",[t._v("override")]),t._v("Object 类的"),n("code",[t._v("equals()")]),t._v("方法，不能像 String 类对象可以用操作符+进行连接。")]),t._v(" "),n("h3",{attrs:{id:"底层分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#底层分析"}},[t._v("#")]),t._v(" 底层分析")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("它的"),n("strong",[t._v("底层")]),t._v("是一个**"),n("code",[t._v("char[]")]),t._v("**（"),n("strong",[t._v("Java 9 后为"),n("code",[t._v("byte[]")])]),t._v("），用来存放字符串内容")])]),t._v(" "),n("li",[n("p",[t._v("调用构造方法（默认长度为"),n("code",[t._v("s.length()+16")]),t._v("）或添加字符串时都会调用"),n("code",[t._v("append()")]),t._v("，并更新"),n("code",[t._v("count")]),t._v("即 StringBuilder 的长度，可通过"),n("code",[t._v("length()")]),t._v("获取")]),t._v(" "),n("p",[t._v("它还有个属性"),n("code",[t._v("capacity")]),t._v("代表 StringBuilder 的容量，即底层数组的"),n("code",[t._v("length")]),t._v("，可通过"),n("code",[t._v("capacity()")]),t._v("获取")])]),t._v(" "),n("li",[n("p",[t._v("若添加的数据导致底层数据存不下了（大于），需扩容底层数组：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("先通过"),n("code",[t._v("count+s.length()")]),t._v("减去底层数组的"),n("code",[t._v("length")]),t._v("即 StringBuilder 的"),n("code",[t._v("capacity()")]),t._v(" ，若大于 0 则扩容")])]),t._v(" "),n("li",[n("p",[t._v("调用"),n("code",[t._v("Arrays.copyOf(char[] original,int newLength)")]),t._v("将原数组拷贝到新数组，底层为"),n("code",[t._v("System.arraycopy")]),t._v("，其中"),n("code",[t._v("newLength")]),t._v("为底层数组原有"),n("code",[t._v("capacity")]),n("strong",[t._v("左移一位（即乘 2）并加 2")])]),t._v(" "),n("p",[t._v("若左移一次后还不够，则直接用"),n("code",[t._v("count+s.length()")]),t._v("；甚至左移后超出范围变负值（之后再总结）")])])])])]),t._v(" "),n("h3",{attrs:{id:"构造方法："}},[n("a",{staticClass:"header-anchor",attrs:{href:"#构造方法："}},[t._v("#")]),t._v(" 构造方法：")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("StringBuilder();")]),t._v("构造一个空的 StringBuilder 容器。")]),t._v(" "),n("li",[n("code",[t._v("StringBuilder(String str)")]),t._v("：构造一个 StringBuilder 容器，并将字符串添加进去。")]),t._v(" "),n("li",[n("code",[t._v("StringBuilder(int capacity)")]),t._v("：构造一个 StringBuilder 容器，并设置初始"),n("code",[t._v("capacity")]),t._v("。"),n("strong",[t._v("推荐")]),t._v("使用。")])]),t._v(" "),n("h3",{attrs:{id:"常用方法-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常用方法-2"}},[t._v("#")]),t._v(" 常用方法")]),t._v(" "),n("p",[n("strong",[t._v("在原 StringBuilder 对象中改变并返回本身")]),t._v("，原对象也改变")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("增")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("StringBuilder append(Object o)")]),t._v(" 添加"),n("strong",[t._v("任意类型数据")]),t._v("的"),n("strong",[t._v("字符串形式")]),t._v("到末尾，并"),n("strong",[t._v("返回当前对象")]),t._v("自身")]),t._v(" "),n("li",[n("code",[t._v("StringBuilder append(CharSequence c,int start,int end)")]),t._v("：插入其中[start,end)部分")]),t._v(" "),n("li",[n("code",[t._v("StringBuilder insert(int offset,Object o)")]),t._v(" 在字符串的"),n("strong",[t._v("offset 位置")]),t._v("插入"),n("strong",[t._v("任意对象")]),t._v("，其余后移")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("删")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("StringBuilder delete(int start,int end)")]),t._v(" 删除从**[start 到 end)**的字符串")]),t._v(" "),n("li",[n("code",[t._v("StringBuilder deleteCharAt(int index)")]),t._v(" 删除指定位置字符")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("改")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("StringBuilder replace(int start,int end,String s)")]),t._v(" 从**[start 到 end)**的对象替换为指定字符串")]),t._v(" "),n("li",[n("code",[t._v("void setCharAt(int index,char ch)")]),t._v(" "),n("strong",[t._v("替换指定位置的字符")])])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("查")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("char charAt(int n)")]),t._v(" 返回指定索引处的字符")]),t._v(" "),n("li",[n("code",[t._v("int indexOf(String str)")]),t._v(" 返回指定字符串所在索引")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("反转")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("StringBuilder reverse()")]),t._v(" 反转")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("截取（返回值类型不再是 StringBuilder 本身，原有对象不改变）")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("String substring(int start,int end)")]),t._v(" 截取子串，没有 end 参数时截取到尾部")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("其他")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("int length()")]),t._v(" 返回 StringBuilder 的长度（不是 capacity）")]),t._v(" "),n("li",[n("code",[t._v("void setLength(int newLength)")]),t._v(" 设置 StringBuilder 长度")]),t._v(" "),n("li",[n("code",[t._v("int capacity()")]),t._v(" 返回 StringBuilder 的容量")]),t._v(" "),n("li",[n("code",[t._v("public String toString()")]),t._v(" 将当前 StringBuilder 对象"),n("strong",[t._v("转换为 String 对象")])])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("String 和 StringBuilder 转换")])]),t._v(" "),n("ol",[n("li",[n("p",[n("strong",[t._v("String ---\x3e StringBuilder")]),t._v(" 通过构造函数传入或构造好之后 append()")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("StringBuilder ---\x3e String")]),t._v(" 调用"),n("code",[t._v("toString()")]),t._v("或 String 类的"),n("code",[t._v("valueOf()")]),t._v("静态方法")]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br")])])])])])]),t._v(" "),n("h3",{attrs:{id:"试题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#试题"}},[t._v("#")]),t._v(" 试题")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("String、StringBuffer、StringBuilder 区别")])]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("String 内容、长度不可变，后两个可变")]),t._v("。String 拼接时，总是会在内存中创建一个新对象，影响性能")]),t._v(" "),n("li",[n("strong",[t._v("StringBuffer 是同步的，数据安全，效率低；StringBuilder（5.0 新增）是不同步的，数据不安全，效率高")])]),t._v(" "),n("li",[t._v("底层都是"),n("code",[t._v("char[]")]),t._v("（java8 中）；后两个初始创建"),n("strong",[t._v("长度为"),n("code",[t._v("s.length()+16")]),t._v("的数组")]),t._v("，")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("StringBuilder 和数组的区别")])]),t._v(" "),n("p",[t._v("二者都可以看做装其他数据的容器，但是 StringBuilder 的数据最终是一个字符串数据，而数组可以存放多种类型的数据，但必须是同一种数据类型的")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("参数传递问题")])]),t._v(" "),n("ul",[n("li",[n("p",[t._v("注意：（以下画图即可理解，如下图）")]),t._v(" "),n("p",[n("strong",[t._v("包装类、String 作为引用数据类型，是常量，具有不可变性。")])]),t._v(" "),n("p",[n("strong",[t._v("StringBuffer、StringBuilder 在赋值时不改变内容，调用方法时改变")])]),t._v(" "),n("p",[n("strong",[t._v("【重点】在于 String 内容不可变并且变量相加需要开空间再拼接，StringBuilder 等内容可以变")])])])])])]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[t._v("  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"---"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//hello---world")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("change")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"---"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//hello---world")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),t._v(" sb1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),t._v(" sb2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sb1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"---"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("sb2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//hello---world")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("change")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sb1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("sb2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sb1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"---"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("sb2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//hello---worldworld")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("change")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \ts1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \ts2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("change")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),t._v(" sb1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),t._v(" sb2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \tsb1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sb2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \tsb2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sb1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sb2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br")])]),n("p",[n("img",{attrs:{src:a(477),alt:""}})]),t._v(" "),n("h2",{attrs:{id:"stringjoiner（java-util）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#stringjoiner（java-util）"}},[t._v("#")]),t._v(" StringJoiner（java.util）")]),t._v(" "),n("blockquote",[n("p",[t._v("Java8 新增工具类，低层使用"),n("code",[t._v("StringBuilder")]),t._v("实现")])]),t._v(" "),n("p",[n("code",[t._v("StringJoiner")]),t._v(" 用于构造由 "),n("code",[t._v("delimiter")]),t._v("（界定符） 分隔的字符序列，并可选地以提供的"),n("code",[t._v("prefix")]),t._v("开头和以提供的"),n("code",[t._v("suffix")]),t._v("结尾。")]),t._v(" "),n("p",[t._v("在将某些内容添加到"),n("code",[t._v("StringJoiner")]),t._v("之前，其"),n("code",[t._v("sj.toString()")]),t._v("方法默认情况下将返回前缀 + 后缀。但是，如果调用"),n("code",[t._v("setEmptyValue()")]),t._v("方法，则将返回提供的 emptyValue 。例如，在使用集合符号创建表示空集合的字符串（即"),n("code",[t._v("{}")]),t._v("，前缀为"),n("code",[t._v("{")]),t._v("，后缀为"),n("code",[t._v("}")]),t._v("且未向 "),n("code",[t._v("StringJoiner")]),t._v(" 添加任何内容）时，可以使用此方法。")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("例子：字符串"),n("code",[t._v("[George:Sally:Fred]")]),t._v("可能是由如下如下方式构造的：")]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringJoiner")]),t._v(" sj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringJoiner")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('":"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"["')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"]"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nsj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"George"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sally"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Fred"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" desiredString "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])])])]),t._v(" "),n("h2",{attrs:{id:"stream（java-util）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#stream（java-util）"}},[t._v("#")]),t._v(" Stream（java.util）")]),t._v(" "),n("blockquote",[n("p",[t._v("底层使用"),n("code",[t._v("StringJoiner")]),t._v("实现")])]),t._v(" "),n("ul",[n("li",[n("p",[t._v("语法")]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stream"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("Collectors")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("joining")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CharSequence")]),t._v(" delimiter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CharSequence")]),t._v(" prefix"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CharSequence")]),t._v(" suffix"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])])]),t._v(" "),n("li",[n("p",[t._v("例子（效果同"),n("code",[t._v("StringJoiner")]),t._v("一样）")]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" numbers "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Arrays")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("asList")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" commaSeparatedNumbers "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" numbers"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("stream")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("collect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collectors")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("joining")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br")])])])])])}),[],!1,null,null,null);s.default=r.exports}}]);