(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{581:function(v,s,_){v.exports=_.p+"assets/img/image-20210331012748968.bb2fccf1.png"},582:function(v,s,_){v.exports=_.p+"assets/img/image-20210331012759696.85f64c34.png"},583:function(v,s,_){v.exports=_.p+"assets/img/image-20210331012810811.525925d1.png"},584:function(v,s,_){v.exports=_.p+"assets/img/image-20210331012820376.63220016.png"},585:function(v,s,_){v.exports=_.p+"assets/img/image-20210331012831248.5c082f22.png"},586:function(v,s,_){v.exports=_.p+"assets/img/image-20210331013144168.e7ef846e.png"},756:function(v,s,_){"use strict";_.r(s);var a=_(11),t=Object(a.a)({},(function(){var v=this,s=v.$createElement,a=v._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("h1",{attrs:{id:"企业级解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#企业级解决方案"}},[v._v("#")]),v._v(" 企业级解决方案")]),v._v(" "),a("h2",{attrs:{id:"缓存雪崩-大量key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存雪崩-大量key"}},[v._v("#")]),v._v(" 缓存雪崩—大量key")]),v._v(" "),a("h3",{attrs:{id:"数据库服务器崩溃-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库服务器崩溃-1"}},[v._v("#")]),v._v(" 数据库服务器崩溃—1")]),v._v(" "),a("ol",[a("li",[v._v("系统平稳运行过程中，忽然数据库连接量激增")]),v._v(" "),a("li",[v._v("应用服务器无法及时处理请求")]),v._v(" "),a("li",[v._v("大量408，500错误页面出现")]),v._v(" "),a("li",[v._v("客户反复刷新页面获取数据")]),v._v(" "),a("li",[v._v("数据库崩溃")]),v._v(" "),a("li",[v._v("应用服务器崩溃")]),v._v(" "),a("li",[v._v("重启应用服务器无效")]),v._v(" "),a("li",[v._v("Redis服务器崩溃")]),v._v(" "),a("li",[v._v("Redis集群崩溃")]),v._v(" "),a("li",[v._v("重启数据库后再次被瞬间流量放倒")])]),v._v(" "),a("h3",{attrs:{id:"问题排查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题排查"}},[v._v("#")]),v._v(" 问题排查")]),v._v(" "),a("ol",[a("li",[v._v("在一个"),a("strong",[v._v("较短")]),v._v("的时间内，缓存中"),a("strong",[v._v("较多")]),v._v("的key"),a("strong",[v._v("集中过期（或本来就没有缓存到）")])]),v._v(" "),a("li",[v._v("此周期内请求访问过期的数据，redis未命中，redis向数据库获取数据")]),v._v(" "),a("li",[v._v("数据库同时接收到大量的请求无法及时处理")]),v._v(" "),a("li",[v._v("Redis大量请求被积压，开始出现超时现象")]),v._v(" "),a("li",[v._v("数据库流量激增，数据库崩溃")]),v._v(" "),a("li",[v._v("重启后仍然面对缓存中无数据可用")]),v._v(" "),a("li",[v._v("Redis服务器资源被严重占用，Redis服务器崩溃")]),v._v(" "),a("li",[v._v("Redis集群呈现崩塌，集群瓦解")]),v._v(" "),a("li",[v._v("应用服务器无法及时得到数据响应请求，来自客户端的请求数量越来越多，应用服务器崩溃")]),v._v(" "),a("li",[v._v("应用服务器，redis，数据库全部重启，效果不理想")])]),v._v(" "),a("h3",{attrs:{id:"问题分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题分析"}},[v._v("#")]),v._v(" 问题分析")]),v._v(" "),a("ul",[a("li",[v._v("短时间范围内")]),v._v(" "),a("li",[v._v("大量key集中过期")])]),v._v(" "),a("h3",{attrs:{id:"解决方案（道）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案（道）"}},[v._v("#")]),v._v(" 解决方案（道）")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("更多的页面静态化处理")])]),v._v(" "),a("li",[a("p",[v._v("构建多级缓存架构")]),v._v(" "),a("p",[v._v("Nginx缓存+redis缓存+ehcache缓存")])]),v._v(" "),a("li",[a("p",[v._v("检测Mysql严重耗时业务进行优化")]),v._v(" "),a("p",[v._v("对数据库的瓶颈排查：例如超时查询、耗时较高事务等")])]),v._v(" "),a("li",[a("p",[v._v("灾难预警机制：监控redis服务器性能指标")]),v._v(" "),a("ul",[a("li",[v._v("CPU占用、CPU使用率")]),v._v(" "),a("li",[v._v("内存容量")]),v._v(" "),a("li",[v._v("查询平均响应时间")]),v._v(" "),a("li",[v._v("线程数")])])]),v._v(" "),a("li",[a("p",[v._v("限流、降级")]),v._v(" "),a("p",[v._v("短时间范围内牺牲一些客户体验，限制一部分请求访问，降低应用服务器压力，待业务低速运转后再逐步放开访问")])])]),v._v(" "),a("h3",{attrs:{id:"解决方案（术）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案（术）"}},[v._v("#")]),v._v(" 解决方案（术）")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("LRU与LFU切换")])]),v._v(" "),a("li",[a("p",[v._v("数据有效期策略调整")]),v._v(" "),a("ul",[a("li",[v._v("根据业务数据有效期进行"),a("strong",[v._v("分类错峰")]),v._v("，A类90分钟，B类80分钟，C类70分钟")]),v._v(" "),a("li",[v._v("过期时间使用"),a("strong",[v._v("固定时间+随机值")]),v._v("的形式，稀释集中到期的key的数量 3. 超热数据使用永久key")])])]),v._v(" "),a("li",[a("p",[v._v("定期维护(自动+人工)")]),v._v(" "),a("p",[v._v("对即将过期数据做访问量分析，确认是否延时，配合访问量统计，做热点数据的延时")])]),v._v(" "),a("li",[a("p",[v._v("加锁（如单机锁、分布式锁），防止被击穿，但是要注意也是性能瓶颈，慎重！Redis 使用 -nx "),a("strong",[v._v("加锁")]),v._v("，虽然高并发 Redis 请求都查询不到，但是只有一个能使用 -nx 获取到锁，才能获得 DB 的访问权限（并更新 Redis，释放锁），其他的请求 sleep 等待后下次先查询 Redis（或直接返回）！由此"),a("strong",[v._v("过滤了无效请求")])])])]),v._v(" "),a("h3",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[v._v("#")]),v._v(" 总结")]),v._v(" "),a("p",[v._v("缓存雪崩就是瞬间过期数据量太大，导致对数据库服务器造成压力。如能够有效避免过期时间集中，可以有效解决雪崩现象的出现 (约40%)，配合其他策略一起使用，并监控服务器的运行数据，根据运行记录做快速调整。")]),v._v(" "),a("h2",{attrs:{id:"缓存击穿-单个key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存击穿-单个key"}},[v._v("#")]),v._v(" 缓存击穿—单个key")]),v._v(" "),a("h3",{attrs:{id:"数据库服务器崩溃-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库服务器崩溃-2"}},[v._v("#")]),v._v(" 数据库服务器崩溃—2")]),v._v(" "),a("ol",[a("li",[v._v("系统平稳运行过程中")]),v._v(" "),a("li",[v._v("数据库连接量瞬间激增")]),v._v(" "),a("li",[v._v("Redis服务器无大量key过期 4. Redis内存平稳，无波动")]),v._v(" "),a("li",[v._v("Redis服务器CPU正常")]),v._v(" "),a("li",[v._v("数据库崩溃")])]),v._v(" "),a("h3",{attrs:{id:"问题排查-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题排查-2"}},[v._v("#")]),v._v(" 问题排查")]),v._v(" "),a("ul",[a("li",[v._v("Redis中某个key过期，该key访问量巨大")]),v._v(" "),a("li",[v._v("多个数据请求从服务器直接压到Redis后，均未命中")]),v._v(" "),a("li",[v._v("Redis在短时间内发起了大量对数据库中同一数据的访问")])]),v._v(" "),a("h3",{attrs:{id:"问题分析-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题分析-2"}},[v._v("#")]),v._v(" 问题分析")]),v._v(" "),a("ul",[a("li",[v._v("单个key高热数据")]),v._v(" "),a("li",[v._v("key过期")])]),v._v(" "),a("h3",{attrs:{id:"解决方案（术）-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案（术）-2"}},[v._v("#")]),v._v(" 解决方案（术）")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("预先设定 以电商为例，每个商家根据店铺等级，指定若干款主打商品，在购物节期间，加大此类信息key的过期时长")]),v._v(" "),a("p",[v._v("注意:购物节不仅仅指当天，以及后续若干天，访问峰值呈现逐渐降低的趋势")])]),v._v(" "),a("li",[a("p",[v._v("现场调整")]),v._v(" "),a("p",[v._v("监控访问量，对自然流量激增的数据延长过期时间或设置为永久性key")])]),v._v(" "),a("li",[a("p",[v._v("后台刷新数据")]),v._v(" "),a("p",[v._v("启动定时任务，高峰期来临之前，刷新数据有效期，确保不丢失")])]),v._v(" "),a("li",[a("p",[v._v("二级缓存")]),v._v(" "),a("p",[v._v("设置不同的失效时间，保障不会被同时淘汰就行")])]),v._v(" "),a("li",[a("p",[v._v("加锁（如单机锁、分布式锁），防止被击穿，但是要注意也是性能瓶颈，慎重！Redis 使用 -nx "),a("strong",[v._v("加锁")]),v._v("，虽然高并发 Redis 请求都查询不到，但是只有一个能使用 -nx 获取到锁，才能获得 DB 的访问权限（并更新 Redis，释放锁），其他的请求 sleep 等待后下次先查询 Redis（或直接返回）！由此"),a("strong",[v._v("过滤了无效请求")])])])]),v._v(" "),a("h3",{attrs:{id:"总结-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结-2"}},[v._v("#")]),v._v(" 总结")]),v._v(" "),a("p",[v._v("缓存击穿就是单个高热数据过期的瞬间，数据访问量较大，未命中redis后，发起了大量对同一数据的数据库访问，导致对数据库服务器造成压力。应对策略应该在业务数据分析与预防方面进行，配合运行监控测试与即时调整策略，毕竟单个key的过期监控难度较高，配合雪崩处理策略即可。")]),v._v(" "),a("h2",{attrs:{id:"缓存穿透-没有的key-网警"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存穿透-没有的key-网警"}},[v._v("#")]),v._v(" 缓存穿透—没有的key—网警")]),v._v(" "),a("h3",{attrs:{id:"数据库服务器崩溃-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库服务器崩溃-3"}},[v._v("#")]),v._v(" 数据库服务器崩溃—3")]),v._v(" "),a("ol",[a("li",[v._v("系统平稳运行过程中")]),v._v(" "),a("li",[v._v("应用服务器流量随时间增量较大")]),v._v(" "),a("li",[v._v("Redis服务器命中率随时间逐步降低")]),v._v(" "),a("li",[v._v("Redis内存平稳，内存无压力")]),v._v(" "),a("li",[v._v("Redis服务器CPU占用激增")]),v._v(" "),a("li",[v._v("数据库服务器压力激增")]),v._v(" "),a("li",[v._v("数据库崩溃")])]),v._v(" "),a("h3",{attrs:{id:"问题排查-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题排查-3"}},[v._v("#")]),v._v(" 问题排查")]),v._v(" "),a("ul",[a("li",[v._v("Redis中"),a("strong",[v._v("大面积出现未命中")])]),v._v(" "),a("li",[v._v("出现"),a("strong",[v._v("非正常URL访问")])])]),v._v(" "),a("h3",{attrs:{id:"问题分析-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题分析-3"}},[v._v("#")]),v._v(" 问题分析")]),v._v(" "),a("ul",[a("li",[v._v("获取的数据在"),a("strong",[v._v("数据库中也不存在")]),v._v("，数据库查询未得到对应数据")]),v._v(" "),a("li",[a("strong",[v._v("Redis获取到null数据未进行持久化，直接返回")])]),v._v(" "),a("li",[v._v("下次此类数据到达重复上述过程")]),v._v(" "),a("li",[v._v("出现黑客攻击服务器")]),v._v(" "),a("li",[v._v("注意：Redis 服务端缓冲区的存在，在"),a("strong",[v._v("高并发 Redis 请求到达")]),v._v("时（比如30个）都"),a("strong",[v._v("没有找到该 key")]),v._v("（写缓存是在业务中，需要查询数据库，需要时间的！），此时业务代码中会查询数据库，由于高并发，所以此时大量请求都命中到 DB 上，导致 DB 崩溃")])]),v._v(" "),a("h3",{attrs:{id:"解决方案（术）-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案（术）-3"}},[v._v("#")]),v._v(" 解决方案（术）")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("加锁（如单机锁、分布式锁），防止被击穿，但是要注意也是性能瓶颈，慎重！Redis 使用 -nx "),a("strong",[v._v("加锁")]),v._v("，虽然高并发 Redis 请求都查询不到，但是只有一个能使用 -nx 获取到锁，才能获得 DB 的访问权限（并更新 Redis，释放锁），其他的请求 sleep 等待后下次先查询 Redis（或直接返回）！由此"),a("strong",[v._v("过滤了无效请求")])])]),v._v(" "),a("li",[a("p",[v._v("缓存null值")]),v._v(" "),a("p",[a("strong",[v._v("对查询结果为null的数据进行缓存")]),v._v("(长期使用，定期清理)，设定短时限，例如30-60秒，最高5分钟。但是如果"),a("strong",[v._v("大量 null 值占用空间，则该用布隆过滤器即可")])])]),v._v(" "),a("li",[a("p",[v._v("白名单策略")]),v._v(" "),a("ul",[a("li",[v._v("提前预热各种分类数据id对应的bitmaps，id作为bitmaps的offset，相当于设置了数据白名单。当加载正常数据时，放行，加载异常数据时直接拦截("),a("strong",[v._v("效率偏低")]),v._v(")")]),v._v(" "),a("li",[v._v("使用"),a("strong",[v._v("布隆过滤器")]),v._v("(有关布隆过滤器的命中问题对当前状况可以忽略)")])])]),v._v(" "),a("li",[a("p",[v._v("实施监控")]),v._v(" "),a("p",[v._v("实时监控redis命中率(业务正常范围时，通常会有一个波动值)与null数据的占比")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("非活动时段波动:通常检测3-5倍，超过5倍纳入重点排查对象")])]),v._v(" "),a("li",[a("p",[v._v("活动时段波动:通常检测10-50倍，超过50倍纳入重点排查对象")]),v._v(" "),a("p",[v._v("根据倍数不同，启动不同的排查流程。然后使用黑名单进行防控(运营)")])])])]),v._v(" "),a("li",[a("p",[v._v("key加密")]),v._v(" "),a("p",[v._v("问题出现后，临时启动防灾业务key，对key进行业务层传输加密服务，设定校验程序，过来的key校验")]),v._v(" "),a("p",[v._v("例如每天随机分配60个加密串，挑选2到3个，混淆到页面数据id中，发现访问key不满足规则，驳回数据访问")])])]),v._v(" "),a("h3",{attrs:{id:"总结-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结-3"}},[v._v("#")]),v._v(" 总结")]),v._v(" "),a("p",[v._v("缓存击穿访问了不存在的数据，跳过了合法数据的redis数据缓存阶段，每次访问数据库，导致对数据库服务器造成压力。通常此类 数据的出现量是一个较低的值，当出现此类情况以毒攻毒，并及时"),a("strong",[v._v("报警")]),v._v("。应对策略应该在临时预案防范方面多做文章。")]),v._v(" "),a("p",[v._v("无论是黑名单还是白名单，都是对整体系统的压力，警报解除后尽快移除。")]),v._v(" "),a("h2",{attrs:{id:"缓存预热"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存预热"}},[v._v("#")]),v._v(" 缓存预热")]),v._v(" "),a("h3",{attrs:{id:"宕机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#宕机"}},[v._v("#")]),v._v(" 宕机")]),v._v(" "),a("p",[a("strong",[v._v("Redis 服务器启动后迅速宕机")])]),v._v(" "),a("h3",{attrs:{id:"问题排查-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题排查-4"}},[v._v("#")]),v._v(" 问题排查")]),v._v(" "),a("p",[v._v("特别是 Redis 里没有数据时")]),v._v(" "),a("ul",[a("li",[v._v("请求数量较高")]),v._v(" "),a("li",[v._v("主从之间数据吞吐量较大，数据同步操作频度较高")])]),v._v(" "),a("h3",{attrs:{id:"解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[v._v("#")]),v._v(" 解决方案")]),v._v(" "),a("p",[v._v("前置准备工作:")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("日常例行统计数据访问记录，统计访问频度较高的热点数据")])]),v._v(" "),a("li",[a("p",[v._v("利用LRU数据删除策略，构建数据留存队列")]),v._v(" "),a("p",[v._v("例如：storm与kafka配合")])])]),v._v(" "),a("p",[v._v("准备工作:")]),v._v(" "),a("ul",[a("li",[v._v("将统计结果中的数据分类，根据级别，redis优先加载级别较高的热点数据")]),v._v(" "),a("li",[v._v("利用分布式多服务器同时进行数据读取，提速数据加载过程")]),v._v(" "),a("li",[v._v("热点数据主从同时预热")])]),v._v(" "),a("p",[v._v("实施:")]),v._v(" "),a("ul",[a("li",[v._v("使用脚本程序固定触发数据预热过程")]),v._v(" "),a("li",[v._v("如果条件允许，使用了CDN(内容分发网络)，效果会更好")])]),v._v(" "),a("h3",{attrs:{id:"总结-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结-4"}},[v._v("#")]),v._v(" 总结")]),v._v(" "),a("p",[v._v("缓存预热就是"),a("strong",[v._v("系统启动前")]),v._v("，提前"),a("strong",[v._v("将相关的缓存数据直接加载到缓存系统")]),v._v("。避免在用户请求的时候，先查询数据库，然后再将数据缓 存的问题!用户直接查询事先被预热的缓存数据!")]),v._v(" "),a("h3",{attrs:{id:"布隆过滤器-🔥-未完"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布隆过滤器-🔥-未完"}},[v._v("#")]),v._v(" 布隆过滤器 🔥—未完")]),v._v(" "),a("h2",{attrs:{id:"性能指标监控"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能指标监控"}},[v._v("#")]),v._v(" 性能指标监控")]),v._v(" "),a("h3",{attrs:{id:"性能指标-performance"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能指标-performance"}},[v._v("#")]),v._v(" 性能指标:Performance")]),v._v(" "),a("p",[a("img",{attrs:{src:_(581),alt:"image-20210331012748968"}})]),v._v(" "),a("h3",{attrs:{id:"内存指标-memory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存指标-memory"}},[v._v("#")]),v._v(" 内存指标:Memory")]),v._v(" "),a("p",[a("img",{attrs:{src:_(582),alt:"image-20210331012759696"}})]),v._v(" "),a("h3",{attrs:{id:"基本活动指标-basic-activity"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本活动指标-basic-activity"}},[v._v("#")]),v._v(" 基本活动指标:Basic activity")]),v._v(" "),a("p",[a("img",{attrs:{src:_(583),alt:"image-20210331012810811"}})]),v._v(" "),a("h3",{attrs:{id:"持久性指标-persistence"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#持久性指标-persistence"}},[v._v("#")]),v._v(" 持久性指标:Persistence")]),v._v(" "),a("p",[a("img",{attrs:{src:_(584),alt:"image-20210331012820376"}})]),v._v(" "),a("h3",{attrs:{id:"错误指标-error"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#错误指标-error"}},[v._v("#")]),v._v(" 错误指标:Error")]),v._v(" "),a("p",[a("img",{attrs:{src:_(585),alt:"image-20210331012831248"}})]),v._v(" "),a("h2",{attrs:{id:"监控方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#监控方式"}},[v._v("#")]),v._v(" 监控方式")]),v._v(" "),a("h3",{attrs:{id:"工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工具"}},[v._v("#")]),v._v(" 工具")]),v._v(" "),a("ul",[a("li",[v._v("Cloud Insight Redis")]),v._v(" "),a("li",[v._v("Prometheus")]),v._v(" "),a("li",[v._v("Redis-stat")]),v._v(" "),a("li",[v._v("Redis-faina")]),v._v(" "),a("li",[v._v("RedisLive")]),v._v(" "),a("li",[v._v("zabbix")])]),v._v(" "),a("h3",{attrs:{id:"命令-🔥"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命令-🔥"}},[v._v("#")]),v._v(" 命令 🔥")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("benchmark")])]),v._v(" "),a("li",[a("p",[v._v("redis cli")]),v._v(" "),a("ul",[a("li",[v._v("monitor")]),v._v(" "),a("li",[v._v("showlog")])])])]),v._v(" "),a("h3",{attrs:{id:"benchmark"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#benchmark"}},[v._v("#")]),v._v(" benchmark")]),v._v(" "),a("p",[v._v("命令")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("src/redis-benchmark [-h ] [-p ] [-c ] [-n <requests]> [-k ]\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("范例1。说明:50个连接，10000次请求对应的性能")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("src/redis-benchmark\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("范例2。说明:100个连接，5000次请求对应的性能")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("src/redis-benchmark -c 100 -n 5000\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:_(586),alt:"image-20210331013144168"}})]),v._v(" "),a("h3",{attrs:{id:"monitor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#monitor"}},[v._v("#")]),v._v(" monitor")]),v._v(" "),a("p",[v._v("命令。进入 redis-cli 后")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("monitor\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("打印服务器调试信息")]),v._v(" "),a("h3",{attrs:{id:"showlong"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#showlong"}},[v._v("#")]),v._v(" showlong")]),v._v(" "),a("p",[v._v("命令")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("showlong [operator]\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("ul",[a("li",[v._v("get :获取慢查询日志")]),v._v(" "),a("li",[v._v("len :获取慢查询日志条目数")]),v._v(" "),a("li",[v._v("reset :重置慢查询日志")])]),v._v(" "),a("p",[v._v("相关配置")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("slowlog-log-slower-than 1000 #设置慢查询的时间下线，单位:微妙 \nslowlog-max-len 100 #设置慢查询命令对应的日志显示长度，单位:命令数\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br")])])])}),[],!1,null,null,null);s.default=t.exports}}]);