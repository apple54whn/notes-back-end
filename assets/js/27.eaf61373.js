(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{486:function(s,t,a){s.exports=a.p+"assets/img/image-20191007235010685.0a520a98.png"},487:function(s,t,a){s.exports=a.p+"assets/img/HashMap1.87973e3e.png"},488:function(s,t,a){s.exports=a.p+"assets/img/HashMap.58e67eae.png"},707:function(s,t,a){"use strict";a.r(t);var n=a(11),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"map"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[s._v("#")]),s._v(" Map")]),s._v(" "),n("p",[n("img",{attrs:{src:a(486),alt:"image-20191007235010685"}})]),s._v(" "),n("ul",[n("li",[n("p",[n("strong",[s._v("键值对")]),s._v("。类似函数：一个映射不能包含重复的键，每个键最多只能映射到一个值（"),n("strong",[s._v("键唯一，值可重复")]),s._v("），其实现类都重写了"),n("code",[s._v("toString()")]),s._v("方法")])]),s._v(" "),n("li",[n("p",[s._v("Map 中的"),n("strong",[s._v("结构")]),s._v("：")]),s._v(" "),n("ul",[n("li",[s._v("key：无序、不可重复，使用 Set 存储。需重写 "),n("code",[s._v("equals()")]),s._v(" 、"),n("code",[s._v("HahsCode()")]),s._v("（根据是否是 Hash 存储）")]),s._v(" "),n("li",[s._v("value：无序、可重复，使用 Collection 存储。需重写 "),n("code",[s._v("equals()")])]),s._v(" "),n("li",[s._v("Entry：一个 key-value 对构成了一个 Entry 对象，使用 Set 存储")])])]),s._v(" "),n("li",[n("p",[s._v("带有"),n("code",[s._v("Hash*")]),s._v("存储自定义的对象时"),n("strong",[s._v("必须重写")]),n("code",[s._v("hashCode()")]),s._v("和"),n("code",[s._v("equal()")]),s._v("方法，且重写的俩方法尽可能保持"),n("strong",[s._v("一致性")]),s._v("（即相等的对象必须有相同的 hashCode ，不相等亦如此）")])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("常用方法")])]),s._v(" "),n("ul",[n("li",[n("p",[n("strong",[s._v("添加、修改")])]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("V put(K key,V value)")])]),s._v(" "),n("p",[s._v("如果键是第一次存储，就直接存储元素，"),n("strong",[s._v("返回以前的值")]),s._v("null")]),s._v(" "),n("p",[s._v("如果键不是第一次存储，就替换掉以前的值，并"),n("strong",[s._v("返回以前的值")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("void putAll(Map<? extends K, ? extends V> m)")]),s._v("：每个元素单独 put")])])])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("删除")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("void clear()")]),s._v(" 删除所有映射关系")]),s._v(" "),n("li",[n("code",[s._v("V remove(Object key")]),s._v(") 根据键删除键值对元素，key 为空返回 null，否则返回值")])])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("获取")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("V get(Object key)")]),s._v(" 根据键获取值")]),s._v(" "),n("li",[n("code",[s._v("Set<K> keySet()")]),s._v(" 返回所有键的集合")]),s._v(" "),n("li",[n("code",[s._v("Collection<V> values()")]),s._v(" 返回所有值的集合")]),s._v(" "),n("li",[n("code",[s._v("Set<Map.Entry<K,V>> entrySet()")]),s._v(" 返回映射关系的 Set 集合")])])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("判断")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("boolean isEmpty()")]),s._v(" 是否为空")]),s._v(" "),n("li",[n("code",[s._v("boolean containsKey(Object key)")]),s._v(" 是否包"),n("strong",[s._v("含指定键值")])]),s._v(" "),n("li",[n("code",[s._v("boolean containsValue(Object value)")]),s._v(" 是否"),n("strong",[s._v("包含指定值")])])])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("容量")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("int size()")]),s._v(" 返回映射中键值对的对数")])])])])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("遍历方法")])]),s._v(" "),n("ul",[n("li",[n("p",[n("strong",[s._v("JDK1.8 及以后推荐使用"),n("code",[s._v("Stream")]),s._v("的"),n("code",[s._v("foreach()")]),s._v("方法，lambda 表达式")])])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("键值对（"),n("code",[s._v("entrySet()")]),s._v("/"),n("code",[s._v("getKey()")]),s._v("/"),n("code",[s._v("getValue()")]),s._v("）")]),s._v("，获取存储键值对对象的 Set 结合。推荐此方法。")]),s._v(" "),n("p",[s._v("Map 集合一创建，就会在 Map 集合中创建一个 Entry 对象，用来记录键值对对象（"),n("code",[s._v("Map.Entry<K,V>")]),s._v(")")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Set")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Map"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Entry")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" set "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" hm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("entrySet")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Map"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Entry")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" entry"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("set"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("entry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1=hello")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("entry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getKey")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"---"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("entry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1---hello")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("ul",[n("li",[n("p",[n("strong",[s._v("键找值（"),n("code",[s._v("keySet()")]),s._v("/"),n("code",[s._v("get()")]),s._v("）")])]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Set")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" set "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" hm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("keySet")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("set"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"---"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("hm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//或")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Iterator")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" it "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" set"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("iterator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("it"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("hasNext")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" key  "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" it"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" value "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" hm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"---"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("strong",[n("code",[s._v("values()")]),s._v("方法，存储 Map 中值的 Collection 集合")])]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Collection")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" values "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" hm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" value"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("values"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])])])])])])])]),s._v(" "),n("h2",{attrs:{id:"hashmap"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hashmap"}},[s._v("#")]),s._v(" HashMap")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("底层数据结构是"),n("strong",[s._v("哈希表（元素为链表或红黑树的数组）")]),s._v("，查询快。"),n("strong",[s._v("根据"),n("code",[s._v("hashCode")]),s._v("决定元素的存放位置")]),s._v("，但"),n("strong",[s._v("迭代出的元素顺序和存入顺序不一定一致")]),s._v("，底层存储"),n("strong",[s._v("不稳定")]),s._v("（hash 重排）。")])]),s._v(" "),n("li",[n("p",[s._v("HashMap 源码中的重要常量")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("DEFAULT_INITIAL_CAPACITY")]),s._v(" : HashMap 的默认容量，16")]),s._v(" "),n("li",[n("code",[s._v("MAXIMUM_CAPACITY")]),s._v(" : HashMap 的最大支持容量，2^30")]),s._v(" "),n("li",[n("code",[s._v("DEFAULT_LOAD_FACTOR")]),s._v(":HashMap 的默认加载因子，0.75")]),s._v(" "),n("li",[n("code",[s._v("TREEIFY_THRESHOLD")]),s._v(":Bucket 中链表长度大于该默认值，转化为红黑树")]),s._v(" "),n("li",[n("code",[s._v("UNTREEIFY_THRESHOLD")]),s._v(":Bucket 中红黑树存储的 Node 小于该默认值，转化为链表")]),s._v(" "),n("li",[n("code",[s._v("MIN_TREEIFY_CAPACITY")]),s._v(":桶中的 Node 被树化时最小的 hash 表容量，64。（当桶中 Node 的数量大到需要变红黑树时，若 hash 表容量小于"),n("code",[s._v("MIN_TREEIFY_CAPACITY")]),s._v("时，此时应执行 resize 扩容操作这个"),n("code",[s._v("MIN_TREEIFY_CAPACITY")]),s._v("的值至少是"),n("code",[s._v("TREEIFY_THRESHOLD")]),s._v("的 4 倍）")]),s._v(" "),n("li",[n("code",[s._v("table")]),s._v(":存储元素的数组，总是 2 的 n 次幂")]),s._v(" "),n("li",[n("code",[s._v("entrySet")]),s._v(":存储具体元素的集")]),s._v(" "),n("li",[n("code",[s._v("size")]),s._v(":HashMap 中存储的键值对的数量")]),s._v(" "),n("li",[n("code",[s._v("modCount")]),s._v(":HashMap 扩容和结构改变的次数。")]),s._v(" "),n("li",[n("code",[s._v("threshold")]),s._v(":扩容的临界值，容量*填充因子")]),s._v(" "),n("li",[n("code",[s._v("loadFactor")]),s._v(":填充因子")])])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("底层实现原理")]),s._v("（JDK7）：")]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("HashMap")]),s._v("的内部存储结构其实是"),n("strong",[s._v("数组和链表")]),s._v("的结合。当实例化一个"),n("code",[s._v("HashMap")]),s._v("时， 系统会创建一个长度为"),n("code",[s._v("Capacity")]),s._v("的"),n("code",[s._v("Entry")]),s._v("数组，这个长度在哈希表中被称为容量 (Capacity)，在这个数组中可以存放元素的位置我们称之为“"),n("strong",[s._v("桶")]),s._v("”（"),n("code",[s._v("bucket")]),s._v("），每个"),n("code",[s._v("bucket")]),s._v("都有自己的索引，系统可以根据索引快速的查找"),n("code",[s._v("bucket")]),s._v("中的元素。")]),s._v(" "),n("p",[s._v("每个"),n("code",[s._v("bucket")]),s._v("中存储一个元素，即一个"),n("code",[s._v("Entry")]),s._v("对象，但每一个"),n("code",[s._v("Entry")]),s._v("对象可以带一个引用变量，用于指向下一个元素，因此，在一个桶中，就有可能生成一个"),n("code",[s._v("Entry")]),s._v("链。 而且新添加的元素作为链表的"),n("code",[s._v("head")]),s._v("。")]),s._v(" "),n("p",[n("code",[s._v("HashMap map = new HashMap([int initialCapacity])")]),s._v("在实例化以后，底层创建了**长度是"),n("code",[s._v("initialCapacity")]),s._v("（默认 16）**的一维数组"),n("code",[s._v("Entry[] table")])])]),s._v(" "),n("li",[n("p",[s._v("可能已经执行过多次"),n("code",[s._v("put(.)")]),s._v("，"),n("code",[s._v("map.put(key1,value1)")]),s._v("。首先，调用"),n("code",[s._v("key1")]),s._v("所在类的"),n("code",[s._v("hashCode()")]),s._v("和其他算法计算其 "),n("code",[s._v("hash")]),s._v("，此"),n("code",[s._v("hash")]),s._v("经过某种算法计算以后（位运算方式取模），得到在"),n("code",[s._v("Entry[]")]),s._v("中的存放位置。")]),s._v(" "),n("ul",[n("li",[s._v("如果此位置上的数据为空，此时的 key1-value1 即 Entry 添加成功。 ——情况 1")]),s._v(" "),n("li",[s._v("如果此位置上的数据不为空（意味着此位置上存在一个或多个数据（以链表形式存在）），比较 key1 和已经存在的一个或多个数据的"),n("code",[s._v("hash")]),s._v("：\n"),n("ul",[n("li",[s._v("如果 key1 的"),n("code",[s._v("hash")]),s._v("与已经存在的数据的"),n("code",[s._v("hash")]),s._v("都不相同，此时 key1-value1 添加成功。——情况 2")]),s._v(" "),n("li",[s._v("如果 key1 的"),n("code",[s._v("hash")]),s._v("和已经存在的某一个数据(key2-value2)的"),n("code",[s._v("hash")]),s._v("相同，继续比较：调用 key1 所在类的"),n("code",[s._v("equals(key2)")]),s._v("方法，比较：\n"),n("ul",[n("li",[s._v("如果"),n("code",[s._v("equals()")]),s._v("返回"),n("code",[s._v("false")]),s._v("：此时 key1-value1 添加成功。——情况 3")]),s._v(" "),n("li",[s._v("如果"),n("code",[s._v("equals()")]),s._v("返回"),n("code",[s._v("true")]),s._v("：使用"),n("strong",[s._v("value1 替换 value2")]),s._v("。")])])])])])])]),s._v(" "),n("li",[n("p",[s._v("关于情况 2 和情况 3：此时 key1-value1 和原来的数据以链表的方式存储。")])]),s._v(" "),n("li",[n("p",[s._v("当"),n("code",[s._v("HashMap")]),s._v("中的元素越来越多的时候，"),n("code",[s._v("hash")]),s._v("冲突的几率也就越来越高，因为数组的长度是固定的。所以为了提高查询的效率，就要对"),n("code",[s._v("HashMap")]),s._v("的数组进行扩容，而在"),n("code",[s._v("HashMap")]),s._v("数组扩容之后，最消耗性能的点就出现了："),n("strong",[s._v("原数组中的数据必须重新计算其在新数组中的位置")]),s._v("，并放进去，这就是"),n("code",[s._v("resize")]),s._v("。在超出临界值（"),n("strong",[s._v("使用率大于等于 0.75，且要存放的位置非空")]),s._v("）时进行扩容。默认的扩容方式：扩容为原来容量的"),n("strong",[s._v("2 倍")]),s._v("，并将原有的数据复制过来。所以如果我们已经预知"),n("code",[s._v("HashMap")]),s._v("中元素的个数， 那么预设元素的个数能够有效的提高"),n("code",[s._v("HashMap")]),s._v("的性能。")])])])]),s._v(" "),n("li",[n("p",[s._v("JDK8 相较于 JDK7 在底层实现方面的不同：")]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("new HashMap([int initialCapacity])")]),s._v("底层没有创建一个长度为"),n("code",[s._v("initialCapacity")]),s._v("的数组（默认 16），首次调用"),n("code",[s._v("put()")]),s._v("方法时，底层创建长度为"),n("code",[s._v("initialCapacity")]),s._v("的数组")])]),s._v(" "),n("li",[n("p",[s._v("JDK8 底层的数组是："),n("code",[s._v("Node[]")]),s._v("，而非"),n("code",[s._v("Entry[]")])]),s._v(" "),n("p",[s._v("每个"),n("code",[s._v("bucket")]),s._v("中存储一个元素，即一个"),n("code",[s._v("Node")]),s._v("对象，但每一个"),n("code",[s._v("Node")]),s._v("对象可以带 一个引用变量"),n("code",[s._v("next")]),s._v("，用于指向下一个元素，因此，在一个桶中，就有可能 生成一个"),n("code",[s._v("Node")]),s._v("链。也可能是一个一个"),n("code",[s._v("TreeNode")]),s._v("对象，每一个"),n("code",[s._v("TreeNode")]),s._v("对象可以有两个叶子结点"),n("code",[s._v("left")]),s._v("和"),n("code",[s._v("right")]),s._v("，因此，在一个桶中，就有可能生成一个"),n("code",[s._v("TreeNode")]),s._v("树。而新添加的元素作为链表的"),n("code",[s._v("last")]),s._v("，或树的叶子结点。")])]),s._v(" "),n("li",[n("p",[s._v("JDK7 底层结构只有：数组+链表。JDK8 中底层结构：数组+链表/红黑树。")]),s._v(" "),n("ul",[n("li",[s._v("形成链表时，七上八下（JDK7：新的元素指向旧的元素。JDK8：旧的元素指向新的元素，新元素在链表尾部）")]),s._v(" "),n("li",[s._v("当数组的某一个索引位置上（桶）的元素以链表形式存在的数据个数 >= 8 且当前数组的长度 >= 64 时，此时此索引位置上的所数据改为使用红黑树存储；否则扩容，不进行转树操作。如果当映射关系被移除后， 下次"),n("code",[s._v("resize")]),s._v("方法时判断树的结点个数低于 6 个，也会把树再转为链表。")])])])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("HashMap")]),s._v("中的内部类"),n("code",[s._v("Node")])]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("K")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Map"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Entry")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("K")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" hash"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("K")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),s._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("K")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" next"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v('"重地"和""通话""元素不同，但哈希值相同，'),n("strong",[s._v("哈希冲突")])]),s._v(" "),n("p",[n("img",{attrs:{src:a(487),alt:""}})])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("哈希表元素唯一性")]),s._v("底层依赖两个方法："),n("strong",[n("code",[s._v("hashCode()")]),s._v("和"),n("code",[s._v("equals()")])]),s._v("，必须重写")]),s._v(" "),n("p",[n("img",{attrs:{src:a(488),alt:"HashMap"}})])])]),s._v(" "),n("h2",{attrs:{id:"linkedhashmap"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#linkedhashmap"}},[s._v("#")]),s._v(" LinkedHashMap")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("继承"),n("code",[s._v("HashMap")]),s._v("，底层是"),n("strong",[s._v("双向链表和哈希表")]),s._v("，迭代出的元素顺序和存入顺序"),n("strong",[s._v("一致")])]),s._v(" "),n("p",[s._v("在添加元素时重写了方法，"),n("code",[s._v("LinkedHashMap")]),s._v("中的内部类"),n("code",[s._v("Entry")])]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Entry")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("K")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HashMap"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Node")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("K")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Entry")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("K")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" before"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" after"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Entry")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" hash"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("K")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),s._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("K")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" next"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("super")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hash"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" next"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("LinkedHashMap")]),n("strong",[s._v("插入性能略低")]),s._v("于 "),n("code",[s._v("HashMap")]),s._v("，但在"),n("strong",[s._v("迭代访问")]),s._v(" "),n("code",[s._v("Map")]),s._v(" 里的"),n("strong",[s._v("全部元素")]),s._v("时"),n("strong",[s._v("有很好的性能")]),s._v("。")]),s._v(" "),n("p",[s._v("​")]),s._v(" "),n("p",[s._v("​")])])]),s._v(" "),n("h2",{attrs:{id:"treemap"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#treemap"}},[s._v("#")]),s._v(" TreeMap")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("底层数据结构是"),n("strong",[s._v("红黑树（自平衡二叉树），有序")]),s._v("。使用"),n("code",[s._v("TreeMap")]),s._v("保存自定义元素，这个元素的"),n("strong",[s._v("key 必须实现"),n("code",[s._v("Comparable")]),s._v("接口")]),s._v("或构造时"),n("strong",[s._v("必须提供"),n("code",[s._v("Comparator")]),s._v("实现类")])]),s._v(" "),n("ul",[n("li",[s._v("元素唯一性通过红黑树存储时确定，相同元素丢弃， "),n("strong",[s._v("根据"),n("code",[s._v("compareTo")]),s._v("返回值是否是 0 来决定")])]),s._v(" "),n("li",[s._v("元素的顺序通过红黑树存储，并通过"),n("strong",[s._v("中（根）序遍历展示")])])])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("保证元素的排列方式（按照 key 排序）：")])]),s._v(" "),n("ol",[n("li",[n("p",[n("strong",[s._v("自然排序（元素具备比较性）")]),s._v("："),n("code",[s._v("Map")]),s._v(" 中的 "),n("code",[s._v("key")]),s._v(" 实现"),n("code",[s._v("Comparable")]),s._v("接口，重写"),n("code",[s._v("compareTo")]),s._v("。")]),s._v(" "),n("p",[s._v("向 "),n("code",[s._v("TreeMap")]),s._v(" 中添加元素时，只有第一个元素无须比较"),n("code",[s._v("compareTo()")]),s._v("方法，后面添加的所有元素都会调用"),n("code",[s._v("compareTo()")]),s._v("方法进行比较。且重写该对象对应的 "),n("code",[s._v("equals()")]),s._v(" 方法时，应保证该方法与 "),n("code",[s._v("compareTo(Object obj)")]),s._v(" 方法有一致的结果")])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("比较器排序（集合具备比较性）")]),s._v("：集合构造方法接收"),n("code",[s._v("key")]),s._v("实现"),n("code",[s._v("Comparator")]),s._v("接口的对象，重写"),n("code",[s._v("compare")]),s._v("。")]),s._v(" "),n("p",[s._v("向 "),n("code",[s._v("TreeMap")]),s._v(" 中添加元素时，只有第一个元素无须比较"),n("code",[s._v("compare()")]),s._v("方法，后面添加的所有元素都会调用"),n("code",[s._v("compare()")]),s._v("方法进行比较。且重写该对象对应的 "),n("code",[s._v("equals()")]),s._v(" 方法时，应保证该方法与 "),n("code",[s._v("compare()")]),s._v(" 方法有一致的结果")])]),s._v(" "),n("li",[n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TreeMap")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" map "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TreeMap")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Comparator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("comparingInt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getAge")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("thenComparing")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])])])])])]),s._v(" "),n("h2",{attrs:{id:"hashtable"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hashtable"}},[s._v("#")]),s._v(" Hashtable")]),s._v(" "),n("ul",[n("li",[s._v("线程安全，效率低，相比 HashMap 来说"),n("strong",[s._v("不能存储 null 的 key 或 value")])])]),s._v(" "),n("h2",{attrs:{id:"properties"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[s._v("#")]),s._v(" Properties")]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("java.util.Properties")]),s._v(" 继承自"),n("code",[s._v("Hashtable")]),s._v(" ，来表示一个持久的"),n("strong",[s._v("属性集")]),s._v("。每个键及其对应值都是**"),n("code",[s._v("String")]),n("strong",[s._v("。可以")]),s._v("保存在流中或从流中加载**，常用于处理配置文件。")])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("特有功能")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("Object setProperty(String key,String value)")]),s._v(" 添加元素，调用的父类的 put 方法")]),s._v(" "),n("li",[n("code",[s._v("String getProperty(String key)")]),s._v(" 获取元素")]),s._v(" "),n("li",[n("code",[s._v("Set<String> stringPropertyNames()")]),s._v(" 获取所有键的集合")])])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("和 IO 流结合的方法")])]),s._v(" "),n("ul",[n("li",[n("p",[s._v("把"),n("strong",[s._v("键值对形式的文本")]),s._v("文件内容"),n("strong",[s._v("加载")]),s._v("到集合中")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("void load(InputStream inStream)")]),s._v("：不能读取含有中文的键值对")]),s._v(" "),n("li",[n("code",[s._v("void load(Reader reader)")]),s._v("：能读取含有中文的键值对，"),n("strong",[s._v("所以一般用字符流")])])])]),s._v(" "),n("li",[n("p",[s._v("把集合中的数据"),n("strong",[s._v("存储")]),s._v("到文本文件中")]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("void store(OutputStream out,String comments)")]),s._v("：不能写中文")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("void store(Writer writer,String comments)")]),s._v("："),n("strong",[s._v("可以写中文")])]),s._v(" "),n("p",[s._v("comments 说明保存文字的用途，不能使用中文会乱码，默认是 Unicode 编码。一般空串"),n("code",[s._v('""')])])])])])])])]),s._v(" "),n("blockquote",[n("p",[s._v("文本中的数据，必须是键值对形式，默认就是字符串，不用加双引。可使用=、空格等分隔。#为注释。")])]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("myLoad")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IOException")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BufferedInputStream")]),s._v(" bis "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BufferedInputStream")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FileInputStream")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"prop.txt"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Properties")]),s._v(" prop "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Properties")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\tprop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("load")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bis"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Set")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" set "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("stringPropertyNames")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" set"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("equals")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lisi"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t\tprop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"100"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//还需要保存到指定文件，略。方法同下方myStore()。")]),s._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\tbis"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("close")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("myStore")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IOException")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Properties")]),s._v(" prop "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Properties")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\tprop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zhangsan"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\tprop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lisi"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"4"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\tprop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"wangwu"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"5"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BufferedOutputStream")]),s._v(" bos "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BufferedOutputStream")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FileOutputStream")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"prop.txt"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\tprop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("store")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mystore"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\tbos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("close")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);