(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{693:function(t,e,a){"use strict";a.r(e);var n=a(11),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"精确数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#精确数据类型"}},[t._v("#")]),t._v(" 精确数据类型")]),t._v(" "),a("h2",{attrs:{id:"biginteger"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#biginteger"}},[t._v("#")]),t._v(" BigInteger")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Integer")]),t._v("类作为int的包装类，能存储的最大整型值为"),a("code",[t._v("2^31-1")]),t._v("，"),a("code",[t._v("Long")]),t._v("类也是有限的， 最大为"),a("code",[t._v("2^63-1")]),t._v("。如果要表示再大的整数，不管是基本数据类型还是他们的包装类都无能为力，更不用说进行运算了。")]),t._v(" "),a("li",[a("code",[t._v("java.math")]),t._v("包的"),a("code",[t._v("BigInteger")]),t._v("可以表示不可变的"),a("strong",[t._v("任意精度")]),t._v("的整数。"),a("code",[t._v("BigInteger")]),t._v(" 提供所有 Java 的基本整数操作符的对应物，并提供 "),a("code",[t._v("java.lang.Math")]),t._v(" 的所有相关方法。 另外，"),a("code",[t._v("BigInteger")]),t._v(" 还提供以下运算：模算术、GCD 计算、质数测试、素数生成、位操作以及一些其他操作。")]),t._v(" "),a("li",[t._v("静态常量\n"),a("ul",[a("li",[a("code",[t._v("BigInteger ZERO")]),t._v(" The BigInteger constant zero.")]),t._v(" "),a("li",[a("code",[t._v("BigInteger ONE")]),t._v(" The BigInteger constant one.")]),t._v(" "),a("li",[a("code",[t._v("BigInteger TWO")]),t._v(" "),a("code",[t._v("SINCE 9")]),t._v(",The BigInteger constant two.")]),t._v(" "),a("li",[a("code",[t._v("BigInteger TEN")]),t._v(" The BigInteger constant ten.")])])]),t._v(" "),a("li",[t._v("构造方法\n"),a("ul",[a("li",[a("code",[t._v("BigInteger(String val)")]),t._v("：根据字符串构建BigInteger对象")])])]),t._v(" "),a("li",[t._v("常用方法\n"),a("ul",[a("li",[a("code",[t._v("public BigInteger abs()")]),t._v(" 返回此 BigInteger 的绝对值的 BigInteger")]),t._v(" "),a("li",[a("code",[t._v("BigInteger add(BigInteger val)")]),t._v(" 返回其值为 (this + val) 的 BigInteger")]),t._v(" "),a("li",[a("code",[t._v("BigInteger subtract(BigInteger val)")]),t._v(" 返回其值为 (this - val) 的 BigInteger")]),t._v(" "),a("li",[a("code",[t._v("BigInteger multiply(BigInteger val)")]),t._v(" 返回其值为 (this * val) 的 BigInteger")]),t._v(" "),a("li",[a("code",[t._v("BigInteger divide(BigInteger val)")]),t._v(" 返回其值为 (this / val) 的 BigInteger。整数相除只保留整数部分。")]),t._v(" "),a("li",[a("code",[t._v("BigInteger remainder(BigInteger val)")]),t._v(" 返回其值为 (this % val) 的 BigInteger")]),t._v(" "),a("li",[a("code",[t._v("BigInteger[] divideAndRemainder(BigInteger val)")]),t._v("返回包含 (this / val) 后跟(this % val) 的两个 BigInteger 的数组")]),t._v(" "),a("li",[a("code",[t._v("BigInteger pow(int exponent)")]),t._v(" :返回其值为 "),a("code",[t._v("this^exponent")]),t._v(" 的 BigInteger。")]),t._v(" "),a("li",[a("code",[t._v("int compareTo(BigInteger val)")]),t._v(" "),a("strong",[t._v("Compares")]),t._v(" this BigInteger with the specified BigInteger.")])])])]),t._v(" "),a("h2",{attrs:{id:"bigdecimal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bigdecimal"}},[t._v("#")]),t._v(" BigDecimal")]),t._v(" "),a("p",[t._v("一般的Float类和Double类可以用来做科学计算或工程计算，但在商业计算中，要求数字精度比较高，故用到"),a("code",[t._v("java.math.BigDecimal")]),t._v("类。浮点数据做运算，会丢失精度。所以，针对浮点数据的操作建议采用"),a("code",[t._v("BigDecimal")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("静态常量")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("BigDecimal ONE")]),t._v(" The value 1, with a scale of 0.")]),t._v(" "),a("li",[a("code",[t._v("BigDecimal TEN")]),t._v(" The value 10, with a scale of 0.")]),t._v(" "),a("li",[a("code",[t._v("BigDecimal ZERO")]),t._v(" The value 0, with a scale of 0.")]),t._v(" "),a("li",[a("code",[t._v("Enum RoundingMode")]),a("strong",[t._v("有需要舍入的方法时，采用该枚举类")]),t._v("，替换之前的BigDecimal下的静态常量")])])]),t._v(" "),a("li",[a("p",[t._v("构造方法（尽量使用参数类型为"),a("strong",[t._v("String")]),t._v("的构造方法）")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("BigDecimal(double val)")])]),t._v(" "),a("li",[a("code",[t._v("BigDecimal(String val)")])])])]),t._v(" "),a("li",[a("p",[t._v("常用方法")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("BigDecimal add(BigDecimal augend)")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("BigDecimal subtract(BigDecimal subtrahend)")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("BigDecimal multiply(BigDecimal multiplicand)")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("BigDecimal divide(BigDecimal divisor, int scale, int roundingMode)")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("int compareTo(BigDecimal val)")]),t._v(" Compares this "),a("code",[t._v("BigDecimal")]),t._v(" with the specified "),a("code",[t._v("BigDecimal")]),t._v(".")])])])]),t._v(" "),a("li",[a("p",[t._v("BigDecimal都是不可变的（immutable）的，在进行每一步运算时，都会产生一个新的对象，所以在做加减乘除运算时千万要"),a("strong",[t._v("保存操作后的值")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigInteger")]),t._v(" bi "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigInteger")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"12433241123"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigDecimal")]),t._v(" bd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigDecimal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"12435.351"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigDecimal")]),t._v(" bd2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigDecimal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"11"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// java.lang.ArithmeticException: Non-terminating decimal expansion; no exact representable decimal result.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// System.out.println(bd.divide(bd2)); // 不能除尽，需指定精度")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("divide")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bd2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigDecimal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ROUND_HALF_UP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 除数;精度;四舍五入")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("divide")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bd2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigDecimal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ROUND_HALF_UP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])])])])])}),[],!1,null,null,null);e.default=s.exports}}]);